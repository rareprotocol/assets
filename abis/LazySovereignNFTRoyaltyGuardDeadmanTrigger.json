{
  "abi": [
    {
      "inputs": [],
      "name": "CantAddToOFFList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadmanTriggerStillActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_addedAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_ListType",
          "type": "uint8"
        }
      ],
      "name": "AddressAddedToList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_removedAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_ListType",
          "type": "uint8"
        }
      ],
      "name": "AddressRemovedList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "ContractDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_activator",
          "type": "address"
        }
      ],
      "name": "DeadmanTriggerActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_oldDatetime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newDatetime",
          "type": "uint256"
        }
      ],
      "name": "DeadmanTriggerDatetimeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "ListCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_oldListType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_newListType",
          "type": "uint8"
        }
      ],
      "name": "ListTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "PrepareMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "activateDeadmanListTrigger",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_addrs",
          "type": "address[]"
        }
      ],
      "name": "batchAddAddressToRoyaltyList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_addrs",
          "type": "address[]"
        }
      ],
      "name": "batchRemoveAddressToRoyaltyList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "clearList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "deleteToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeadmanTriggerAvailableDatetime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInUseList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "getList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListType",
      "outputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "lockedMetadata",
              "type": "bool"
            }
          ],
          "internalType": "struct LazySovereignNFT.MintConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "hasAdminPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isApprovedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isOperatorInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "prepareMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "prepareMintWithMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numYears",
          "type": "uint256"
        }
      ],
      "name": "setDeadmanListTriggerRenewalDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "setDefaultRoyaltyReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyReceiverForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_newListType",
          "type": "uint8"
        }
      ],
      "name": "toggleListType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenCreator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506136d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c8063715018a611610167578063b390ac25116100ce578063e985e9c511610087578063e985e9c5146105e0578063eab85118146105f3578063ee07080514610606578063efc32cd414610612578063f2fde38b14610625578063ff6e8c8f1461063857600080fd5b8063b390ac2514610577578063b88d4fde1461058a578063b9fbd25c1461059d578063bc719455146105b0578063c87b56dd146105c3578063e8315742146105d657600080fd5b8063931688cb11610120578063931688cb146105195780639338bb5d1461052c57806395d89b41146105415780639e860f2a14610549578063a22cb4651461055c578063ab69607a1461056f57600080fd5b8063715018a6146104c8578063717392ed146104d0578063755edd17146104d957806387bc793f146104ec578063894ba833146105005780638da5cb5b1461050857600080fd5b80633a3d146f1161020b57806353df5c7c116101c457806353df5c7c1461046c5780635aec8d62146104745780635edc7c191461047c5780636297c16c1461048f5780636352211e146104a257806370a08231146104b557600080fd5b80633a3d146f146103e05780633ebc82c51461040d57806340c1a0641461042057806342842e0e1461043357806342966c6814610446578063472a66381461045957600080fd5b8063204274861161025d578063204274861461035c57806321c4a5d81461036f57806323b872dd146103825780632a55205a146103955780632ce878da146103c75780633403c4e9146103cf57600080fd5b8063012cf1e8146102a557806301ffc9a7146102ce57806306fdde03146102f1578063081812fc14610306578063095ea7b31461033157806318160ddd14610346575b600080fd5b6102b86102b3366004612a61565b61064b565b6040516102c59190612a7c565b60405180910390f35b6102e16102dc366004612adf565b610691565b60405190151581526020016102c5565b6102f96106ab565b6040516102c59190612b54565b610319610314366004612b67565b61073d565b6040516001600160a01b0390911681526020016102c5565b61034461033f366004612b97565b6107d7565b005b61034e6108ac565b6040519081526020016102c5565b6102e161036a366004612bc1565b6108bd565b61034461037d366004612b67565b6108ec565b610344610390366004612bdc565b61091e565b6103a86103a3366004612c18565b610950565b604080516001600160a01b0390931683526020830191909152016102c5565b6102b86109eb565b60fb546001600160a01b0316610319565b6102e16103ee366004612bc1565b6001600160a01b03166000908152610102602052604090205460ff1690565b61034461041b366004612bc1565b610a11565b61031961042e366004612b67565b610a44565b610344610441366004612bdc565b610a58565b610344610454366004612b67565b610a73565b610344610467366004612a61565b610aea565b610344610b19565b610344610b8d565b61034461048a366004612c83565b610be8565b61034461049d366004612b67565b610d68565b6103196104b0366004612b67565b610dd1565b61034e6104c3366004612bc1565b610e48565b610344610ece565b6101095461034e565b61034e6104e7366004612bc1565b610f04565b6101085460ff166040516102c59190612d22565b610344610fda565b6033546001600160a01b0316610319565b610344610527366004612d4a565b61103e565b610534611112565b6040516102c59190612d8c565b6102f96111f6565b610344610557366004612dca565b611205565b61034461056a366004612e50565b611268565b60fc5461034e565b610344610585366004612e8c565b61130f565b610344610598366004612eee565b611366565b6103446105ab366004612fca565b61139e565b6103446105be366004612a61565b61141d565b6102f96105d1366004612b67565b6114d2565b61034e6101005481565b6102e16105ee366004613027565b611507565b6102e1610601366004612bc1565b611535565b60ff80546102e1911681565b610344610620366004612b97565b61155c565b610344610633366004612bc1565b6115b4565b610344610646366004612dca565b61164c565b606061068b610107600084600281111561066757610667612d0c565b600281111561067857610678612d0c565b81526020019081526020016000206116e4565b92915050565b600061069c826116f8565b8061068b575061068b8261171d565b6060609780546106ba90613051565b80601f01602080910402602001604051908101604052809291908181526020018280546106e690613051565b80156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166107bb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b8160016101085460ff1660028111156107f2576107f2612d0c565b036108515761083081610107600060015b600281111561081457610814612d0c565b815260200190815260200160002061176090919063ffffffff16565b61084c576040516282b42960e81b815260040160405180910390fd5b61089d565b60026101085460ff16600281111561086b5761086b612d0c565b0361089d576108808161010760006002610803565b1561089d576040516282b42960e81b815260040160405180910390fd5b6108a78383611782565b505050565b60006108b86101035490565b905090565b60006108d16033546001600160a01b031690565b6001600160a01b0316826001600160a01b0316149050919050565b6108f5336108bd565b61091257604051635c510c8360e11b815260040160405180910390fd5b61091b81611892565b50565b610929335b826118f5565b6109455760405162461bcd60e51b81526004016107b29061308b565b6108a78383836119cc565b600082815260fd602052604081205481906001600160a01b031661097f5760fb546001600160a01b0316610998565b600084815260fd60205260409020546001600160a01b03165b91506109e260646109dc60fe6000888152602001908152602001600020546000036109c55760fc546109d5565b600087815260fe60205260409020545b8690611b68565b90611b74565b90509250929050565b610108546060906108b8906101079060009060ff16600281111561066757610667612d0c565b6033546001600160a01b03163314610a3b5760405162461bcd60e51b81526004016107b2906130dc565b61091b81611b80565b600061068b6033546001600160a01b031690565b6108a783838360405180602001604052806000815250611366565b610a7c33610923565b610ae15760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016107b2565b61091b81611ba2565b610af3336108bd565b610b1057604051635c510c8360e11b815260040160405180910390fd5b61091b81611c3e565b6033546001600160a01b03163314610b435760405162461bcd60e51b81526004016107b2906130dc565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e90610b759061010590613111565b60405180910390a1610106805460ff19166001179055565b42610109541115610bb15760405163807a684760e01b815260040160405180910390fd5b610bbb6000611c3e565b60405133907f60faf76514baf225c418dfc1e3c75bed0bd280f0436999e12cb0a73acb0f9a4690600090a2565b6000610bf46001611cbb565b90508015610c0c576000805461ff0019166101001790555b6001600160a01b038316610c625760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c2061646472657373000060448201526064016107b2565b610c6c600a60fc55565b60ff805460ff19169055610100829055610c84611d43565b610cf787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250611d7292505050565b610cff611da3565b610d07611dca565b610d1083611b80565b610d19836115b4565b8015610d5f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610d7282610dd1565b6001600160a01b031614610dc85760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e0060448201526064016107b2565b61091b81610a73565b6000818152609960205260408120546001600160a01b03168061068b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107b2565b60006001600160a01b038216610eb25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016107b2565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610ef85760405162461bcd60e51b81526004016107b2906130dc565b610f026000611df9565b565b60ff80546000911615610f295760405162461bcd60e51b81526004016107b29061319c565b6033546001600160a01b0316331480610f525750336000908152610102602052604090205460ff165b610fb75760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b60648201526084016107b2565b61068b82610fc460fc5490565b60fb546001600160a01b0316611e4b565b919050565b6033546001600160a01b031633146110045760405162461bcd60e51b81526004016107b2906130dc565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b031633146110685760405162461bcd60e51b81526004016107b2906130dc565b6101065460ff16156110c65760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b60648201526084016107b2565b6101056110d4828483613221565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e82826040516111069291906132e2565b60405180910390a15050565b611138604051806060016040528060008152602001606081526020016000151581525090565b604080516060810190915261010480548252610105805460208401919061115e90613051565b80601f016020809104026020016040519081016040528092919081815260200182805461118a90613051565b80156111d75780601f106111ac576101008083540402835291602001916111d7565b820191906000526020600020905b8154815290600101906020018083116111ba57829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b6060609880546106ba90613051565b61120e336108bd565b61122b57604051635c510c8360e11b815260040160405180910390fd5b6108a78383838080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509250611f07915050565b8160016101085460ff16600281111561128357611283612d0c565b036112b9576112988161010760006001610803565b6112b4576040516282b42960e81b815260040160405180910390fd5b611305565b60026101085460ff1660028111156112d3576112d3612d0c565b03611305576112e88161010760006002610803565b15611305576040516282b42960e81b815260040160405180910390fd5b6108a783836120e4565b6033546001600160a01b031633146113395760405162461bcd60e51b81526004016107b2906130dc565b60ff8054161561135b5760405162461bcd60e51b81526004016107b29061319c565b6108a78383836120ef565b61137033836118f5565b61138c5760405162461bcd60e51b81526004016107b29061308b565b61139884848484612271565b50505050565b6033546001600160a01b031633146113c85760405162461bcd60e51b81526004016107b2906130dc565b60ff805416156113ea5760405162461bcd60e51b81526004016107b29061319c565b6113f58484846120ef565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b611426336108bd565b61144357604051635c510c8360e11b815260040160405180910390fd5b610107600082600281111561145a5761145a612d0c565b600281111561146b5761146b612d0c565b81526020810191909152604001600090812090818161148a8282612a20565b50505050336001600160a01b03167f7efc19cf93d497a6a56103ea89a39d51c0cad74a817ed3cd0ecaff9823d4da24826040516114c79190612d22565b60405180910390a250565b60606101056114e0836122a4565b6040516020016114f1929190613311565b6040516020818303038152906040529050919050565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b6101085460009061068b90839061010790849060ff16600281111561080357610803612d0c565b6033546001600160a01b031633146115865760405162461bcd60e51b81526004016107b2906130dc565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146115de5760405162461bcd60e51b81526004016107b2906130dc565b6001600160a01b0381166116435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b2565b61091b81611df9565b611655336108bd565b61167257604051635c510c8360e11b815260040160405180910390fd5b600083600281111561168657611686612d0c565b036116a457604051632de777a160e11b815260040160405180910390fd5b6108a78383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060019250611f07915050565b606060006116f1836123a5565b9392505050565b60006001600160e01b0319821663fa31a45b60e01b148061068b575061068b82612401565b60006001600160e01b03198216631030681960e21b1480611742575061174282612401565b80611751575061175182612417565b8061068b575061068b82612438565b6001600160a01b038116600090815260018301602052604081205415156116f1565b600061178d82610dd1565b9050806001600160a01b0316836001600160a01b0316036117fa5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107b2565b336001600160a01b038216148061181657506118168133611507565b6118885760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107b2565b6108a78383612478565b60006118a2826301e133806133cd565b6118ac90426133ec565b61010954604080519182526020820183905291925033917f6e948191a35d69000746799fef50c705bbdc93bd5a7577e9e9eb879c04bdebc9910160405180910390a26101095550565b6000818152609960205260408120546001600160a01b031661196e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107b2565b600061197983610dd1565b9050806001600160a01b0316846001600160a01b031614806119a057506119a08185611507565b806119c45750836001600160a01b03166119b98461073d565b6001600160a01b0316145b949350505050565b826001600160a01b03166119df82610dd1565b6001600160a01b031614611a435760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107b2565b6001600160a01b038216611aa55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107b2565b611ab0600082612478565b6001600160a01b0383166000908152609a60205260408120805460019290611ad9908490613404565b90915550506001600160a01b0382166000908152609a60205260408120805460019290611b079084906133ec565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006116f182846133cd565b60006116f18284613431565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611bad82610dd1565b9050611bba600083612478565b6001600160a01b0381166000908152609a60205260408120805460019290611be3908490613404565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45b5050565b806002811115611c5057611c50612d0c565b6101085460ff166002811115611c6857611c68612d0c565b60405133907f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f90600090a4610108805482919060ff19166001836002811115611cb357611cb3612d0c565b021790555050565b60008054610100900460ff1615611d02578160ff166001148015611cde5750303b155b611cfa5760405162461bcd60e51b81526004016107b290613445565b506000919050565b60005460ff808416911610611d295760405162461bcd60e51b81526004016107b290613445565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16611d6a5760405162461bcd60e51b81526004016107b290613493565b610f026124e6565b600054610100900460ff16611d995760405162461bcd60e51b81526004016107b290613493565b611c3a8282612516565b600054610100900460ff16610f025760405162461bcd60e51b81526004016107b290613493565b600054610100900460ff16611df15760405162461bcd60e51b81526004016107b290613493565b610f02611da3565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611e5c61010380546001019055565b6000611e686101035490565b905061010054811115611ebd5760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e7360448201526064016107b2565b611ec78582612556565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b6000836002811115611f1b57611f1b612d0c565b146108a75760005b825181101561139857811561200457611f93838281518110611f4757611f476134de565b60200260200101516101076000876002811115611f6657611f66612d0c565b6002811115611f7757611f77612d0c565b815260200190815260200160002061257090919063ffffffff16565b50836002811115611fa657611fa6612d0c565b838281518110611fb857611fb86134de565b60200260200101516001600160a01b0316336001600160a01b03167f14155f749dc3f9cd2bf890d6d3a47069f77ae35befcee11c8b1a3ba41cba153660405160405180910390a46120d2565b612065838281518110612019576120196134de565b6020026020010151610107600087600281111561203857612038612d0c565b600281111561204957612049612d0c565b815260200190815260200160002061258590919063ffffffff16565b5083600281111561207857612078612d0c565b83828151811061208a5761208a6134de565b60200260200101516001600160a01b0316336001600160a01b03167fc72e29af1b34de3dec3a764b4ca4d85b9c380ab33b9b268d29b6e7008bd0ed9560405160405180910390a45b806120dc816134f4565b915050611f23565b611c3a33838361259a565b610100548111156121425760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e7360448201526064016107b2565b61010354156121ad5760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b60648201526084016107b2565b604051806060016040528082815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182015281516101049081559082015161010590612216908261350d565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba199061226490869086906132e2565b60405180910390a2505050565b61227c8484846119cc565b61228884848484612668565b6113985760405162461bcd60e51b81526004016107b2906135cd565b6060816000036122cb5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156122f557806122df816134f4565b91506122ee9050600a83613431565b91506122cf565b60008167ffffffffffffffff81111561231057612310612ed8565b6040519080825280601f01601f19166020018201604052801561233a576020820181803683370190505b5090505b84156119c45761234f600183613404565b915061235c600a8661361f565b6123679060306133ec565b60f81b81838151811061237c5761237c6134de565b60200101906001600160f81b031916908160001a90535061239e600a86613431565b945061233e565b6060816000018054806020026020016040519081016040528092919081815260200182805480156123f557602002820191906000526020600020905b8154815260200190600101908083116123e1575b50505050509050919050565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b148061068b575061068b825b60006001600160e01b031982166380ac58cd60e01b148061246957506001600160e01b03198216635b5e139f60e01b145b8061068b575061068b82612401565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906124ad82610dd1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600054610100900460ff1661250d5760405162461bcd60e51b81526004016107b290613493565b610f0233611df9565b600054610100900460ff1661253d5760405162461bcd60e51b81526004016107b290613493565b6097612549838261350d565b5060986108a7828261350d565b611c3a828260405180602001604052806000815250612769565b60006116f1836001600160a01b03841661279c565b60006116f1836001600160a01b0384166127eb565b816001600160a01b0316836001600160a01b0316036125fb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107b2565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006001600160a01b0384163b1561275e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906126ac903390899088908890600401613633565b6020604051808303816000875af19250505080156126e7575060408051601f3d908101601f191682019092526126e491810190613670565b60015b612744573d808015612715576040519150601f19603f3d011682016040523d82523d6000602084013e61271a565b606091505b50805160000361273c5760405162461bcd60e51b81526004016107b2906135cd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506119c4565b506001949350505050565b61277383836128de565b6127806000848484612668565b6108a75760405162461bcd60e51b81526004016107b2906135cd565b60008181526001830160205260408120546127e35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561068b565b50600061068b565b600081815260018301602052604081205480156128d457600061280f600183613404565b855490915060009061282390600190613404565b9050818114612888576000866000018281548110612843576128436134de565b9060005260206000200154905080876000018481548110612866576128666134de565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806128995761289961368d565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061068b565b600091505061068b565b6001600160a01b0382166129345760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107b2565b6000818152609960205260409020546001600160a01b0316156129995760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107b2565b6001600160a01b0382166000908152609a602052604081208054600192906129c29084906133ec565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b508054600082559060005260206000209081019061091b91905b80821115612a4e5760008155600101612a3a565b5090565b803560038110610fd557600080fd5b600060208284031215612a7357600080fd5b6116f182612a52565b6020808252825182820181905260009190848201906040850190845b81811015612abd5783516001600160a01b031683529284019291840191600101612a98565b50909695505050505050565b6001600160e01b03198116811461091b57600080fd5b600060208284031215612af157600080fd5b81356116f181612ac9565b60005b83811015612b17578181015183820152602001612aff565b838111156113985750506000910152565b60008151808452612b40816020860160208601612afc565b601f01601f19169290920160200192915050565b6020815260006116f16020830184612b28565b600060208284031215612b7957600080fd5b5035919050565b80356001600160a01b0381168114610fd557600080fd5b60008060408385031215612baa57600080fd5b612bb383612b80565b946020939093013593505050565b600060208284031215612bd357600080fd5b6116f182612b80565b600080600060608486031215612bf157600080fd5b612bfa84612b80565b9250612c0860208501612b80565b9150604084013590509250925092565b60008060408385031215612c2b57600080fd5b50508035926020909101359150565b60008083601f840112612c4c57600080fd5b50813567ffffffffffffffff811115612c6457600080fd5b602083019150836020828501011115612c7c57600080fd5b9250929050565b60008060008060008060808789031215612c9c57600080fd5b863567ffffffffffffffff80821115612cb457600080fd5b612cc08a838b01612c3a565b90985096506020890135915080821115612cd957600080fd5b50612ce689828a01612c3a565b9095509350612cf9905060408801612b80565b9150606087013590509295509295509295565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612d4457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060208385031215612d5d57600080fd5b823567ffffffffffffffff811115612d7457600080fd5b612d8085828601612c3a565b90969095509350505050565b60208152815160208201526000602083015160606040840152612db26080840182612b28565b90506040840151151560608401528091505092915050565b600080600060408486031215612ddf57600080fd5b612de884612a52565b9250602084013567ffffffffffffffff80821115612e0557600080fd5b818601915086601f830112612e1957600080fd5b813581811115612e2857600080fd5b8760208260051b8501011115612e3d57600080fd5b6020830194508093505050509250925092565b60008060408385031215612e6357600080fd5b612e6c83612b80565b915060208301358015158114612e8157600080fd5b809150509250929050565b600080600060408486031215612ea157600080fd5b833567ffffffffffffffff811115612eb857600080fd5b612ec486828701612c3a565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612f0457600080fd5b612f0d85612b80565b9350612f1b60208601612b80565b925060408501359150606085013567ffffffffffffffff80821115612f3f57600080fd5b818701915087601f830112612f5357600080fd5b813581811115612f6557612f65612ed8565b604051601f8201601f19908116603f01168101908382118183101715612f8d57612f8d612ed8565b816040528281528a6020848701011115612fa657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060008060608587031215612fe057600080fd5b843567ffffffffffffffff811115612ff757600080fd5b61300387828801612c3a565b9095509350506020850135915061301c60408601612b80565b905092959194509250565b6000806040838503121561303a57600080fd5b61304383612b80565b91506109e260208401612b80565b600181811c9082168061306557607f821691505b60208210810361308557634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208083526000845461312581613051565b8084870152604060018084166000811461314657600181146131605761318e565b60ff1985168984015283151560051b89018301955061318e565b896000528660002060005b858110156131865781548b820186015290830190880161316b565b8a0184019650505b509398975050505050505050565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b601f8211156108a757600081815260208120601f850160051c810160208610156131fa5750805b601f850160051c820191505b8181101561321957828155600101613206565b505050505050565b67ffffffffffffffff83111561323957613239612ed8565b61324d836132478354613051565b836131d3565b6000601f84116001811461328157600085156132695750838201355b600019600387901b1c1916600186901b1783556132db565b600083815260209020601f19861690835b828110156132b25786850135825560209485019460019092019101613292565b50868210156132cf5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600080845461331f81613051565b60018281168015613337576001811461334c5761337b565b60ff198416875282151583028701945061337b565b8860005260208060002060005b858110156133725781548a820152908401908201613359565b50505082870194505b50602f60f81b8452865192506133978382860160208a01612afc565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156133e7576133e76133b7565b500290565b600082198211156133ff576133ff6133b7565b500190565b600082821015613416576134166133b7565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826134405761344061341b565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201613506576135066133b7565b5060010190565b815167ffffffffffffffff81111561352757613527612ed8565b61353b816135358454613051565b846131d3565b602080601f83116001811461357057600084156135585750858301515b600019600386901b1c1916600185901b178555613219565b600085815260208120601f198616915b8281101561359f57888601518255948401946001909101908401613580565b50858210156135bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261362e5761362e61341b565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061366690830184612b28565b9695505050505050565b60006020828403121561368257600080fd5b81516116f181612ac9565b634e487b7160e01b600052603160045260246000fdfea26469706673582212201578cb92f9d0b849d9a39fac543b36e3ac45105b744972da831f814a5e9dbdaf64736f6c634300080f0033",
    "sourceMap": "212:1724:27:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102a05760003560e01c8063715018a611610167578063b390ac25116100ce578063e985e9c511610087578063e985e9c5146105e0578063eab85118146105f3578063ee07080514610606578063efc32cd414610612578063f2fde38b14610625578063ff6e8c8f1461063857600080fd5b8063b390ac2514610577578063b88d4fde1461058a578063b9fbd25c1461059d578063bc719455146105b0578063c87b56dd146105c3578063e8315742146105d657600080fd5b8063931688cb11610120578063931688cb146105195780639338bb5d1461052c57806395d89b41146105415780639e860f2a14610549578063a22cb4651461055c578063ab69607a1461056f57600080fd5b8063715018a6146104c8578063717392ed146104d0578063755edd17146104d957806387bc793f146104ec578063894ba833146105005780638da5cb5b1461050857600080fd5b80633a3d146f1161020b57806353df5c7c116101c457806353df5c7c1461046c5780635aec8d62146104745780635edc7c191461047c5780636297c16c1461048f5780636352211e146104a257806370a08231146104b557600080fd5b80633a3d146f146103e05780633ebc82c51461040d57806340c1a0641461042057806342842e0e1461043357806342966c6814610446578063472a66381461045957600080fd5b8063204274861161025d578063204274861461035c57806321c4a5d81461036f57806323b872dd146103825780632a55205a146103955780632ce878da146103c75780633403c4e9146103cf57600080fd5b8063012cf1e8146102a557806301ffc9a7146102ce57806306fdde03146102f1578063081812fc14610306578063095ea7b31461033157806318160ddd14610346575b600080fd5b6102b86102b3366004612a61565b61064b565b6040516102c59190612a7c565b60405180910390f35b6102e16102dc366004612adf565b610691565b60405190151581526020016102c5565b6102f96106ab565b6040516102c59190612b54565b610319610314366004612b67565b61073d565b6040516001600160a01b0390911681526020016102c5565b61034461033f366004612b97565b6107d7565b005b61034e6108ac565b6040519081526020016102c5565b6102e161036a366004612bc1565b6108bd565b61034461037d366004612b67565b6108ec565b610344610390366004612bdc565b61091e565b6103a86103a3366004612c18565b610950565b604080516001600160a01b0390931683526020830191909152016102c5565b6102b86109eb565b60fb546001600160a01b0316610319565b6102e16103ee366004612bc1565b6001600160a01b03166000908152610102602052604090205460ff1690565b61034461041b366004612bc1565b610a11565b61031961042e366004612b67565b610a44565b610344610441366004612bdc565b610a58565b610344610454366004612b67565b610a73565b610344610467366004612a61565b610aea565b610344610b19565b610344610b8d565b61034461048a366004612c83565b610be8565b61034461049d366004612b67565b610d68565b6103196104b0366004612b67565b610dd1565b61034e6104c3366004612bc1565b610e48565b610344610ece565b6101095461034e565b61034e6104e7366004612bc1565b610f04565b6101085460ff166040516102c59190612d22565b610344610fda565b6033546001600160a01b0316610319565b610344610527366004612d4a565b61103e565b610534611112565b6040516102c59190612d8c565b6102f96111f6565b610344610557366004612dca565b611205565b61034461056a366004612e50565b611268565b60fc5461034e565b610344610585366004612e8c565b61130f565b610344610598366004612eee565b611366565b6103446105ab366004612fca565b61139e565b6103446105be366004612a61565b61141d565b6102f96105d1366004612b67565b6114d2565b61034e6101005481565b6102e16105ee366004613027565b611507565b6102e1610601366004612bc1565b611535565b60ff80546102e1911681565b610344610620366004612b97565b61155c565b610344610633366004612bc1565b6115b4565b610344610646366004612dca565b61164c565b606061068b610107600084600281111561066757610667612d0c565b600281111561067857610678612d0c565b81526020019081526020016000206116e4565b92915050565b600061069c826116f8565b8061068b575061068b8261171d565b6060609780546106ba90613051565b80601f01602080910402602001604051908101604052809291908181526020018280546106e690613051565b80156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166107bb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b8160016101085460ff1660028111156107f2576107f2612d0c565b036108515761083081610107600060015b600281111561081457610814612d0c565b815260200190815260200160002061176090919063ffffffff16565b61084c576040516282b42960e81b815260040160405180910390fd5b61089d565b60026101085460ff16600281111561086b5761086b612d0c565b0361089d576108808161010760006002610803565b1561089d576040516282b42960e81b815260040160405180910390fd5b6108a78383611782565b505050565b60006108b86101035490565b905090565b60006108d16033546001600160a01b031690565b6001600160a01b0316826001600160a01b0316149050919050565b6108f5336108bd565b61091257604051635c510c8360e11b815260040160405180910390fd5b61091b81611892565b50565b610929335b826118f5565b6109455760405162461bcd60e51b81526004016107b29061308b565b6108a78383836119cc565b600082815260fd602052604081205481906001600160a01b031661097f5760fb546001600160a01b0316610998565b600084815260fd60205260409020546001600160a01b03165b91506109e260646109dc60fe6000888152602001908152602001600020546000036109c55760fc546109d5565b600087815260fe60205260409020545b8690611b68565b90611b74565b90509250929050565b610108546060906108b8906101079060009060ff16600281111561066757610667612d0c565b6033546001600160a01b03163314610a3b5760405162461bcd60e51b81526004016107b2906130dc565b61091b81611b80565b600061068b6033546001600160a01b031690565b6108a783838360405180602001604052806000815250611366565b610a7c33610923565b610ae15760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016107b2565b61091b81611ba2565b610af3336108bd565b610b1057604051635c510c8360e11b815260040160405180910390fd5b61091b81611c3e565b6033546001600160a01b03163314610b435760405162461bcd60e51b81526004016107b2906130dc565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e90610b759061010590613111565b60405180910390a1610106805460ff19166001179055565b42610109541115610bb15760405163807a684760e01b815260040160405180910390fd5b610bbb6000611c3e565b60405133907f60faf76514baf225c418dfc1e3c75bed0bd280f0436999e12cb0a73acb0f9a4690600090a2565b6000610bf46001611cbb565b90508015610c0c576000805461ff0019166101001790555b6001600160a01b038316610c625760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c2061646472657373000060448201526064016107b2565b610c6c600a60fc55565b60ff805460ff19169055610100829055610c84611d43565b610cf787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250611d7292505050565b610cff611da3565b610d07611dca565b610d1083611b80565b610d19836115b4565b8015610d5f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610d7282610dd1565b6001600160a01b031614610dc85760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e0060448201526064016107b2565b61091b81610a73565b6000818152609960205260408120546001600160a01b03168061068b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107b2565b60006001600160a01b038216610eb25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016107b2565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610ef85760405162461bcd60e51b81526004016107b2906130dc565b610f026000611df9565b565b60ff80546000911615610f295760405162461bcd60e51b81526004016107b29061319c565b6033546001600160a01b0316331480610f525750336000908152610102602052604090205460ff165b610fb75760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b60648201526084016107b2565b61068b82610fc460fc5490565b60fb546001600160a01b0316611e4b565b919050565b6033546001600160a01b031633146110045760405162461bcd60e51b81526004016107b2906130dc565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b031633146110685760405162461bcd60e51b81526004016107b2906130dc565b6101065460ff16156110c65760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b60648201526084016107b2565b6101056110d4828483613221565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e82826040516111069291906132e2565b60405180910390a15050565b611138604051806060016040528060008152602001606081526020016000151581525090565b604080516060810190915261010480548252610105805460208401919061115e90613051565b80601f016020809104026020016040519081016040528092919081815260200182805461118a90613051565b80156111d75780601f106111ac576101008083540402835291602001916111d7565b820191906000526020600020905b8154815290600101906020018083116111ba57829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b6060609880546106ba90613051565b61120e336108bd565b61122b57604051635c510c8360e11b815260040160405180910390fd5b6108a78383838080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509250611f07915050565b8160016101085460ff16600281111561128357611283612d0c565b036112b9576112988161010760006001610803565b6112b4576040516282b42960e81b815260040160405180910390fd5b611305565b60026101085460ff1660028111156112d3576112d3612d0c565b03611305576112e88161010760006002610803565b15611305576040516282b42960e81b815260040160405180910390fd5b6108a783836120e4565b6033546001600160a01b031633146113395760405162461bcd60e51b81526004016107b2906130dc565b60ff8054161561135b5760405162461bcd60e51b81526004016107b29061319c565b6108a78383836120ef565b61137033836118f5565b61138c5760405162461bcd60e51b81526004016107b29061308b565b61139884848484612271565b50505050565b6033546001600160a01b031633146113c85760405162461bcd60e51b81526004016107b2906130dc565b60ff805416156113ea5760405162461bcd60e51b81526004016107b29061319c565b6113f58484846120ef565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b611426336108bd565b61144357604051635c510c8360e11b815260040160405180910390fd5b610107600082600281111561145a5761145a612d0c565b600281111561146b5761146b612d0c565b81526020810191909152604001600090812090818161148a8282612a20565b50505050336001600160a01b03167f7efc19cf93d497a6a56103ea89a39d51c0cad74a817ed3cd0ecaff9823d4da24826040516114c79190612d22565b60405180910390a250565b60606101056114e0836122a4565b6040516020016114f1929190613311565b6040516020818303038152906040529050919050565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b6101085460009061068b90839061010790849060ff16600281111561080357610803612d0c565b6033546001600160a01b031633146115865760405162461bcd60e51b81526004016107b2906130dc565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146115de5760405162461bcd60e51b81526004016107b2906130dc565b6001600160a01b0381166116435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b2565b61091b81611df9565b611655336108bd565b61167257604051635c510c8360e11b815260040160405180910390fd5b600083600281111561168657611686612d0c565b036116a457604051632de777a160e11b815260040160405180910390fd5b6108a78383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060019250611f07915050565b606060006116f1836123a5565b9392505050565b60006001600160e01b0319821663fa31a45b60e01b148061068b575061068b82612401565b60006001600160e01b03198216631030681960e21b1480611742575061174282612401565b80611751575061175182612417565b8061068b575061068b82612438565b6001600160a01b038116600090815260018301602052604081205415156116f1565b600061178d82610dd1565b9050806001600160a01b0316836001600160a01b0316036117fa5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107b2565b336001600160a01b038216148061181657506118168133611507565b6118885760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107b2565b6108a78383612478565b60006118a2826301e133806133cd565b6118ac90426133ec565b61010954604080519182526020820183905291925033917f6e948191a35d69000746799fef50c705bbdc93bd5a7577e9e9eb879c04bdebc9910160405180910390a26101095550565b6000818152609960205260408120546001600160a01b031661196e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107b2565b600061197983610dd1565b9050806001600160a01b0316846001600160a01b031614806119a057506119a08185611507565b806119c45750836001600160a01b03166119b98461073d565b6001600160a01b0316145b949350505050565b826001600160a01b03166119df82610dd1565b6001600160a01b031614611a435760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107b2565b6001600160a01b038216611aa55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107b2565b611ab0600082612478565b6001600160a01b0383166000908152609a60205260408120805460019290611ad9908490613404565b90915550506001600160a01b0382166000908152609a60205260408120805460019290611b079084906133ec565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006116f182846133cd565b60006116f18284613431565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611bad82610dd1565b9050611bba600083612478565b6001600160a01b0381166000908152609a60205260408120805460019290611be3908490613404565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45b5050565b806002811115611c5057611c50612d0c565b6101085460ff166002811115611c6857611c68612d0c565b60405133907f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f90600090a4610108805482919060ff19166001836002811115611cb357611cb3612d0c565b021790555050565b60008054610100900460ff1615611d02578160ff166001148015611cde5750303b155b611cfa5760405162461bcd60e51b81526004016107b290613445565b506000919050565b60005460ff808416911610611d295760405162461bcd60e51b81526004016107b290613445565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16611d6a5760405162461bcd60e51b81526004016107b290613493565b610f026124e6565b600054610100900460ff16611d995760405162461bcd60e51b81526004016107b290613493565b611c3a8282612516565b600054610100900460ff16610f025760405162461bcd60e51b81526004016107b290613493565b600054610100900460ff16611df15760405162461bcd60e51b81526004016107b290613493565b610f02611da3565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611e5c61010380546001019055565b6000611e686101035490565b905061010054811115611ebd5760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e7360448201526064016107b2565b611ec78582612556565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b6000836002811115611f1b57611f1b612d0c565b146108a75760005b825181101561139857811561200457611f93838281518110611f4757611f476134de565b60200260200101516101076000876002811115611f6657611f66612d0c565b6002811115611f7757611f77612d0c565b815260200190815260200160002061257090919063ffffffff16565b50836002811115611fa657611fa6612d0c565b838281518110611fb857611fb86134de565b60200260200101516001600160a01b0316336001600160a01b03167f14155f749dc3f9cd2bf890d6d3a47069f77ae35befcee11c8b1a3ba41cba153660405160405180910390a46120d2565b612065838281518110612019576120196134de565b6020026020010151610107600087600281111561203857612038612d0c565b600281111561204957612049612d0c565b815260200190815260200160002061258590919063ffffffff16565b5083600281111561207857612078612d0c565b83828151811061208a5761208a6134de565b60200260200101516001600160a01b0316336001600160a01b03167fc72e29af1b34de3dec3a764b4ca4d85b9c380ab33b9b268d29b6e7008bd0ed9560405160405180910390a45b806120dc816134f4565b915050611f23565b611c3a33838361259a565b610100548111156121425760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e7360448201526064016107b2565b61010354156121ad5760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b60648201526084016107b2565b604051806060016040528082815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182015281516101049081559082015161010590612216908261350d565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba199061226490869086906132e2565b60405180910390a2505050565b61227c8484846119cc565b61228884848484612668565b6113985760405162461bcd60e51b81526004016107b2906135cd565b6060816000036122cb5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156122f557806122df816134f4565b91506122ee9050600a83613431565b91506122cf565b60008167ffffffffffffffff81111561231057612310612ed8565b6040519080825280601f01601f19166020018201604052801561233a576020820181803683370190505b5090505b84156119c45761234f600183613404565b915061235c600a8661361f565b6123679060306133ec565b60f81b81838151811061237c5761237c6134de565b60200101906001600160f81b031916908160001a90535061239e600a86613431565b945061233e565b6060816000018054806020026020016040519081016040528092919081815260200182805480156123f557602002820191906000526020600020905b8154815260200190600101908083116123e1575b50505050509050919050565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b148061068b575061068b825b60006001600160e01b031982166380ac58cd60e01b148061246957506001600160e01b03198216635b5e139f60e01b145b8061068b575061068b82612401565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906124ad82610dd1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600054610100900460ff1661250d5760405162461bcd60e51b81526004016107b290613493565b610f0233611df9565b600054610100900460ff1661253d5760405162461bcd60e51b81526004016107b290613493565b6097612549838261350d565b5060986108a7828261350d565b611c3a828260405180602001604052806000815250612769565b60006116f1836001600160a01b03841661279c565b60006116f1836001600160a01b0384166127eb565b816001600160a01b0316836001600160a01b0316036125fb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107b2565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006001600160a01b0384163b1561275e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906126ac903390899088908890600401613633565b6020604051808303816000875af19250505080156126e7575060408051601f3d908101601f191682019092526126e491810190613670565b60015b612744573d808015612715576040519150601f19603f3d011682016040523d82523d6000602084013e61271a565b606091505b50805160000361273c5760405162461bcd60e51b81526004016107b2906135cd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506119c4565b506001949350505050565b61277383836128de565b6127806000848484612668565b6108a75760405162461bcd60e51b81526004016107b2906135cd565b60008181526001830160205260408120546127e35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561068b565b50600061068b565b600081815260018301602052604081205480156128d457600061280f600183613404565b855490915060009061282390600190613404565b9050818114612888576000866000018281548110612843576128436134de565b9060005260206000200154905080876000018481548110612866576128666134de565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806128995761289961368d565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061068b565b600091505061068b565b6001600160a01b0382166129345760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107b2565b6000818152609960205260409020546001600160a01b0316156129995760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107b2565b6001600160a01b0382166000908152609a602052604081208054600192906129c29084906133ec565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b508054600082559060005260206000209081019061091b91905b80821115612a4e5760008155600101612a3a565b5090565b803560038110610fd557600080fd5b600060208284031215612a7357600080fd5b6116f182612a52565b6020808252825182820181905260009190848201906040850190845b81811015612abd5783516001600160a01b031683529284019291840191600101612a98565b50909695505050505050565b6001600160e01b03198116811461091b57600080fd5b600060208284031215612af157600080fd5b81356116f181612ac9565b60005b83811015612b17578181015183820152602001612aff565b838111156113985750506000910152565b60008151808452612b40816020860160208601612afc565b601f01601f19169290920160200192915050565b6020815260006116f16020830184612b28565b600060208284031215612b7957600080fd5b5035919050565b80356001600160a01b0381168114610fd557600080fd5b60008060408385031215612baa57600080fd5b612bb383612b80565b946020939093013593505050565b600060208284031215612bd357600080fd5b6116f182612b80565b600080600060608486031215612bf157600080fd5b612bfa84612b80565b9250612c0860208501612b80565b9150604084013590509250925092565b60008060408385031215612c2b57600080fd5b50508035926020909101359150565b60008083601f840112612c4c57600080fd5b50813567ffffffffffffffff811115612c6457600080fd5b602083019150836020828501011115612c7c57600080fd5b9250929050565b60008060008060008060808789031215612c9c57600080fd5b863567ffffffffffffffff80821115612cb457600080fd5b612cc08a838b01612c3a565b90985096506020890135915080821115612cd957600080fd5b50612ce689828a01612c3a565b9095509350612cf9905060408801612b80565b9150606087013590509295509295509295565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612d4457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060208385031215612d5d57600080fd5b823567ffffffffffffffff811115612d7457600080fd5b612d8085828601612c3a565b90969095509350505050565b60208152815160208201526000602083015160606040840152612db26080840182612b28565b90506040840151151560608401528091505092915050565b600080600060408486031215612ddf57600080fd5b612de884612a52565b9250602084013567ffffffffffffffff80821115612e0557600080fd5b818601915086601f830112612e1957600080fd5b813581811115612e2857600080fd5b8760208260051b8501011115612e3d57600080fd5b6020830194508093505050509250925092565b60008060408385031215612e6357600080fd5b612e6c83612b80565b915060208301358015158114612e8157600080fd5b809150509250929050565b600080600060408486031215612ea157600080fd5b833567ffffffffffffffff811115612eb857600080fd5b612ec486828701612c3a565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612f0457600080fd5b612f0d85612b80565b9350612f1b60208601612b80565b925060408501359150606085013567ffffffffffffffff80821115612f3f57600080fd5b818701915087601f830112612f5357600080fd5b813581811115612f6557612f65612ed8565b604051601f8201601f19908116603f01168101908382118183101715612f8d57612f8d612ed8565b816040528281528a6020848701011115612fa657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060008060608587031215612fe057600080fd5b843567ffffffffffffffff811115612ff757600080fd5b61300387828801612c3a565b9095509350506020850135915061301c60408601612b80565b905092959194509250565b6000806040838503121561303a57600080fd5b61304383612b80565b91506109e260208401612b80565b600181811c9082168061306557607f821691505b60208210810361308557634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208083526000845461312581613051565b8084870152604060018084166000811461314657600181146131605761318e565b60ff1985168984015283151560051b89018301955061318e565b896000528660002060005b858110156131865781548b820186015290830190880161316b565b8a0184019650505b509398975050505050505050565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b601f8211156108a757600081815260208120601f850160051c810160208610156131fa5750805b601f850160051c820191505b8181101561321957828155600101613206565b505050505050565b67ffffffffffffffff83111561323957613239612ed8565b61324d836132478354613051565b836131d3565b6000601f84116001811461328157600085156132695750838201355b600019600387901b1c1916600186901b1783556132db565b600083815260209020601f19861690835b828110156132b25786850135825560209485019460019092019101613292565b50868210156132cf5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600080845461331f81613051565b60018281168015613337576001811461334c5761337b565b60ff198416875282151583028701945061337b565b8860005260208060002060005b858110156133725781548a820152908401908201613359565b50505082870194505b50602f60f81b8452865192506133978382860160208a01612afc565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156133e7576133e76133b7565b500290565b600082198211156133ff576133ff6133b7565b500190565b600082821015613416576134166133b7565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826134405761344061341b565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201613506576135066133b7565b5060010190565b815167ffffffffffffffff81111561352757613527612ed8565b61353b816135358454613051565b846131d3565b602080601f83116001811461357057600084156135585750858301515b600019600386901b1c1916600185901b178555613219565b600085815260208120601f198616915b8281101561359f57888601518255948401946001909101908401613580565b50858210156135bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261362e5761362e61341b565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061366690830184612b28565b9695505050505050565b60006020828403121561368257600080fd5b81516116f181612ac9565b634e487b7160e01b600052603160045260246000fdfea26469706673582212201578cb92f9d0b849d9a39fac543b36e3ac45105b744972da831f814a5e9dbdaf64736f6c634300080f0033",
    "sourceMap": "212:1724:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3744:142:21;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;576:312:27;;;;;;:::i;:::-;;:::i;:::-;;;1592:14:31;;1585:22;1567:41;;1555:2;1540:18;576:312:27;1427:187:31;2948:98:2;;;:::i;:::-;;;;;;;:::i;4471:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2719:32:31;;;2701:51;;2689:2;2674:18;4471:217:2;2555:203:31;1439:173:27;;;;;;:::i;:::-;;:::i;:::-;;9562:109:24;;;:::i;:::-;;;3346:25:31;;;3334:2;3319:18;9562:109:24;3200:177:31;1133:200:27;;;;;;:::i;:::-;;:::i;1366:146:23:-;;;;;;:::i;:::-;;:::i;5198:330:2:-;;;;;;:::i;:::-;;:::i;846:566:28:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4351:32:31;;;4333:51;;4415:2;4400:18;;4393:34;;;;4306:18;846:566:28;4159:274:31;3922:114:21;;;:::i;2248:113:28:-;2332:22;;-1:-1:-1;;;;;2332:22:28;2248:113;;8243:135:24;;;;;;:::i;:::-;-1:-1:-1;;;;;8346:25:24;8323:4;8346:25;;;:15;:25;;;;;;;;;8243:135;6776:127;;;;;;:::i;:::-;;:::i;8560:141::-;;;;;;:::i;:::-;;:::i;5594:179:2:-;;;;;;:::i;:::-;;:::i;801:241:5:-;;;;;;:::i;:::-;;:::i;2445:125:21:-;;;;;;:::i;:::-;;:::i;7712:140:24:-;;;:::i;1851:275:23:-;;;:::i;3441:548:24:-;;;;;;:::i;:::-;;:::i;6232:196::-;;;;;;:::i;:::-;;:::i;2651:235:2:-;;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;:::i;:::-;;:::i;1908:101:0:-;;;:::i;2383:135:23:-;2482:31;;2383:135;;5724:386:24;;;;;;:::i;:::-;;:::i;4242:104:21:-;4333:8;;;;4242:104;;;;;;:::i;6512:119:24:-;;;:::i;1276:85:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;1276:85;;7360:271:24;;;;;;:::i;:::-;;:::i;8817:127::-;;;:::i;:::-;;;;;;;:::i;3110:102:2:-;;;:::i;3066:182:21:-;;;;;;:::i;:::-;;:::i;1729:205:27:-;;;;;;:::i;:::-;;:::i;2367:117:28:-;2453:24;;2367:117;;4784:181:24;;;;;;:::i;:::-;;:::i;5839:320:2:-;;;;;;:::i;:::-;;:::i;5280:257:24:-;;;;;;:::i;:::-;;:::i;3343:158:21:-;;;;;;:::i;:::-;;:::i;9094:346:24:-;;;;;;:::i;:::-;;:::i;1857:24::-;;;;;;4974:162:2;;;;;;:::i;:::-;;:::i;4072:134:21:-;;;;;;:::i;:::-;;:::i;1779:20:24:-;;;;;;;;;7095:169;;;;;;:::i;:::-;;:::i;2158:198:0:-;;;;;;:::i;:::-;;:::i;2703:268:21:-;;;;;;:::i;:::-;;:::i;3744:142::-;3826:16;3857:24;:4;:15;3862:9;3857:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;:24::i;:::-;3850:31;3744:142;-1:-1:-1;;3744:142:21:o;576:312:27:-;734:4;773:44;804:12;773:30;:44::i;:::-;:108;;;;833:48;868:12;833:34;:48::i;2948:98:2:-;3002:13;3034:5;3027:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:98;:::o;4471:217::-;4547:7;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:2;4566:73;;;;-1:-1:-1;;;4566:73:2;;11528:2:31;4566:73:2;;;11510:21:31;11567:2;11547:18;;;11540:30;11606:34;11586:18;;;11579:62;-1:-1:-1;;;11657:18:31;;;11650:42;11709:19;;4566:73:2;;;;;;;;;-1:-1:-1;4657:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4657:24:2;;4471:217::o;1439:173:27:-;1553:8;1472:28:21;1460:8;;;;:40;;;;;;;;:::i;:::-;;1456:309;;1515:50;1559:5;1515:4;:34;1520:28;1515:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;:43;;:50;;;;:::i;:::-;1510:92;;1574:28;;-1:-1:-1;;;1574:28:21;;;;;;;;;;;1510:92;1456:309;;;1631:27;1619:8;;;;:39;;;;;;;;:::i;:::-;;1615:150;;1672:49;1715:5;1672:4;:33;1677:27;1672:33;;:49;1668:90;;;1730:28;;-1:-1:-1;;;1730:28:21;;;;;;;;;;;1668:90;1577:28:27::1;1591:8;1601:3;1577:13;:28::i;:::-;1439:173:::0;;;:::o;9562:109:24:-;9614:7;9640:24;:14;929::9;;838:112;9640:24:24;9633:31;;9562:109;:::o;1133:200:27:-;1283:4;1319:7;1348:6:0;;-1:-1:-1;;;;;1348:6:0;;1276:85;1319:7:27;-1:-1:-1;;;;;1310:16:27;:5;-1:-1:-1;;;;;1310:16:27;;1303:23;;1133:200;;;:::o;1366:146:23:-;2069:30:21;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:21;;;;;;;;;;;2064:71;1464:43:23::1;1497:9;1464:32;:43::i;:::-;1366:146:::0;:::o;5198:330:2:-;5387:41;929:10:8;5406:12:2;5420:7;5387:18;:41::i;:::-;5379:103;;;;-1:-1:-1;;;5379:103:2;;;;;;;:::i;:::-;5493:28;5503:4;5509:2;5513:7;5493:9;:28::i;846:566:28:-;983:16;1049:26;;;:16;:26;;;;;;983:16;;-1:-1:-1;;;;;1049:26:28;:118;;1145:22;;-1:-1:-1;;;;;1145:22:28;1049:118;;;1104:26;;;;:16;:26;;;;;;-1:-1:-1;;;;;1104:26:28;1049:118;1038:129;;1193:212;1401:3;1193:190;1238:18;:28;1257:8;1238:28;;;;;;;;;;;;1270:1;1238:33;:131;;1345:24;;1238:131;;;1294:28;;;;:18;:28;;;;;;1238:131;1193:10;;:27;:190::i;:::-;:207;;:212::i;:::-;1177:228;;846:566;;;;;:::o;3922:114:21:-;4013:8;;3977:16;;4008:23;;:4;;:14;;4013:8;;4008:14;;;;;;;;:::i;6776:127:24:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;6859:37:24::1;6886:9;6859:26;:37::i;8560:141::-:0;8644:15;8686:7;1348:6:0;;-1:-1:-1;;;;;1348:6:0;;1276:85;5594:179:2;5727:39;5744:4;5750:2;5754:7;5727:39;;;;;;;;;;;;:16;:39::i;801:241:5:-;917:41;929:10:8;936:12:5;850:96:8;917:41:5;909:102;;;;-1:-1:-1;;;909:102:5;;12720:2:31;909:102:5;;;12702:21:31;12759:2;12739:18;;;12732:30;12798:34;12778:18;;;12771:62;-1:-1:-1;;;12849:18:31;;;12842:46;12905:19;;909:102:5;12518:412:31;909:102:5;1021:14;1027:7;1021:5;:14::i;2445:125:21:-;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:21;;;;;;;;;;;2064:71;2539:26:::1;2552:12;2539;:26::i;7712:140:24:-:0;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7769:34:24::1;::::0;::::1;::::0;::::1;::::0;7784:18;;7769:34:::1;:::i;:::-;;;;;;;;7813:25:::0;:32;;-1:-1:-1;;7813:32:24::1;7841:4;7813:32;::::0;;7712:140::o;1851:275:23:-;1950:15;1916:31;;:49;1912:117;;;1974:55;;-1:-1:-1;;;1974:55:23;;;;;;;;;;;1912:117;2035:40;2048:26;2035:12;:40::i;:::-;2086:35;;2110:10;;2086:35;;;;;1851:275::o;3441:548:24:-;3111:19:1;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:1;;;;;3168:65;-1:-1:-1;;;;;3616:22:24;::::1;3608:65;;;::::0;-1:-1:-1;;;3608:65:24;;14231:2:31;3608:65:24::1;::::0;::::1;14213:21:31::0;14270:2;14250:18;;;14243:30;14309:32;14289:18;;;14282:60;14359:18;;3608:65:24::1;14029:354:31::0;3608:65:24::1;3683:32;3712:2;2197:24:28::0;:38;2119:123;3683:32:24::1;3725:8;:16:::0;;-1:-1:-1;;3725:16:24::1;::::0;;::::1;3751:22:::0;;;3784:16:::1;:14;:16::i;:::-;3810:29;3824:5;;3810:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;3810:29:24::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;3831:7:24;;-1:-1:-1;3831:7:24;;;;3810:29;::::1;3831:7:::0;;;;3810:29;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;3810:13:24::1;::::0;-1:-1:-1;;;3810:29:24:i:1;:::-;3849:15;:13;:15::i;:::-;3874:17;:15;:17::i;:::-;3902:36;3929:8;3902:26;:36::i;:::-;3949:33;3973:8;3949:23;:33::i;:::-;3257:14:1::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:1;;;3327:14;;-1:-1:-1;14540:36:31;;3327:14:1;;14528:2:31;14513:18;3327:14:1;;;;;;;3253:99;3101:257;3441:548:24;;;;;;:::o;6232:196::-;6330:10;6309:17;6317:8;6309:7;:17::i;:::-;-1:-1:-1;;;;;6309:31:24;;6288:109;;;;-1:-1:-1;;;6288:109:24;;14789:2:31;6288:109:24;;;14771:21:31;14828:2;14808:18;;;14801:30;14867:33;14847:18;;;14840:61;14918:18;;6288:109:24;14587:355:31;6288:109:24;6407:14;6412:8;6407:4;:14::i;2651:235:2:-;2723:7;2758:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2758:16:2;;2784:73;;;;-1:-1:-1;;;2784:73:2;;15149:2:31;2784:73:2;;;15131:21:31;15188:2;15168:18;;;15161:30;15227:34;15207:18;;;15200:62;-1:-1:-1;;;15278:18:31;;;15271:39;15327:19;;2784:73:2;14947:405:31;2390:204:2;2462:7;-1:-1:-1;;;;;2489:19:2;;2481:73;;;;-1:-1:-1;;;2481:73:2;;15559:2:31;2481:73:2;;;15541:21:31;15598:2;15578:18;;;15571:30;15637:34;15617:18;;;15610:62;-1:-1:-1;;;15688:18:31;;;15681:39;15737:19;;2481:73:2;15357:405:31;2481:73:2;-1:-1:-1;;;;;;2571:16:2;;;;;:9;:16;;;;;;;2390:204::o;1908:101:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;5724:386:24:-;4299:8;;;5791:7;;4299:8;4298:9;4290:52;;;;-1:-1:-1;;;4290:52:24;;;;;;;:::i;:::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;5831:10:24::1;:21;::::0;:52:::1;;-1:-1:-1::0;5872:10:24::1;5856:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;5831:52;5810:147;;;::::0;-1:-1:-1;;;5810:147:24;;16328:2:31;5810:147:24::1;::::0;::::1;16310:21:31::0;16367:2;16347:18;;;16340:30;16406:34;16386:18;;;16379:62;-1:-1:-1;;;16457:18:31;;;16450:46;16513:19;;5810:147:24::1;16126:412:31::0;5810:147:24::1;5974:129;6000:9;6023:29;2453:24:28::0;;;2367:117;6023:29:24::1;2332:22:28::0;;-1:-1:-1;;;;;2332:22:28;5974:12:24::1;:129::i;4352:1::-;5724:386:::0;;;:::o;6512:119::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;6566:8:24::1;:15:::0;;-1:-1:-1;;6566:15:24::1;6577:4;6566:15;::::0;;6596:28:::1;::::0;6613:10:::1;::::0;6596:28:::1;::::0;6566:8:::1;::::0;6596:28:::1;6512:119::o:0;7360:271::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7460:25:24;;::::1;;7459:26;7438:106;;;::::0;-1:-1:-1;;;7438:106:24;;16745:2:31;7438:106:24::1;::::0;::::1;16727:21:31::0;16784:2;16764:18;;;16757:30;16823:34;16803:18;;;16796:62;-1:-1:-1;;;16874:18:31;;;16867:31;16915:19;;7438:106:24::1;16543:397:31::0;7438:106:24::1;7555:18:::0;:29:::1;7576:8:::0;;7555:18;:29:::1;:::i;:::-;;7599:25;7615:8;;7599:25;;;;;;;:::i;:::-;;;;;;;;7360:271:::0;;:::o;8817:127::-;8887:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;8887:17:24;8920;;;;;;;;;8927:10;8920:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8920:17:24;;;-1:-1:-1;;8920:17:24;;;;;;;;;;;;;;;;8817:127;-1:-1:-1;8817:127:24:o;3110:102:2:-;3166:13;3198:7;3191:14;;;;;:::i;3066:182:21:-;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:21;;;;;;;;;;;2064:71;3201:42:::1;3218:9;3229:6;;3201:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;3201:42:21;-1:-1:-1;3201:16:21::1;::::0;-1:-1:-1;;3201:42:21:i:1;1729:205:27:-:0;1857:9;1472:28:21;1460:8;;;;:40;;;;;;;;:::i;:::-;;1456:309;;1515:50;1559:5;1515:4;:34;1520:28;1515:34;;:50;1510:92;;1574:28;;-1:-1:-1;;;1574:28:21;;;;;;;;;;;1510:92;1456:309;;;1631:27;1619:8;;;;:39;;;;;;;;:::i;:::-;;1615:150;;1672:49;1715:5;1672:4;:33;1677:27;1672:33;;:49;1668:90;;;1730:28;;-1:-1:-1;;;1730:28:21;;;;;;;;;;;1668:90;1882:45:27::1;1906:9;1917;1882:23;:45::i;4784:181:24:-:0;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;4299:8:24::1;::::0;;::::1;4298:9;4290:52;;;;-1:-1:-1::0;;;4290:52:24::1;;;;;;;:::i;:::-;4919:39:::2;4932:8;;4942:15;4919:12;:39::i;5839:320:2:-:0;6008:41;929:10:8;6041:7:2;6008:18;:41::i;:::-;6000:103;;;;-1:-1:-1;;;6000:103:2;;;;;;;:::i;:::-;6113:39;6127:4;6133:2;6137:7;6146:5;6113:13;:39::i;:::-;5839:320;;;;:::o;5280:257:24:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;4299:8:24::1;::::0;;::::1;4298:9;4290:52;;;;-1:-1:-1::0;;;4290:52:24::1;;;;;;;:::i;:::-;5450:39:::2;5463:8;;5473:15;5450:12;:39::i;:::-;-1:-1:-1::0;;;;;5499:24:24::2;;::::0;;;:15:::2;:24;::::0;;;;:31;;-1:-1:-1;;5499:31:24::2;5526:4;5499:31;::::0;;-1:-1:-1;;;5280:257:24:o;3343:158:21:-;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:21;;;;;;;;;;;2064:71;3436:4:::1;:15;3441:9;3436:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3436:15:21;;;;;-1:-1:-1;3429:22:21::1;3436:15:::0;-1:-1:-1;3429:22:21::1;:::i;:::-;;;;;3474:10;-1:-1:-1::0;;;;;3462:34:21::1;;3486:9;3462:34;;;;;;:::i;:::-;;;;;;;;3343:158:::0;:::o;9094:346:24:-;9182:13;9288:18;9353:19;:8;:17;:19::i;:::-;9250:169;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9207:226;;9094:346;;;:::o;4974:162:2:-;-1:-1:-1;;;;;5094:25:2;;;5071:4;5094:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4974:162::o;4072:134:21:-;4172:8;;4148:4;;4167:34;;4191:9;;4167:4;;4148;;4172:8;;4167:14;;;;;;;;:::i;7095:169:24:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7219:26:24::1;::::0;;;:16:::1;:26;::::0;;;;:38;;-1:-1:-1;;;;;;7219:38:24::1;-1:-1:-1::0;;;;;7219:38:24;;;::::1;::::0;;;::::1;::::0;;7095:169::o;2158:198:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:0;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:0;;20788:2:31;2238:73:0::1;::::0;::::1;20770:21:31::0;20827:2;20807:18;;;20800:30;20866:34;20846:18;;;20839:62;-1:-1:-1;;;20917:18:31;;;20910:36;20963:19;;2238:73:0::1;20586:402:31::0;2238:73:0::1;2321:28;2340:8;2321:18;:28::i;2703:268:21:-:0;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:21;;;;;;;;;;;2064:71;2852:26:::1;2839:9;:39;;;;;;;;:::i;:::-;::::0;2835:84:::1;;2887:32;;-1:-1:-1::0;;;2887:32:21::1;;;;;;;;;;;2835:84;2925:41;2942:9;2953:6;;2925:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2961:4:21::1;::::0;-1:-1:-1;2925:16:21::1;::::0;-1:-1:-1;;2925:41:21:i:1;9581:257:19:-:0;9644:16;9672:22;9697:19;9705:3;9697:7;:19::i;:::-;9672:44;9581:257;-1:-1:-1;;;9581:257:19:o;4735:204:21:-;4821:4;-1:-1:-1;;;;;;4844:47:21;;-1:-1:-1;;;4844:47:21;;:88;;;4895:37;4919:12;4895:23;:37::i;9738:482:24:-;9935:4;-1:-1:-1;;;;;;9974:46:24;;-1:-1:-1;;;9974:46:24;;:110;;;10036:48;10072:11;10036:35;:48::i;:::-;9974:175;;;;10100:49;10137:11;10100:36;:49::i;:::-;9974:239;;;;10165:48;10201:11;10165:35;:48::i;8182:165:19:-;-1:-1:-1;;;;;8315:23:19;;8262:4;3849:19;;;:12;;;:19;;;;;;:24;;8285:55;3753:127;3998:412:2;4078:13;4094:34;4120:7;4094:25;:34::i;:::-;4078:50;;4152:5;-1:-1:-1;;;;;4146:11:2;:2;-1:-1:-1;;;;;4146:11:2;;4138:57;;;;-1:-1:-1;;;4138:57:2;;21195:2:31;4138:57:2;;;21177:21:31;21234:2;21214:18;;;21207:30;21273:34;21253:18;;;21246:62;-1:-1:-1;;;21324:18:31;;;21317:31;21365:19;;4138:57:2;20993:397:31;4138:57:2;929:10:8;-1:-1:-1;;;;;4227:21:2;;;;:62;;-1:-1:-1;4252:37:2;4269:5;929:10:8;4974:162:2;:::i;4252:37::-;4206:165;;;;-1:-1:-1;;;4206:165:2;;21597:2:31;4206:165:2;;;21579:21:31;21636:2;21616:18;;;21609:30;21675:34;21655:18;;;21648:62;21746:26;21726:18;;;21719:54;21790:19;;4206:165:2;21395:420:31;4206:165:2;4382:21;4391:2;4395:7;4382:8;:21::i;2815:290:23:-;2891:19;2931:20;:9;2943:8;2931:20;:::i;:::-;2913:38;;:15;:38;:::i;:::-;3004:31;;2962:87;;;22432:25:31;;;22488:2;22473:18;;22466:34;;;2891:60:23;;-1:-1:-1;2992:10:23;;2962:87;;22405:18:31;2962:87:23;;;;;;;3055:31;:45;-1:-1:-1;2815:290:23:o;7914:355:2:-;8007:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:2;8023:73;;;;-1:-1:-1;;;8023:73:2;;22713:2:31;8023:73:2;;;22695:21:31;22752:2;22732:18;;;22725:30;22791:34;22771:18;;;22764:62;-1:-1:-1;;;22842:18:31;;;22835:42;22894:19;;8023:73:2;22511:408:31;8023:73:2;8106:13;8122:34;8148:7;8122:25;:34::i;:::-;8106:50;;8185:5;-1:-1:-1;;;;;8174:16:2;:7;-1:-1:-1;;;;;8174:16:2;;:52;;;;8194:32;8211:5;8218:7;8194:16;:32::i;:::-;8174:87;;;;8254:7;-1:-1:-1;;;;;8230:31:2;:20;8242:7;8230:11;:20::i;:::-;-1:-1:-1;;;;;8230:31:2;;8174:87;8166:96;7914:355;-1:-1:-1;;;;7914:355:2:o;10946:616::-;11111:4;-1:-1:-1;;;;;11073:42:2;:34;11099:7;11073:25;:34::i;:::-;-1:-1:-1;;;;;11073:42:2;;11065:92;;;;-1:-1:-1;;;11065:92:2;;23126:2:31;11065:92:2;;;23108:21:31;23165:2;23145:18;;;23138:30;23204:34;23184:18;;;23177:62;-1:-1:-1;;;23255:18:31;;;23248:35;23300:19;;11065:92:2;22924:401:31;11065:92:2;-1:-1:-1;;;;;11175:16:2;;11167:65;;;;-1:-1:-1;;;11167:65:2;;23532:2:31;11167:65:2;;;23514:21:31;23571:2;23551:18;;;23544:30;23610:34;23590:18;;;23583:62;-1:-1:-1;;;23661:18:31;;;23654:34;23705:19;;11167:65:2;23330:400:31;11167:65:2;11344:29;11361:1;11365:7;11344:8;:29::i;:::-;-1:-1:-1;;;;;11384:15:2;;;;;;:9;:15;;;;;:20;;11403:1;;11384:15;:20;;11403:1;;11384:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11414:13:2;;;;;;:9;:13;;;;;:18;;11431:1;;11414:13;:18;;11431:1;;11414:18;:::i;:::-;;;;-1:-1:-1;;11442:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11442:21:2;-1:-1:-1;;;;;11442:21:2;;;;;;;;;11479:27;;11442:16;;11479:27;;;;;;;1439:173:27;;;:::o;3461:96:13:-;3519:7;3545:5;3549:1;3545;:5;:::i;3846:96::-;3904:7;3930:5;3934:1;3930;:5;:::i;1418:115:28:-;1492:22;:34;;-1:-1:-1;;;;;;1492:34:28;-1:-1:-1;;;;;1492:34:28;;;;;;;;;;1418:115::o;10205:417:2:-;10264:13;10280:34;10306:7;10280:25;:34::i;:::-;10264:50;;10411:29;10428:1;10432:7;10411:8;:29::i;:::-;-1:-1:-1;;;;;10451:16:2;;;;;;:9;:16;;;;;:21;;10471:1;;10451:16;:21;;10471:1;;10451:21;:::i;:::-;;;;-1:-1:-1;;10489:16:2;;;;:7;:16;;;;;;10482:23;;-1:-1:-1;;;;;;10482:23:2;;;10521:36;10497:7;;10489:16;-1:-1:-1;;;;;10521:36:2;;;;;10489:16;;10521:36;10568:47;10254:368;10205:417;:::o;5223:164:21:-;5340:12;5302:51;;;;;;;;:::i;:::-;5330:8;;;;5302:51;;;;;;;;:::i;:::-;;;5318:10;;5302:51;;;;;5359:8;:23;;5370:12;;5359:8;-1:-1:-1;;5359:23:21;;5370:12;5359:23;;;;;;;;:::i;:::-;;;;;;5223:164;:::o;5287:808:1:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:1;1476:19:7;:23;5738:61:1;5713:166;;;;-1:-1:-1;;;5713:166:1;;;;;;;:::i;:::-;-1:-1:-1;5900:5:1;;5287:808;-1:-1:-1;5287:808:1:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:1;;;;;;;:::i;:::-;-1:-1:-1;6031:12:1;:22;;-1:-1:-1;;6031:22:1;;;;;;;;;;;;-1:-1:-1;;5287:808:1:o;988:95:0:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;1605:149:2:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1708:39:2::1;1732:5;1739:7;1708:23;:39::i;862:58:11:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;755:85:28:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;818:15:28::1;:13;:15::i;2510:187:0:-:0;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;10762:489:24:-;10899:7;10918:26;:14;1043:19:9;;1061:1;1043:19;;;956:123;10918:26:24;10954:15;10972:24;:14;929::9;;838:112;10972:24:24;10954:42;;11025:9;;11014:7;:20;;11006:65;;;;-1:-1:-1;;;11006:65:24;;25151:2:31;11006:65:24;;;25133:21:31;;;25170:18;;;25163:30;25229:34;25209:18;;;25202:62;25281:18;;11006:65:24;24949:356:31;11006:65:24;11081:23;11091:3;11096:7;11081:9;:23::i;:::-;1794:28:28;;;;:18;:28;;;;;:42;;;1639:26;;;;:16;:26;;;;;:41;;-1:-1:-1;;;;;;1639:41:28;-1:-1:-1;;;;;1639:41:28;;;;;11237:7:24;10762:489;-1:-1:-1;;;;10762:489:24:o;5471:505:21:-;5602:26;5589:9;:39;;;;;;;;:::i;:::-;;5585:387;;5643:9;5638:328;5662:6;:13;5658:1;:17;5638:328;;;5696:7;5692:266;;;5717:30;5737:6;5744:1;5737:9;;;;;;;;:::i;:::-;;;;;;;5717:4;:15;5722:9;5717:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;;5806:9;5764:52;;;;;;;;:::i;:::-;5795:6;5802:1;5795:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5764:52:21;5783:10;-1:-1:-1;;;;;5764:52:21;;;;;;;;;;;5692:266;;;5845:33;5868:6;5875:1;5868:9;;;;;;;;:::i;:::-;;;;;;;5845:4;:15;5850:9;5845:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;:33;;;;:::i;:::-;;5937:9;5895:52;;;;;;;;:::i;:::-;5926:6;5933:1;5926:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5895:52:21;5914:10;-1:-1:-1;;;;;5895:52:21;;;;;;;;;;;5692:266;5677:3;;;;:::i;:::-;;;;5638:328;;4755:153:2;4849:52;929:10:8;4882:8:2;4892;4849:18;:52::i;11488:483:24:-;11642:9;;11623:15;:28;;11602:107;;;;-1:-1:-1;;;11602:107:24;;25784:2:31;11602:107:24;;;25766:21:31;;;25803:18;;;25796:30;25862:34;25842:18;;;25835:62;25914:18;;11602:107:24;25582:356:31;11602:107:24;11740:14;929::9;11740:29:24;11719:125;;;;-1:-1:-1;;;11719:125:24;;26145:2:31;11719:125:24;;;26127:21:31;26184:2;26164:18;;;26157:30;26223:34;26203:18;;;26196:62;-1:-1:-1;;;26274:18:31;;;26267:47;26331:19;;11719:125:24;25943:413:31;11719:125:24;11867:44;;;;;;;;11878:15;11867:44;;;;11895:8;;11867:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11867:44:24;;;-1:-1:-1;;;11867:44:24;;;;;11854:57;;:10;:57;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11854:57:24;;;;;;;;;;;;-1:-1:-1;;11854:57:24;;;;;;;;;;11926:38;11938:15;;11926:38;;;;11955:8;;;;11926:38;:::i;:::-;;;;;;;;11488:483;;;:::o;7021:307:2:-;7172:28;7182:4;7188:2;7192:7;7172:9;:28::i;:::-;7218:48;7241:4;7247:2;7251:7;7260:5;7218:22;:48::i;:::-;7210:111;;;;-1:-1:-1;;;7210:111:2;;;;;;;:::i;339:703:10:-;395:13;612:5;621:1;612:10;608:51;;-1:-1:-1;;638:10:10;;;;;;;;;;;;-1:-1:-1;;;638:10:10;;;;;339:703::o;608:51::-;683:5;668:12;722:75;729:9;;722:75;;754:8;;;;:::i;:::-;;-1:-1:-1;776:10:10;;-1:-1:-1;784:2:10;776:10;;:::i;:::-;;;722:75;;;806:19;838:6;828:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;828:17:10;;806:39;;855:150;862:10;;855:150;;888:11;898:1;888:11;;:::i;:::-;;-1:-1:-1;956:10:10;964:2;956:5;:10;:::i;:::-;943:24;;:2;:24;:::i;:::-;930:39;;913:6;920;913:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;913:56:10;;;;;;;;-1:-1:-1;983:11:10;992:2;983:11;;:::i;:::-;;;855:150;;5068:109:19;5124:16;5159:3;:11;;5152:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5068:109;;;:::o;829:155:17:-;-1:-1:-1;;;;;;937:40:17;-1:-1:-1;;;937:40:17;;829:155::o;1849:264:28:-;1974:4;-1:-1:-1;;;;;;2013:41:28;;-1:-1:-1;;;2013:41:28;;:93;;;2070:36;2094:11;1987:344:2;2111:4;-1:-1:-1;;;;;;2146:51:2;;-1:-1:-1;;;2146:51:2;;:126;;-1:-1:-1;;;;;;;2213:59:2;;-1:-1:-1;;;2213:59:2;2146:126;:178;;;;2288:36;2312:11;2288:23;:36::i;11673:182::-;11747:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11747:29:2;-1:-1:-1;;;;;11747:29:2;;;;;;;;:24;;11800:34;11747:24;11800:25;:34::i;:::-;-1:-1:-1;;;;;11791:57:2;;;;;;;;;;;11673:182;;:::o;1089:111:0:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:8::0;1161:18:0::1;:32::i;1760:160:2:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1873:5:2::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:2::1;:17;1906:7:::0;1896;:17:::1;:::i;8599:108::-:0;8674:26;8684:2;8688:7;8674:26;;;;;;;;;;;;:9;:26::i;7627:150:19:-;7697:4;7720:50;7725:3;-1:-1:-1;;;;;7745:23:19;;7720:4;:50::i;7945:156::-;8018:4;8041:53;8049:3;-1:-1:-1;;;;;8069:23:19;;8041:7;:53::i;11990:307:2:-;12140:8;-1:-1:-1;;;;;12131:17:2;:5;-1:-1:-1;;;;;12131:17:2;;12123:55;;;;-1:-1:-1;;;12123:55:2;;28456:2:31;12123:55:2;;;28438:21:31;28495:2;28475:18;;;28468:30;28534:27;28514:18;;;28507:55;28579:18;;12123:55:2;28254:349:31;12123:55:2;-1:-1:-1;;;;;12188:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12188:46:2;;;;;;;;;;12249:41;;1567::31;;;12249::2;;1540:18:31;12249:41:2;;;;;;;11990:307;;;:::o;12850:800::-;13000:4;-1:-1:-1;;;;;13020:13:2;;1476:19:7;:23;13016:628:2;;13055:83;;-1:-1:-1;;;13055:83:2;;-1:-1:-1;;;;;13055:47:2;;;;;:83;;929:10:8;;13117:4:2;;13123:7;;13132:5;;13055:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13055:83:2;;;;;;;;-1:-1:-1;;13055:83:2;;;;;;;;;;;;:::i;:::-;;;13051:541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13316:6;:13;13333:1;13316:18;13312:266;;13358:60;;-1:-1:-1;;;13358:60:2;;;;;;;:::i;13312:266::-;13530:6;13524:13;13515:6;13511:2;13507:15;13500:38;13051:541;-1:-1:-1;;;;;;13188:62:2;-1:-1:-1;;;13188:62:2;;-1:-1:-1;13181:69:2;;13016:628;-1:-1:-1;13629:4:2;12850:800;;;;;;:::o;8928:311::-;9053:18;9059:2;9063:7;9053:5;:18::i;:::-;9102:54;9133:1;9137:2;9141:7;9150:5;9102:22;:54::i;:::-;9081:151;;;;-1:-1:-1;;;9081:151:2;;;;;;;:::i;1712:404:19:-;1775:4;3849:19;;;:12;;;:19;;;;;;1791:319;;-1:-1:-1;1833:23:19;;;;;;;;:11;:23;;;;;;;;;;;;;2013:18;;1991:19;;;:12;;;:19;;;;;;:40;;;;2045:11;;1791:319;-1:-1:-1;2094:5:19;2087:12;;2284:1388;2350:4;2487:19;;;:12;;;:19;;;;;;2521:15;;2517:1149;;2890:21;2914:14;2927:1;2914:10;:14;:::i;:::-;2962:18;;2890:38;;-1:-1:-1;2942:17:19;;2962:22;;2983:1;;2962:22;:::i;:::-;2942:42;;3016:13;3003:9;:26;2999:398;;3049:17;3069:3;:11;;3081:9;3069:22;;;;;;;;:::i;:::-;;;;;;;;;3049:42;;3220:9;3191:3;:11;;3203:13;3191:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3303:23;;;:12;;;:23;;;;;:36;;;2999:398;3475:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3567:3;:12;;:19;3580:5;3567:19;;;;;;;;;;;3560:26;;;3608:4;3601:11;;;;;;;2517:1149;3650:5;3643:12;;;;;9561:427:2;-1:-1:-1;;;;;9640:16:2;;9632:61;;;;-1:-1:-1;;;9632:61:2;;29690:2:31;9632:61:2;;;29672:21:31;;;29709:18;;;29702:30;29768:34;29748:18;;;29741:62;29820:18;;9632:61:2;29488:356:31;9632:61:2;7696:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:2;:30;9703:58;;;;-1:-1:-1;;;9703:58:2;;30051:2:31;9703:58:2;;;30033:21:31;30090:2;30070:18;;;30063:30;30129;30109:18;;;30102:58;30177:18;;9703:58:2;29849:352:31;9703:58:2;-1:-1:-1;;;;;9828:13:2;;;;;;:9;:13;;;;;:18;;9845:1;;9828:13;:18;;9845:1;;9828:18;:::i;:::-;;;;-1:-1:-1;;9856:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9856:21:2;-1:-1:-1;;;;;9856:21:2;;;;;;;;9893:33;;9856:16;;;9893:33;;9856:16;;9893:33;10254:368;10205:417;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:149:31:-;88:20;;137:1;127:12;;117:40;;153:1;150;143:12;168:205;240:6;293:2;281:9;272:7;268:23;264:32;261:52;;;309:1;306;299:12;261:52;332:35;357:9;332:35;:::i;378:658::-;549:2;601:21;;;671:13;;574:18;;;693:22;;;520:4;;549:2;772:15;;;;746:2;731:18;;;520:4;815:195;829:6;826:1;823:13;815:195;;;894:13;;-1:-1:-1;;;;;890:39:31;878:52;;985:15;;;;950:12;;;;926:1;844:9;815:195;;;-1:-1:-1;1027:3:31;;378:658;-1:-1:-1;;;;;;378:658:31:o;1041:131::-;-1:-1:-1;;;;;;1115:32:31;;1105:43;;1095:71;;1162:1;1159;1152:12;1177:245;1235:6;1288:2;1276:9;1267:7;1263:23;1259:32;1256:52;;;1304:1;1301;1294:12;1256:52;1343:9;1330:23;1362:30;1386:5;1362:30;:::i;1619:258::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1791:11;;;1785:18;1772:11;;;1765:39;1737:2;1730:10;1701:113;;;1832:6;1829:1;1826:13;1823:48;;;-1:-1:-1;;1867:1:31;1849:16;;1842:27;1619:258::o;1882:::-;1924:3;1962:5;1956:12;1989:6;1984:3;1977:19;2005:63;2061:6;2054:4;2049:3;2045:14;2038:4;2031:5;2027:16;2005:63;:::i;:::-;2122:2;2101:15;-1:-1:-1;;2097:29:31;2088:39;;;;2129:4;2084:50;;1882:258;-1:-1:-1;;1882:258:31:o;2145:220::-;2294:2;2283:9;2276:21;2257:4;2314:45;2355:2;2344:9;2340:18;2332:6;2314:45;:::i;2370:180::-;2429:6;2482:2;2470:9;2461:7;2457:23;2453:32;2450:52;;;2498:1;2495;2488:12;2450:52;-1:-1:-1;2521:23:31;;2370:180;-1:-1:-1;2370:180:31:o;2763:173::-;2831:20;;-1:-1:-1;;;;;2880:31:31;;2870:42;;2860:70;;2926:1;2923;2916:12;2941:254;3009:6;3017;3070:2;3058:9;3049:7;3045:23;3041:32;3038:52;;;3086:1;3083;3076:12;3038:52;3109:29;3128:9;3109:29;:::i;:::-;3099:39;3185:2;3170:18;;;;3157:32;;-1:-1:-1;;;2941:254:31:o;3382:186::-;3441:6;3494:2;3482:9;3473:7;3469:23;3465:32;3462:52;;;3510:1;3507;3500:12;3462:52;3533:29;3552:9;3533:29;:::i;3573:328::-;3650:6;3658;3666;3719:2;3707:9;3698:7;3694:23;3690:32;3687:52;;;3735:1;3732;3725:12;3687:52;3758:29;3777:9;3758:29;:::i;:::-;3748:39;;3806:38;3840:2;3829:9;3825:18;3806:38;:::i;:::-;3796:48;;3891:2;3880:9;3876:18;3863:32;3853:42;;3573:328;;;;;:::o;3906:248::-;3974:6;3982;4035:2;4023:9;4014:7;4010:23;4006:32;4003:52;;;4051:1;4048;4041:12;4003:52;-1:-1:-1;;4074:23:31;;;4144:2;4129:18;;;4116:32;;-1:-1:-1;3906:248:31:o;4662:348::-;4714:8;4724:6;4778:3;4771:4;4763:6;4759:17;4755:27;4745:55;;4796:1;4793;4786:12;4745:55;-1:-1:-1;4819:20:31;;4862:18;4851:30;;4848:50;;;4894:1;4891;4884:12;4848:50;4931:4;4923:6;4919:17;4907:29;;4983:3;4976:4;4967:6;4959;4955:19;4951:30;4948:39;4945:59;;;5000:1;4997;4990:12;4945:59;4662:348;;;;;:::o;5015:864::-;5125:6;5133;5141;5149;5157;5165;5218:3;5206:9;5197:7;5193:23;5189:33;5186:53;;;5235:1;5232;5225:12;5186:53;5275:9;5262:23;5304:18;5345:2;5337:6;5334:14;5331:34;;;5361:1;5358;5351:12;5331:34;5400:59;5451:7;5442:6;5431:9;5427:22;5400:59;:::i;:::-;5478:8;;-1:-1:-1;5374:85:31;-1:-1:-1;5566:2:31;5551:18;;5538:32;;-1:-1:-1;5582:16:31;;;5579:36;;;5611:1;5608;5601:12;5579:36;;5650:61;5703:7;5692:8;5681:9;5677:24;5650:61;:::i;:::-;5730:8;;-1:-1:-1;5624:87:31;-1:-1:-1;5784:38:31;;-1:-1:-1;5818:2:31;5803:18;;5784:38;:::i;:::-;5774:48;;5869:2;5858:9;5854:18;5841:32;5831:42;;5015:864;;;;;;;;:::o;5884:127::-;5945:10;5940:3;5936:20;5933:1;5926:31;5976:4;5973:1;5966:15;6000:4;5997:1;5990:15;6016:341;6161:2;6146:18;;6194:1;6183:13;;6173:144;;6239:10;6234:3;6230:20;6227:1;6220:31;6274:4;6271:1;6264:15;6302:4;6299:1;6292:15;6173:144;6326:25;;;6016:341;:::o;6362:411::-;6433:6;6441;6494:2;6482:9;6473:7;6469:23;6465:32;6462:52;;;6510:1;6507;6500:12;6462:52;6550:9;6537:23;6583:18;6575:6;6572:30;6569:50;;;6615:1;6612;6605:12;6569:50;6654:59;6705:7;6696:6;6685:9;6681:22;6654:59;:::i;:::-;6732:8;;6628:85;;-1:-1:-1;6362:411:31;-1:-1:-1;;;;6362:411:31:o;6778:511::-;6963:2;6952:9;6945:21;7008:6;7002:13;6997:2;6986:9;6982:18;6975:41;6926:4;7063:2;7055:6;7051:15;7045:22;7103:4;7098:2;7087:9;7083:18;7076:32;7131:52;7178:3;7167:9;7163:19;7149:12;7131:52;:::i;:::-;7117:66;;7253:2;7245:6;7241:15;7235:22;7228:30;7221:38;7214:4;7203:9;7199:20;7192:68;7277:6;7269:14;;;6778:511;;;;:::o;7294:708::-;7402:6;7410;7418;7471:2;7459:9;7450:7;7446:23;7442:32;7439:52;;;7487:1;7484;7477:12;7439:52;7510:35;7535:9;7510:35;:::i;:::-;7500:45;;7596:2;7585:9;7581:18;7568:32;7619:18;7660:2;7652:6;7649:14;7646:34;;;7676:1;7673;7666:12;7646:34;7714:6;7703:9;7699:22;7689:32;;7759:7;7752:4;7748:2;7744:13;7740:27;7730:55;;7781:1;7778;7771:12;7730:55;7821:2;7808:16;7847:2;7839:6;7836:14;7833:34;;;7863:1;7860;7853:12;7833:34;7916:7;7911:2;7901:6;7898:1;7894:14;7890:2;7886:23;7882:32;7879:45;7876:65;;;7937:1;7934;7927:12;7876:65;7968:2;7964;7960:11;7950:21;;7990:6;7980:16;;;;;7294:708;;;;;:::o;8007:347::-;8072:6;8080;8133:2;8121:9;8112:7;8108:23;8104:32;8101:52;;;8149:1;8146;8139:12;8101:52;8172:29;8191:9;8172:29;:::i;:::-;8162:39;;8251:2;8240:9;8236:18;8223:32;8298:5;8291:13;8284:21;8277:5;8274:32;8264:60;;8320:1;8317;8310:12;8264:60;8343:5;8333:15;;;8007:347;;;;;:::o;8359:479::-;8439:6;8447;8455;8508:2;8496:9;8487:7;8483:23;8479:32;8476:52;;;8524:1;8521;8514:12;8476:52;8564:9;8551:23;8597:18;8589:6;8586:30;8583:50;;;8629:1;8626;8619:12;8583:50;8668:59;8719:7;8710:6;8699:9;8695:22;8668:59;:::i;:::-;8746:8;;8642:85;;-1:-1:-1;8828:2:31;8813:18;;;;8800:32;;8359:479;-1:-1:-1;;;;8359:479:31:o;8843:127::-;8904:10;8899:3;8895:20;8892:1;8885:31;8935:4;8932:1;8925:15;8959:4;8956:1;8949:15;8975:1138;9070:6;9078;9086;9094;9147:3;9135:9;9126:7;9122:23;9118:33;9115:53;;;9164:1;9161;9154:12;9115:53;9187:29;9206:9;9187:29;:::i;:::-;9177:39;;9235:38;9269:2;9258:9;9254:18;9235:38;:::i;:::-;9225:48;;9320:2;9309:9;9305:18;9292:32;9282:42;;9375:2;9364:9;9360:18;9347:32;9398:18;9439:2;9431:6;9428:14;9425:34;;;9455:1;9452;9445:12;9425:34;9493:6;9482:9;9478:22;9468:32;;9538:7;9531:4;9527:2;9523:13;9519:27;9509:55;;9560:1;9557;9550:12;9509:55;9596:2;9583:16;9618:2;9614;9611:10;9608:36;;;9624:18;;:::i;:::-;9699:2;9693:9;9667:2;9753:13;;-1:-1:-1;;9749:22:31;;;9773:2;9745:31;9741:40;9729:53;;;9797:18;;;9817:22;;;9794:46;9791:72;;;9843:18;;:::i;:::-;9883:10;9879:2;9872:22;9918:2;9910:6;9903:18;9958:7;9953:2;9948;9944;9940:11;9936:20;9933:33;9930:53;;;9979:1;9976;9969:12;9930:53;10035:2;10030;10026;10022:11;10017:2;10009:6;10005:15;9992:46;10080:1;10075:2;10070;10062:6;10058:15;10054:24;10047:35;10101:6;10091:16;;;;;;;8975:1138;;;;;;;:::o;10118:553::-;10207:6;10215;10223;10231;10284:2;10272:9;10263:7;10259:23;10255:32;10252:52;;;10300:1;10297;10290:12;10252:52;10340:9;10327:23;10373:18;10365:6;10362:30;10359:50;;;10405:1;10402;10395:12;10359:50;10444:59;10495:7;10486:6;10475:9;10471:22;10444:59;:::i;:::-;10522:8;;-1:-1:-1;10418:85:31;-1:-1:-1;;10604:2:31;10589:18;;10576:32;;-1:-1:-1;10627:38:31;10661:2;10646:18;;10627:38;:::i;:::-;10617:48;;10118:553;;;;;;;:::o;10676:260::-;10744:6;10752;10805:2;10793:9;10784:7;10780:23;10776:32;10773:52;;;10821:1;10818;10811:12;10773:52;10844:29;10863:9;10844:29;:::i;:::-;10834:39;;10892:38;10926:2;10915:9;10911:18;10892:38;:::i;10941:380::-;11020:1;11016:12;;;;11063;;;11084:61;;11138:4;11130:6;11126:17;11116:27;;11084:61;11191:2;11183:6;11180:14;11160:18;11157:38;11154:161;;11237:10;11232:3;11228:20;11225:1;11218:31;11272:4;11269:1;11262:15;11300:4;11297:1;11290:15;11154:161;;10941:380;;;:::o;11739:413::-;11941:2;11923:21;;;11980:2;11960:18;;;11953:30;12019:34;12014:2;11999:18;;11992:62;-1:-1:-1;;;12085:2:31;12070:18;;12063:47;12142:3;12127:19;;11739:413::o;12157:356::-;12359:2;12341:21;;;12378:18;;;12371:30;12437:34;12432:2;12417:18;;12410:62;12504:2;12489:18;;12157:356::o;13061:963::-;13170:4;13199:2;13228;13217:9;13210:21;13251:1;13284:6;13278:13;13314:36;13340:9;13314:36;:::i;:::-;13386:6;13381:2;13370:9;13366:18;13359:34;13412:2;13433:1;13465:2;13454:9;13450:18;13482:1;13477:158;;;;13649:1;13644:354;;;;13443:555;;13477:158;-1:-1:-1;;13525:24:31;;13505:18;;;13498:52;13603:14;;13596:22;13593:1;13589:30;13574:46;;13570:55;;;-1:-1:-1;13477:158:31;;13644:354;13675:6;13672:1;13665:17;13723:2;13720:1;13710:16;13748:1;13762:180;13776:6;13773:1;13770:13;13762:180;;;13869:14;;13845:17;;;13841:26;;13834:50;13912:16;;;;13791:10;;13762:180;;;13966:17;;13962:26;;;-1:-1:-1;;13443:555:31;-1:-1:-1;14015:3:31;;13061:963;-1:-1:-1;;;;;;;;13061:963:31:o;15767:354::-;15969:2;15951:21;;;16008:2;15988:18;;;15981:30;16047:32;16042:2;16027:18;;16020:60;16112:2;16097:18;;15767:354::o;16945:545::-;17047:2;17042:3;17039:11;17036:448;;;17083:1;17108:5;17104:2;17097:17;17153:4;17149:2;17139:19;17223:2;17211:10;17207:19;17204:1;17200:27;17194:4;17190:38;17259:4;17247:10;17244:20;17241:47;;;-1:-1:-1;17282:4:31;17241:47;17337:2;17332:3;17328:12;17325:1;17321:20;17315:4;17311:31;17301:41;;17392:82;17410:2;17403:5;17400:13;17392:82;;;17455:17;;;17436:1;17425:13;17392:82;;;17396:3;;;16945:545;;;:::o;17666:1206::-;17790:18;17785:3;17782:27;17779:53;;;17812:18;;:::i;:::-;17841:94;17931:3;17891:38;17923:4;17917:11;17891:38;:::i;:::-;17885:4;17841:94;:::i;:::-;17961:1;17986:2;17981:3;17978:11;18003:1;17998:616;;;;18658:1;18675:3;18672:93;;;-1:-1:-1;18731:19:31;;;18718:33;18672:93;-1:-1:-1;;17623:1:31;17619:11;;;17615:24;17611:29;17601:40;17647:1;17643:11;;;17598:57;18778:78;;17971:895;;17998:616;13008:1;13001:14;;;13045:4;13032:18;;-1:-1:-1;;18034:17:31;;;18135:9;18157:229;18171:7;18168:1;18165:14;18157:229;;;18260:19;;;18247:33;18232:49;;18367:4;18352:20;;;;18320:1;18308:14;;;;18187:12;18157:229;;;18161:3;18414;18405:7;18402:16;18399:159;;;18538:1;18534:6;18528:3;18522;18519:1;18515:11;18511:21;18507:34;18503:39;18490:9;18485:3;18481:19;18468:33;18464:79;18456:6;18449:95;18399:159;;;18601:1;18595:3;18592:1;18588:11;18584:19;18578:4;18571:33;17971:895;;;17666:1206;;;:::o;18877:390::-;19036:2;19025:9;19018:21;19075:6;19070:2;19059:9;19055:18;19048:34;19132:6;19124;19119:2;19108:9;19104:18;19091:48;19188:1;19159:22;;;19183:2;19155:31;;;19148:42;;;;19251:2;19230:15;;;-1:-1:-1;;19226:29:31;19211:45;19207:54;;18877:390;-1:-1:-1;18877:390:31:o;19272:1309::-;19650:3;19679:1;19712:6;19706:13;19742:36;19768:9;19742:36;:::i;:::-;19797:1;19814:18;;;19841:133;;;;19988:1;19983:356;;;;19807:532;;19841:133;-1:-1:-1;;19874:24:31;;19862:37;;19947:14;;19940:22;19928:35;;19919:45;;;-1:-1:-1;19841:133:31;;19983:356;20014:6;20011:1;20004:17;20044:4;20089:2;20086:1;20076:16;20114:1;20128:165;20142:6;20139:1;20136:13;20128:165;;;20220:14;;20207:11;;;20200:35;20263:16;;;;20157:10;;20128:165;;;20132:3;;;20322:6;20317:3;20313:16;20306:23;;19807:532;;-1:-1:-1;;;20355:3:31;20348:16;20395:6;20389:13;20373:29;;20411:64;20466:8;20461:2;20456:3;20452:12;20445:4;20437:6;20433:17;20411:64;:::i;:::-;-1:-1:-1;;;20494:18:31;;;;20528:11;;;20521:28;;;;20573:1;20565:10;;19272:1309;-1:-1:-1;;;;;19272:1309:31:o;21820:127::-;21881:10;21876:3;21872:20;21869:1;21862:31;21912:4;21909:1;21902:15;21936:4;21933:1;21926:15;21952:168;21992:7;22058:1;22054;22050:6;22046:14;22043:1;22040:21;22035:1;22028:9;22021:17;22017:45;22014:71;;;22065:18;;:::i;:::-;-1:-1:-1;22105:9:31;;21952:168::o;22125:128::-;22165:3;22196:1;22192:6;22189:1;22186:13;22183:39;;;22202:18;;:::i;:::-;-1:-1:-1;22238:9:31;;22125:128::o;23735:125::-;23775:4;23803:1;23800;23797:8;23794:34;;;23808:18;;:::i;:::-;-1:-1:-1;23845:9:31;;23735:125::o;23865:127::-;23926:10;23921:3;23917:20;23914:1;23907:31;23957:4;23954:1;23947:15;23981:4;23978:1;23971:15;23997:120;24037:1;24063;24053:35;;24068:18;;:::i;:::-;-1:-1:-1;24102:9:31;;23997:120::o;24122:410::-;24324:2;24306:21;;;24363:2;24343:18;;;24336:30;24402:34;24397:2;24382:18;;24375:62;-1:-1:-1;;;24468:2:31;24453:18;;24446:44;24522:3;24507:19;;24122:410::o;24537:407::-;24739:2;24721:21;;;24778:2;24758:18;;;24751:30;24817:34;24812:2;24797:18;;24790:62;-1:-1:-1;;;24883:2:31;24868:18;;24861:41;24934:3;24919:19;;24537:407::o;25310:127::-;25371:10;25366:3;25362:20;25359:1;25352:31;25402:4;25399:1;25392:15;25426:4;25423:1;25416:15;25442:135;25481:3;25502:17;;;25499:43;;25522:18;;:::i;:::-;-1:-1:-1;25569:1:31;25558:13;;25442:135::o;26361:1352::-;26487:3;26481:10;26514:18;26506:6;26503:30;26500:56;;;26536:18;;:::i;:::-;26565:97;26655:6;26615:38;26647:4;26641:11;26615:38;:::i;:::-;26609:4;26565:97;:::i;:::-;26717:4;;26781:2;26770:14;;26798:1;26793:663;;;;27500:1;27517:6;27514:89;;;-1:-1:-1;27569:19:31;;;27563:26;27514:89;-1:-1:-1;;17623:1:31;17619:11;;;17615:24;17611:29;17601:40;17647:1;17643:11;;;17598:57;27616:81;;26763:944;;26793:663;13008:1;13001:14;;;13045:4;13032:18;;-1:-1:-1;;26829:20:31;;;26947:236;26961:7;26958:1;26955:14;26947:236;;;27050:19;;;27044:26;27029:42;;27142:27;;;;27110:1;27098:14;;;;26977:19;;26947:236;;;26951:3;27211:6;27202:7;27199:19;27196:201;;;27272:19;;;27266:26;-1:-1:-1;;27355:1:31;27351:14;;;27367:3;27347:24;27343:37;27339:42;27324:58;27309:74;;27196:201;-1:-1:-1;;;;;27443:1:31;27427:14;;;27423:22;27410:36;;-1:-1:-1;26361:1352:31:o;27718:414::-;27920:2;27902:21;;;27959:2;27939:18;;;27932:30;27998:34;27993:2;27978:18;;27971:62;-1:-1:-1;;;28064:2:31;28049:18;;28042:48;28122:3;28107:19;;27718:414::o;28137:112::-;28169:1;28195;28185:35;;28200:18;;:::i;:::-;-1:-1:-1;28234:9:31;;28137:112::o;28608:489::-;-1:-1:-1;;;;;28877:15:31;;;28859:34;;28929:15;;28924:2;28909:18;;28902:43;28976:2;28961:18;;28954:34;;;29024:3;29019:2;29004:18;;28997:31;;;28802:4;;29045:46;;29071:19;;29063:6;29045:46;:::i;:::-;29037:54;28608:489;-1:-1:-1;;;;;;28608:489:31:o;29102:249::-;29171:6;29224:2;29212:9;29203:7;29199:23;29195:32;29192:52;;;29240:1;29237;29230:12;29192:52;29272:9;29266:16;29291:30;29315:5;29291:30;:::i;29356:127::-;29417:10;29412:3;29408:20;29405:1;29398:31;29448:4;29445:1;29438:15;29472:4;29469:1;29462:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "activateDeadmanListTrigger()": "5aec8d62",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchAddAddressToRoyaltyList(uint8,address[])": "ff6e8c8f",
    "batchRemoveAddressToRoyaltyList(uint8,address[])": "9e860f2a",
    "burn(uint256)": "42966c68",
    "clearList(uint8)": "bc719455",
    "deleteToken(uint256)": "6297c16c",
    "disableContract()": "894ba833",
    "disabled()": "ee070805",
    "getApproved(uint256)": "081812fc",
    "getDeadmanTriggerAvailableDatetime()": "717392ed",
    "getDefaultRoyaltyPercentage()": "ab69607a",
    "getDefaultRoyaltyReceiver()": "3403c4e9",
    "getInUseList()": "2ce878da",
    "getList(uint8)": "012cf1e8",
    "getListType()": "87bc793f",
    "getMintConfig()": "9338bb5d",
    "hasAdminPermission(address)": "20427486",
    "init(string,string,address,uint256)": "5edc7c19",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedMinter(address)": "3a3d146f",
    "isOperatorInList(address)": "eab85118",
    "lockBaseURI()": "53df5c7c",
    "maxTokens()": "e8315742",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "prepareMint(string,uint256)": "b390ac25",
    "prepareMintWithMinter(string,uint256,address)": "b9fbd25c",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDeadmanListTriggerRenewalDuration(uint256)": "21c4a5d8",
    "setDefaultRoyaltyReceiver(address)": "3ebc82c5",
    "setRoyaltyReceiverForToken(address,uint256)": "efc32cd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "toggleListType(uint8)": "472a6638",
    "tokenCreator(uint256)": "40c1a064",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateBaseURI(string)": "931688cb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CantAddToOFFList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadmanTriggerStillActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addedAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_ListType\",\"type\":\"uint8\"}],\"name\":\"AddressAddedToList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_removedAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_ListType\",\"type\":\"uint8\"}],\"name\":\"AddressRemovedList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_activator\",\"type\":\"address\"}],\"name\":\"DeadmanTriggerActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldDatetime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newDatetime\",\"type\":\"uint256\"}],\"name\":\"DeadmanTriggerDatetimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"ListCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_oldListType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_newListType\",\"type\":\"uint8\"}],\"name\":\"ListTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"PrepareMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activateDeadmanListTrigger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"batchAddAddressToRoyaltyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"batchRemoveAddressToRoyaltyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"clearList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeadmanTriggerAvailableDatetime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInUseList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"getList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListType\",\"outputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockedMetadata\",\"type\":\"bool\"}],\"internalType\":\"struct LazySovereignNFT.MintConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"hasAdminPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isOperatorInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"prepareMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"prepareMintWithMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numYears\",\"type\":\"uint256\"}],\"name\":\"setDeadmanListTriggerRenewalDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setDefaultRoyaltyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyReceiverForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_newListType\",\"type\":\"uint8\"}],\"name\":\"toggleListType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"activateDeadmanListTrigger()\":{\"details\":\"Can only be called if deadmanListTriggerAfterDatetime is in the past.\"},\"approve(address,uint256)\":{\"details\":\"Guards {approve} based on the type of list and depending if {_spender} is on the list.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchAddAddressToRoyaltyList(uint8,address[])\":{\"details\":\"Only the contract owner can call this function.Cannot add to the OFF list\",\"params\":{\"_addrs\":\"being added to the designated list\",\"_listType\":\"that addresses are being added to\"}},\"batchRemoveAddressToRoyaltyList(uint8,address[])\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_addrs\":\"being removed from the designated list\",\"_listType\":\"that addresses are being removed from\"}},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"clearList(uint8)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_listType\":\"of list being cleared.\"}},\"deleteToken(uint256)\":{\"details\":\"Delete a token with the given ID.\",\"params\":{\"_tokenId\":\"The ID of the token to delete.\"}},\"disableContract()\":{\"details\":\"Disable the contract, preventing further minting.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getDeadmanTriggerAvailableDatetime()\":{\"returns\":{\"_0\":\"uint256 denoting unix epoch time after which the deadman trigger can be activated.\"}},\"getInUseList()\":{\"returns\":{\"_0\":\"list of addresses on a given list.\"}},\"getList(uint8)\":{\"params\":{\"_listType\":\"of list being retrieved.\"},\"returns\":{\"_0\":\"list of addresses on a given list.\"}},\"getListType()\":{\"returns\":{\"_0\":\"ListType of the list. Values are: 0 (OFF), 1 (ALLOW), 2 (DENY)\"}},\"getMintConfig()\":{\"details\":\"Get the current minting configuration.\",\"returns\":{\"_0\":\"mintConfig the mint config.\"}},\"hasAdminPermission(address)\":{\"details\":\"used in the {onlyAdmin} modifier\",\"returns\":{\"_0\":\"bool denoting if _addr has admin permission.\"}},\"init(string,string,address,uint256)\":{\"details\":\"Contract initialization function.\",\"params\":{\"_creator\":\"The address of the contract creator.\",\"_maxTokens\":\"The maximum number of tokens that can be minted.\",\"_name\":\"The name of the NFT contract.\",\"_symbol\":\"The symbol of the NFT contract.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedMinter(address)\":{\"details\":\"Checks if the supplied address is approved for minting\",\"params\":{\"_address\":\"The address of the minter.\"},\"returns\":{\"_0\":\"bool, whether the address is approved for minting.\"}},\"isOperatorInList(address)\":{\"params\":{\"_operator\":\"address being checked.\"},\"returns\":{\"_0\":\"bool relating to if the operator is on the list.\"}},\"lockBaseURI()\":{\"details\":\"Lock the metadata to prevent  further updates.\"},\"mintTo(address)\":{\"details\":\"Mint a new token to the specified receiver.\",\"params\":{\"_receiver\":\"The address of the token receiver.\"},\"returns\":{\"_0\":\"uint256 Token Id of the new token.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"prepareMint(string,uint256)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"prepareMintWithMinter(string,uint256,address)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_minter\":\"The address of the minter.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list.\"},\"setDeadmanListTriggerRenewalDuration(uint256)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_numYears\":\"to renew the trigger for.\"}},\"setDefaultRoyaltyReceiver(address)\":{\"details\":\"Set the default royalty receiver address.\",\"params\":{\"_receiver\":\"The address of the default royalty receiver.\"}},\"setRoyaltyReceiverForToken(address,uint256)\":{\"details\":\"Set a specific royalty receiver address for a token.\",\"params\":{\"_receiver\":\"The address of the royalty receiver.\",\"_tokenId\":\"The ID of the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"toggleListType(uint8)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_newListType\":\"to be applied to the list. Options are 0 (OFF), 1 (ALLOW), 2 (DENY)\"}},\"tokenCreator(uint256)\":{\"details\":\"Get the address of the token creator for a given token ID.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"address of the token creator.\"}},\"tokenURI(uint256)\":{\"details\":\"Get the token URI for a specific token.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token's URI.\"}},\"totalSupply()\":{\"details\":\"Get the total supply of tokens in existence.\",\"returns\":{\"_0\":\"The total supply of tokens.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseURI(string)\":{\"details\":\"Update the base URI.\",\"params\":{\"_baseURI\":\"The new base URI.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CantAddToOFFList()\":[{\"notice\":\"Emitted when trying to add an address to a list with type OFF.\"}],\"DeadmanTriggerStillActive()\":[{\"notice\":\"Emitted when the deadman trigger datetime threshold hasnt passed but tries to get called.\"}],\"MustBeAdmin()\":[{\"notice\":\"Emitted when an admin only function tries to be called by a non-admin.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when an unauthorized party tries to call a specific function.\"}]},\"events\":{\"AddressAddedToList(address,address,uint8)\":{\"notice\":\"Emitted when an address is added to a list.\"},\"AddressRemovedList(address,address,uint8)\":{\"notice\":\"Emitted when an address is removed from a list.\"},\"DeadmanTriggerActivated(address)\":{\"notice\":\"Emitted when the deadman switch is activated.\"},\"DeadmanTriggerDatetimeUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when deadman trigger datetime has been updated.\"},\"ListCleared(address,uint8)\":{\"notice\":\"Emitted when a list is cleared.\"},\"ListTypeUpdated(address,uint8,uint8)\":{\"notice\":\"Emitted when the list type is updated.\"}},\"kind\":\"user\",\"methods\":{\"activateDeadmanListTrigger()\":{\"notice\":\"Triggers the deadman switch for the list\"},\"batchAddAddressToRoyaltyList(uint8,address[])\":{\"notice\":\"Adds a list of addresses to the specified list.\"},\"batchRemoveAddressToRoyaltyList(uint8,address[])\":{\"notice\":\"Removes a list of addresses to the specified list.\"},\"clearList(uint8)\":{\"notice\":\"Clears an entire list.\"},\"getDeadmanTriggerAvailableDatetime()\":{\"notice\":\"The datetime threshold after which the deadman trigger can be called by anyone.\"},\"getInUseList()\":{\"notice\":\"Returns the set of addresses on a list.\"},\"getList(uint8)\":{\"notice\":\"Returns the set of addresses on a list.\"},\"getListType()\":{\"notice\":\"Returns the ListType currently being used;\"},\"hasAdminPermission(address)\":{\"notice\":\"States whether or not an address has admin permission.\"},\"isOperatorInList(address)\":{\"notice\":\"Returns if the supplied operator address in part of the current in use list.\"},\"setDeadmanListTriggerRenewalDuration(uint256)\":{\"notice\":\"Sets the deadman list trigger for the specified number of years from current block timestamp\"},\"toggleListType(uint8)\":{\"notice\":\"Toggles the list type between ALLOW, DENY, or OFF\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol\":\"LazySovereignNFTRoyaltyGuardDeadmanTrigger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aux/=lib/aux/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":solmate/=lib/royalty-guard/lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad\",\"dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740\",\"dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d\",\"dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c\",\"dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579\",\"dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78\",\"dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5\",\"dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]},\"lib/royalty-guard/src/royalty-guard/IRoyaltyGuard.sol\":{\"keccak256\":\"0x1fd7933ef0875db5bb8f32053e6ca36ab5544268c69cb04de9575609052a3fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e70aba58a73da37b33e8c7f6e04cbf957530afd3f463d4010e2a671773f5d82\",\"dweb:/ipfs/QmVitut8wbt64G3vpg4SmtbkPYGyqYCoBAFBqfv2KybE11\"]},\"lib/royalty-guard/src/royalty-guard/RoyaltyGuard.sol\":{\"keccak256\":\"0xe06d80490ce50e16b7e631d6183cb3dac8b25482748814f394590f0de3c2e4a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d07b9e7985fd8a09150c8e69178bfb05eb5e86d90fd3d91f17f1a57289e805f\",\"dweb:/ipfs/QmczFpxjLYsaWndsDj2NFLa4cfoCYi3g8jHMVNfUCzN9xF\"]},\"lib/royalty-guard/src/royalty-guard/extensions/IRoyaltyGuardDeadmanTrigger.sol\":{\"keccak256\":\"0xe68316395a79ca1b88a356d821c3abb44dcf342cc5633914198d395f5e6fb255\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4849b485458869816863dca773fe26d4520046adfd1f017cc54a9480cdf0b81e\",\"dweb:/ipfs/QmPgdjLvhEW6ArWWy6eU5fPGVtb12ecQrhBHApFLCN2nQo\"]},\"lib/royalty-guard/src/royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol\":{\"keccak256\":\"0xcf9bb8bff70abfed58cf76ebb24db355677b70de14bb335dcf95bccf3e657f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e283a8161fa7f163c2db9a0d45ad5c7d5890e531134838b6914e512cbb1fdbfb\",\"dweb:/ipfs/QmTkfaaQPCdVGCn2QG38NHe7auaUbDa8HwLcCSuZd5UFvT\"]},\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":{\"keccak256\":\"0x2bf5b28a66285526edbbe6296821d9d670e10f555fbd3db09e5dd0e52502aa9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8f31b26145a827a2f695baa3715811d1ed3db8f098d5339e64867585d2a43f\",\"dweb:/ipfs/QmbcEaJUrSyF1QXNn9dK7HoRNsEqjAJG9fesdgoKQrTPYg\"]},\"src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol\":{\"keccak256\":\"0xe6ccd5e1671c64bbb2cbe9aff65617bbeef899d879cbe712bfb69f6fa490f29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c1f6984f179fefe7ebbb3fb36d880484d59f3595c76537cf6d63333b2c6aa79\",\"dweb:/ipfs/QmNzGPY1AhpAJvduFDLFv3rSgMiHgrQugQ8VCXWwq5XdLK\"]},\"src/token/extensions/ERC2981Upgradeable.sol\":{\"keccak256\":\"0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465\",\"dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA\"]},\"src/token/extensions/IERC2981.sol\":{\"keccak256\":\"0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b\",\"dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w\"]},\"src/token/extensions/ITokenCreator.sol\":{\"keccak256\":\"0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42\",\"dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CantAddToOFFList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadmanTriggerStillActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustBeAdmin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_addedAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_ListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressAddedToList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_removedAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_ListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressRemovedList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ContractDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_activator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DeadmanTriggerActivated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_oldDatetime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_newDatetime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeadmanTriggerDatetimeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ListCleared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_oldListType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_newListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ListTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PrepareMint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activateDeadmanListTrigger"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            },
            {
              "internalType": "address[]",
              "name": "_addrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchAddAddressToRoyaltyList"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            },
            {
              "internalType": "address[]",
              "name": "_addrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRemoveAddressToRoyaltyList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "disabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeadmanTriggerAvailableDatetime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInUseList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getListType",
          "outputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMintConfig",
          "outputs": [
            {
              "internalType": "struct LazySovereignNFT.MintConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numberOfTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseURI",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "lockedMetadata",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasAdminPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockBaseURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMint"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMintWithMinter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numYears",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDeadmanListTriggerRenewalDuration"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyReceiverForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_newListType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggleListType"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenCreator",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBaseURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activateDeadmanListTrigger()": {
            "details": "Can only be called if deadmanListTriggerAfterDatetime is in the past."
          },
          "approve(address,uint256)": {
            "details": "Guards {approve} based on the type of list and depending if {_spender} is on the list."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "batchAddAddressToRoyaltyList(uint8,address[])": {
            "details": "Only the contract owner can call this function.Cannot add to the OFF list",
            "params": {
              "_addrs": "being added to the designated list",
              "_listType": "that addresses are being added to"
            }
          },
          "batchRemoveAddressToRoyaltyList(uint8,address[])": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_addrs": "being removed from the designated list",
              "_listType": "that addresses are being removed from"
            }
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
          },
          "clearList(uint8)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_listType": "of list being cleared."
            }
          },
          "deleteToken(uint256)": {
            "details": "Delete a token with the given ID.",
            "params": {
              "_tokenId": "The ID of the token to delete."
            }
          },
          "disableContract()": {
            "details": "Disable the contract, preventing further minting."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getDeadmanTriggerAvailableDatetime()": {
            "returns": {
              "_0": "uint256 denoting unix epoch time after which the deadman trigger can be activated."
            }
          },
          "getInUseList()": {
            "returns": {
              "_0": "list of addresses on a given list."
            }
          },
          "getList(uint8)": {
            "params": {
              "_listType": "of list being retrieved."
            },
            "returns": {
              "_0": "list of addresses on a given list."
            }
          },
          "getListType()": {
            "returns": {
              "_0": "ListType of the list. Values are: 0 (OFF), 1 (ALLOW), 2 (DENY)"
            }
          },
          "getMintConfig()": {
            "details": "Get the current minting configuration.",
            "returns": {
              "_0": "mintConfig the mint config."
            }
          },
          "hasAdminPermission(address)": {
            "details": "used in the {onlyAdmin} modifier",
            "returns": {
              "_0": "bool denoting if _addr has admin permission."
            }
          },
          "init(string,string,address,uint256)": {
            "details": "Contract initialization function.",
            "params": {
              "_creator": "The address of the contract creator.",
              "_maxTokens": "The maximum number of tokens that can be minted.",
              "_name": "The name of the NFT contract.",
              "_symbol": "The symbol of the NFT contract."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedMinter(address)": {
            "details": "Checks if the supplied address is approved for minting",
            "params": {
              "_address": "The address of the minter."
            },
            "returns": {
              "_0": "bool, whether the address is approved for minting."
            }
          },
          "isOperatorInList(address)": {
            "params": {
              "_operator": "address being checked."
            },
            "returns": {
              "_0": "bool relating to if the operator is on the list."
            }
          },
          "lockBaseURI()": {
            "details": "Lock the metadata to prevent  further updates."
          },
          "mintTo(address)": {
            "details": "Mint a new token to the specified receiver.",
            "params": {
              "_receiver": "The address of the token receiver."
            },
            "returns": {
              "_0": "uint256 Token Id of the new token."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "prepareMint(string,uint256)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "prepareMintWithMinter(string,uint256,address)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_minter": "The address of the minter.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "_salePrice": "- the sale price of the NFT asset specified by _tokenId",
              "_tokenId": "- the NFT asset queried for royalty information"
            },
            "returns": {
              "receiver": "- address of who should be sent the royalty payment",
              "royaltyAmount": "- the royalty payment amount for _salePrice"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list."
          },
          "setDeadmanListTriggerRenewalDuration(uint256)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_numYears": "to renew the trigger for."
            }
          },
          "setDefaultRoyaltyReceiver(address)": {
            "details": "Set the default royalty receiver address.",
            "params": {
              "_receiver": "The address of the default royalty receiver."
            }
          },
          "setRoyaltyReceiverForToken(address,uint256)": {
            "details": "Set a specific royalty receiver address for a token.",
            "params": {
              "_receiver": "The address of the royalty receiver.",
              "_tokenId": "The ID of the token."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "toggleListType(uint8)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_newListType": "to be applied to the list. Options are 0 (OFF), 1 (ALLOW), 2 (DENY)"
            }
          },
          "tokenCreator(uint256)": {
            "details": "Get the address of the token creator for a given token ID.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "address of the token creator."
            }
          },
          "tokenURI(uint256)": {
            "details": "Get the token URI for a specific token.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token's URI."
            }
          },
          "totalSupply()": {
            "details": "Get the total supply of tokens in existence.",
            "returns": {
              "_0": "The total supply of tokens."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateBaseURI(string)": {
            "details": "Update the base URI.",
            "params": {
              "_baseURI": "The new base URI."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activateDeadmanListTrigger()": {
            "notice": "Triggers the deadman switch for the list"
          },
          "batchAddAddressToRoyaltyList(uint8,address[])": {
            "notice": "Adds a list of addresses to the specified list."
          },
          "batchRemoveAddressToRoyaltyList(uint8,address[])": {
            "notice": "Removes a list of addresses to the specified list."
          },
          "clearList(uint8)": {
            "notice": "Clears an entire list."
          },
          "getDeadmanTriggerAvailableDatetime()": {
            "notice": "The datetime threshold after which the deadman trigger can be called by anyone."
          },
          "getInUseList()": {
            "notice": "Returns the set of addresses on a list."
          },
          "getList(uint8)": {
            "notice": "Returns the set of addresses on a list."
          },
          "getListType()": {
            "notice": "Returns the ListType currently being used;"
          },
          "hasAdminPermission(address)": {
            "notice": "States whether or not an address has admin permission."
          },
          "isOperatorInList(address)": {
            "notice": "Returns if the supplied operator address in part of the current in use list."
          },
          "setDeadmanListTriggerRenewalDuration(uint256)": {
            "notice": "Sets the deadman list trigger for the specified number of years from current block timestamp"
          },
          "toggleListType(uint8)": {
            "notice": "Toggles the list type between ALLOW, DENY, or OFF"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "aux/=lib/aux/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/",
        "rareprotocol/aux/=lib/aux/src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "solmate/=lib/royalty-guard/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol": "LazySovereignNFTRoyaltyGuardDeadmanTrigger"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e",
        "urls": [
          "bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad",
          "dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9",
        "urls": [
          "bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740",
          "dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a",
        "urls": [
          "bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d",
          "dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921",
        "urls": [
          "bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c",
          "dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol": {
        "keccak256": "0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d",
        "urls": [
          "bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579",
          "dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37",
        "urls": [
          "bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78",
          "dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol": {
        "keccak256": "0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512",
        "urls": [
          "bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5",
          "dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723",
        "urls": [
          "bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d",
          "dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/IRoyaltyGuard.sol": {
        "keccak256": "0x1fd7933ef0875db5bb8f32053e6ca36ab5544268c69cb04de9575609052a3fde",
        "urls": [
          "bzz-raw://4e70aba58a73da37b33e8c7f6e04cbf957530afd3f463d4010e2a671773f5d82",
          "dweb:/ipfs/QmVitut8wbt64G3vpg4SmtbkPYGyqYCoBAFBqfv2KybE11"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/RoyaltyGuard.sol": {
        "keccak256": "0xe06d80490ce50e16b7e631d6183cb3dac8b25482748814f394590f0de3c2e4a5",
        "urls": [
          "bzz-raw://6d07b9e7985fd8a09150c8e69178bfb05eb5e86d90fd3d91f17f1a57289e805f",
          "dweb:/ipfs/QmczFpxjLYsaWndsDj2NFLa4cfoCYi3g8jHMVNfUCzN9xF"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/extensions/IRoyaltyGuardDeadmanTrigger.sol": {
        "keccak256": "0xe68316395a79ca1b88a356d821c3abb44dcf342cc5633914198d395f5e6fb255",
        "urls": [
          "bzz-raw://4849b485458869816863dca773fe26d4520046adfd1f017cc54a9480cdf0b81e",
          "dweb:/ipfs/QmPgdjLvhEW6ArWWy6eU5fPGVtb12ecQrhBHApFLCN2nQo"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol": {
        "keccak256": "0xcf9bb8bff70abfed58cf76ebb24db355677b70de14bb335dcf95bccf3e657f5e",
        "urls": [
          "bzz-raw://e283a8161fa7f163c2db9a0d45ad5c7d5890e531134838b6914e512cbb1fdbfb",
          "dweb:/ipfs/QmTkfaaQPCdVGCn2QG38NHe7auaUbDa8HwLcCSuZd5UFvT"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": {
        "keccak256": "0x2bf5b28a66285526edbbe6296821d9d670e10f555fbd3db09e5dd0e52502aa9d",
        "urls": [
          "bzz-raw://cc8f31b26145a827a2f695baa3715811d1ed3db8f098d5339e64867585d2a43f",
          "dweb:/ipfs/QmbcEaJUrSyF1QXNn9dK7HoRNsEqjAJG9fesdgoKQrTPYg"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol": {
        "keccak256": "0xe6ccd5e1671c64bbb2cbe9aff65617bbeef899d879cbe712bfb69f6fa490f29c",
        "urls": [
          "bzz-raw://2c1f6984f179fefe7ebbb3fb36d880484d59f3595c76537cf6d63333b2c6aa79",
          "dweb:/ipfs/QmNzGPY1AhpAJvduFDLFv3rSgMiHgrQugQ8VCXWwq5XdLK"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ERC2981Upgradeable.sol": {
        "keccak256": "0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d",
        "urls": [
          "bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465",
          "dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA"
        ],
        "license": "MIT"
      },
      "src/token/extensions/IERC2981.sol": {
        "keccak256": "0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd",
        "urls": [
          "bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b",
          "dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ITokenCreator.sol": {
        "keccak256": "0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6",
        "urls": [
          "bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42",
          "dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol",
    "id": 4736,
    "exportedSymbols": {
      "AddressUpgradeable": [
        1610
      ],
      "ContextUpgradeable": [
        1652
      ],
      "CountersUpgradeable": [
        1726
      ],
      "ERC165": [
        2528
      ],
      "ERC165Upgradeable": [
        1973
      ],
      "ERC2981Upgradeable": [
        4909
      ],
      "ERC721BurnableUpgradeable": [
        1340
      ],
      "ERC721Upgradeable": [
        1156
      ],
      "EnumerableSet": [
        3139
      ],
      "IERC165Upgradeable": [
        1985
      ],
      "IERC2981": [
        4925
      ],
      "IERC721MetadataUpgradeable": [
        1367
      ],
      "IERC721ReceiverUpgradeable": [
        1174
      ],
      "IERC721Upgradeable": [
        1290
      ],
      "IRoyaltyGuard": [
        3269
      ],
      "IRoyaltyGuardDeadmanTrigger": [
        3666
      ],
      "ITokenCreator": [
        4935
      ],
      "Initializable": [
        265
      ],
      "LazySovereignNFT": [
        4292
      ],
      "LazySovereignNFTRoyaltyGuardDeadmanTrigger": [
        4735
      ],
      "OwnableUpgradeable": [
        123
      ],
      "RoyaltyGuard": [
        3625
      ],
      "RoyaltyGuardDeadmanTrigger": [
        3760
      ],
      "SafeMathUpgradeable": [
        2297
      ],
      "StringsUpgradeable": [
        1929
      ]
    },
    "nodeType": "SourceUnit",
    "src": "85:1852:27",
    "nodes": [
      {
        "id": 4649,
        "nodeType": "PragmaDirective",
        "src": "85:23:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 4650,
        "nodeType": "ImportDirective",
        "src": "110:65:27",
        "nodes": [],
        "absolutePath": "lib/royalty-guard/src/royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol",
        "file": "royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4736,
        "sourceUnit": 3761,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4651,
        "nodeType": "ImportDirective",
        "src": "177:33:27",
        "nodes": [],
        "absolutePath": "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol",
        "file": "../LazySovereignNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4736,
        "sourceUnit": 4293,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4735,
        "nodeType": "ContractDefinition",
        "src": "212:1724:27",
        "nodes": [
          {
            "id": 4677,
            "nodeType": "FunctionDefinition",
            "src": "576:312:27",
            "nodes": [],
            "body": {
              "id": 4676,
              "nodeType": "Block",
              "src": "744:144:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 4668,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4658,
                          "src": "804:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 4666,
                          "name": "RoyaltyGuard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3625,
                          "src": "773:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RoyaltyGuard_$3625_$",
                            "typeString": "type(contract RoyaltyGuard)"
                          }
                        },
                        "id": 4667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3532,
                        "src": "773:30:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 4669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "773:44:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 4672,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4658,
                          "src": "868:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 4670,
                          "name": "LazySovereignNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4292,
                          "src": "833:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LazySovereignNFT_$4292_$",
                            "typeString": "type(contract LazySovereignNFT)"
                          }
                        },
                        "id": 4671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4205,
                        "src": "833:34:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 4673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "833:48:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "773:108:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4665,
                  "id": 4675,
                  "nodeType": "Return",
                  "src": "754:127:27"
                }
              ]
            },
            "baseFunctions": [
              3532,
              4205
            ],
            "documentation": {
              "id": 4656,
              "nodeType": "StructuredDocumentation",
              "src": "530:41:27",
              "text": "@dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "585:17:27",
            "overrides": {
              "id": 4662,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 4660,
                  "name": "LazySovereignNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4292,
                  "src": "685:16:27"
                },
                {
                  "id": 4661,
                  "name": "RoyaltyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3625,
                  "src": "703:12:27"
                }
              ],
              "src": "676:40:27"
            },
            "parameters": {
              "id": 4659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4658,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "610:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 4677,
                  "src": "603:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4657,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:21:27"
            },
            "returnParameters": {
              "id": 4665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4677,
                  "src": "734:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4663,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "733:6:27"
            },
            "scope": 4735,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4694,
            "nodeType": "FunctionDefinition",
            "src": "1133:200:27",
            "nodes": [],
            "body": {
              "id": 4693,
              "nodeType": "Block",
              "src": "1293:40:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4688,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "1310:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4689,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1319:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 4690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1319:7:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1310:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4687,
                  "id": 4692,
                  "nodeType": "Return",
                  "src": "1303:23:27"
                }
              ]
            },
            "baseFunctions": [
              3261,
              3510
            ],
            "documentation": {
              "id": 4678,
              "nodeType": "StructuredDocumentation",
              "src": "1100:28:27",
              "text": "@inheritdoc RoyaltyGuard"
            },
            "functionSelector": "20427486",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasAdminPermission",
            "nameLocation": "1142:18:27",
            "overrides": {
              "id": 4684,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 4682,
                  "name": "IRoyaltyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3269,
                  "src": "1237:13:27"
                },
                {
                  "id": 4683,
                  "name": "RoyaltyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3625,
                  "src": "1252:12:27"
                }
              ],
              "src": "1228:37:27"
            },
            "parameters": {
              "id": 4681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4680,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1169:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 4694,
                  "src": "1161:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:15:27"
            },
            "returnParameters": {
              "id": 4687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4686,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4694,
                  "src": "1283:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:6:27"
            },
            "scope": 4735,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4714,
            "nodeType": "FunctionDefinition",
            "src": "1439:173:27",
            "nodes": [],
            "body": {
              "id": 4713,
              "nodeType": "Block",
              "src": "1567:45:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4709,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4697,
                        "src": "1591:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4710,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4699,
                        "src": "1601:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4706,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1577:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFTRoyaltyGuardDeadmanTrigger_$4735_$",
                          "typeString": "type(contract super LazySovereignNFTRoyaltyGuardDeadmanTrigger)"
                        }
                      },
                      "id": 4708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 545,
                      "src": "1577:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4712,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:28:27"
                }
              ]
            },
            "baseFunctions": [
              545
            ],
            "documentation": {
              "id": 4695,
              "nodeType": "StructuredDocumentation",
              "src": "1339:95:27",
              "text": "@dev Guards {approve} based on the type of list and depending if {_spender} is on the list."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4703,
                    "name": "_spender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4697,
                    "src": "1553:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4704,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4702,
                  "name": "checkList",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3345,
                  "src": "1543:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "1543:19:27"
              }
            ],
            "name": "approve",
            "nameLocation": "1448:7:27",
            "overrides": {
              "id": 4701,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1526:8:27"
            },
            "parameters": {
              "id": 4700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4697,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "1464:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 4714,
                  "src": "1456:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4699,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1482:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 4714,
                  "src": "1474:11:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:31:27"
            },
            "returnParameters": {
              "id": 4705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:0:27"
            },
            "scope": 4735,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4734,
            "nodeType": "FunctionDefinition",
            "src": "1729:205:27",
            "nodes": [],
            "body": {
              "id": 4733,
              "nodeType": "Block",
              "src": "1872:62:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4729,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "1906:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4730,
                        "name": "_approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4719,
                        "src": "1917:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 4726,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1882:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFTRoyaltyGuardDeadmanTrigger_$4735_$",
                          "typeString": "type(contract super LazySovereignNFTRoyaltyGuardDeadmanTrigger)"
                        }
                      },
                      "id": 4728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 583,
                      "src": "1882:23:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:45:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4732,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:45:27"
                }
              ]
            },
            "baseFunctions": [
              583
            ],
            "documentation": {
              "id": 4715,
              "nodeType": "StructuredDocumentation",
              "src": "1618:106:27",
              "text": "@dev Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4723,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4717,
                    "src": "1857:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4724,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4722,
                  "name": "checkList",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3345,
                  "src": "1847:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "1847:20:27"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "1738:17:27",
            "overrides": {
              "id": 4721,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1830:8:27"
            },
            "parameters": {
              "id": 4720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4717,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1764:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 4734,
                  "src": "1756:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4719,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1780:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 4734,
                  "src": "1775:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1755:35:27"
            },
            "returnParameters": {
              "id": 4725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1872:0:27"
            },
            "scope": 4735,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4652,
              "name": "LazySovereignNFT",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4292,
              "src": "271:16:27"
            },
            "id": 4653,
            "nodeType": "InheritanceSpecifier",
            "src": "271:16:27"
          },
          {
            "baseName": {
              "id": 4654,
              "name": "RoyaltyGuardDeadmanTrigger",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3760,
              "src": "293:26:27"
            },
            "id": 4655,
            "nodeType": "InheritanceSpecifier",
            "src": "293:26:27"
          }
        ],
        "canonicalName": "LazySovereignNFTRoyaltyGuardDeadmanTrigger",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4735,
          3760,
          3625,
          2528,
          2540,
          3666,
          3269,
          4292,
          4909,
          1340,
          4935,
          1156,
          1367,
          1290,
          1973,
          1985,
          123,
          1652,
          265,
          4925
        ],
        "name": "LazySovereignNFTRoyaltyGuardDeadmanTrigger",
        "nameLocation": "221:42:27",
        "scope": 4736,
        "usedErrors": [
          3188,
          3191,
          3194,
          3649
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 27
}