{
  "abi": [
    {
      "inputs": [],
      "name": "CantAddToOFFList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_addedAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_ListType",
          "type": "uint8"
        }
      ],
      "name": "AddressAddedToList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_removedAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_ListType",
          "type": "uint8"
        }
      ],
      "name": "AddressRemovedList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "ContractDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "ListCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_oldListType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_newListType",
          "type": "uint8"
        }
      ],
      "name": "ListTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "PrepareMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataUri",
          "type": "string"
        }
      ],
      "name": "TokenURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_addrs",
          "type": "address[]"
        }
      ],
      "name": "batchAddAddressToRoyaltyList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_addrs",
          "type": "address[]"
        }
      ],
      "name": "batchRemoveAddressToRoyaltyList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "clearList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "deleteToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInUseList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "getList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListType",
      "outputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "lockedMetadata",
              "type": "bool"
            }
          ],
          "internalType": "struct LazySovereignNFT.MintConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "hasAdminPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isApprovedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isOperatorInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "prepareMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "prepareMintWithMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "setDefaultRoyaltyReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isMinter",
          "type": "bool"
        }
      ],
      "name": "setMinterApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyReceiverForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_newListType",
          "type": "uint8"
        }
      ],
      "name": "toggleListType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenCreator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadataUri",
          "type": "string"
        }
      ],
      "name": "updateTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50613840806100206000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c806370a0823111610167578063b390ac25116100ce578063e985e9c511610087578063e985e9c5146105d7578063eab85118146105ea578063ee070805146105fd578063efc32cd414610609578063f2fde38b1461061c578063ff6e8c8f1461062f57600080fd5b8063b390ac251461056e578063b88d4fde14610581578063b9fbd25c14610594578063bc719455146105a7578063c87b56dd146105ba578063e8315742146105cd57600080fd5b8063931688cb11610120578063931688cb146105105780639338bb5d1461052357806395d89b41146105385780639e860f2a14610540578063a22cb46514610553578063ab69607a1461056657600080fd5b806370a08231146104b5578063715018a6146104c8578063755edd17146104d057806387bc793f146104e3578063894ba833146104f75780638da5cb5b146104ff57600080fd5b80632ce878da1161020b57806342966c68116101c457806342966c681461044e578063472a66381461046157806353df5c7c146104745780635edc7c191461047c5780636297c16c1461048f5780636352211e146104a257600080fd5b80632ce878da146103cf5780633403c4e9146103d75780633a3d146f146103e85780633ebc82c51461041557806340c1a0641461042857806342842e0e1461043b57600080fd5b80630de54ba01161025d5780630de54ba01461033b57806318160ddd1461034e57806318e97fd114610364578063204274861461037757806323b872dd1461038a5780632a55205a1461039d57600080fd5b8063012cf1e81461029a57806301ffc9a7146102c357806306fdde03146102e6578063081812fc146102fb578063095ea7b314610326575b600080fd5b6102ad6102a8366004612b7c565b610642565b6040516102ba9190612b97565b60405180910390f35b6102d66102d1366004612bfa565b610688565b60405190151581526020016102ba565b6102ee6106a2565b6040516102ba9190612c6f565b61030e610309366004612c82565b610734565b6040516001600160a01b0390911681526020016102ba565b610339610334366004612cb2565b6107ce565b005b610339610349366004612cdc565b6108a3565b61035661091b565b6040519081526020016102ba565b610339610372366004612d61565b61092c565b6102d6610385366004612dad565b610a0f565b610339610398366004612dc8565b610a3e565b6103b06103ab366004612e04565b610a70565b604080516001600160a01b0390931683526020830191909152016102ba565b6102ad610b0b565b60fb546001600160a01b031661030e565b6102d66103f6366004612dad565b6001600160a01b03166000908152610102602052604090205460ff1690565b610339610423366004612dad565b610b31565b61030e610436366004612c82565b610b67565b610339610449366004612dc8565b610b7b565b61033961045c366004612c82565b610b96565b61033961046f366004612b7c565b610c0d565b610339610c3c565b61033961048a366004612e26565b610cb0565b61033961049d366004612c82565b610e30565b61030e6104b0366004612c82565b610e99565b6103566104c3366004612dad565b610f10565b610339610f96565b6103566104de366004612dad565b610fcc565b6101095460ff166040516102ba9190612ec5565b6103396110a2565b6033546001600160a01b031661030e565b61033961051e366004612eed565b611106565b61052b6111da565b6040516102ba9190612f2f565b6102ee6112be565b61033961054e366004612f6d565b6112cd565b610339610561366004612cdc565b611330565b60fc54610356565b61033961057c366004612ff3565b6113d7565b61033961058f366004613055565b61142e565b6103396105a2366004613131565b611466565b6103396105b5366004612b7c565b6114e5565b6102ee6105c8366004612c82565b61159a565b6103566101005481565b6102d66105e536600461318e565b611693565b6102d66105f8366004612dad565b6116c1565b60ff80546102d6911681565b610339610617366004612cb2565b6116e8565b61033961062a366004612dad565b611740565b61033961063d366004612f6d565b6117d8565b6060610682610108600084600281111561065e5761065e612eaf565b600281111561066f5761066f612eaf565b8152602001908152602001600020611870565b92915050565b600061069382611884565b806106825750610682826118a9565b6060609780546106b1906131b8565b80601f01602080910402602001604051908101604052809291908181526020018280546106dd906131b8565b801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166107b25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b8160016101095460ff1660028111156107e9576107e9612eaf565b036108485761082781610108600060015b600281111561080b5761080b612eaf565b81526020019081526020016000206118ec90919063ffffffff16565b610843576040516282b42960e81b815260040160405180910390fd5b610894565b60026101095460ff16600281111561086257610862612eaf565b036108945761087781610108600060026107fa565b15610894576040516282b42960e81b815260040160405180910390fd5b61089e838361190e565b505050565b6033546001600160a01b031633146108cd5760405162461bcd60e51b81526004016107a9906131f2565b60ff805416156108ef5760405162461bcd60e51b81526004016107a990613227565b6001600160a01b0391909116600090815261010260205260409020805460ff1916911515919091179055565b60006109276101045490565b905090565b6033546001600160a01b031633146109565760405162461bcd60e51b81526004016107a9906131f2565b6101075460ff16156109b55760405162461bcd60e51b815260206004820152602260248201527f757064617465546f6b656e5552493a3a6d65746164617461206973206c6f636b604482015261195960f21b60648201526084016107a9565b6000838152610103602052604090206109cf8284836132ac565b50827f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd8383604051610a0292919061336d565b60405180910390a2505050565b6000610a236033546001600160a01b031690565b6001600160a01b0316826001600160a01b0316149050919050565b610a49335b82611a1e565b610a655760405162461bcd60e51b81526004016107a99061339c565b61089e838383611af5565b600082815260fd602052604081205481906001600160a01b0316610a9f5760fb546001600160a01b0316610ab8565b600084815260fd60205260409020546001600160a01b03165b9150610b026064610afc60fe600088815260200190815260200160002054600003610ae55760fc54610af5565b600087815260fe60205260409020545b8690611c91565b90611c9d565b90509250929050565b61010954606090610927906101089060009060ff16600281111561065e5761065e612eaf565b6033546001600160a01b03163314610b5b5760405162461bcd60e51b81526004016107a9906131f2565b610b6481611ca9565b50565b60006106826033546001600160a01b031690565b61089e8383836040518060200160405280600081525061142e565b610b9f33610a43565b610c045760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016107a9565b610b6481611ccb565b610c1633610a0f565b610c3357604051635c510c8360e11b815260040160405180910390fd5b610b6481611d67565b6033546001600160a01b03163314610c665760405162461bcd60e51b81526004016107a9906131f2565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e90610c9890610106906133ed565b60405180910390a1610107805460ff19166001179055565b6000610cbc6001611de4565b90508015610cd4576000805461ff0019166101001790555b6001600160a01b038316610d2a5760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c2061646472657373000060448201526064016107a9565b610d34600a60fc55565b60ff805460ff19169055610100829055610d4c611e6c565b610dbf87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250611e9b92505050565b610dc7611ecc565b610dcf611ef3565b610dd883611ca9565b610de183611740565b8015610e27576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610e3a82610e99565b6001600160a01b031614610e905760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e0060448201526064016107a9565b610b6481610b96565b6000818152609960205260408120546001600160a01b0316806106825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107a9565b60006001600160a01b038216610f7a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016107a9565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610fc05760405162461bcd60e51b81526004016107a9906131f2565b610fca6000611f22565b565b60ff80546000911615610ff15760405162461bcd60e51b81526004016107a990613227565b6033546001600160a01b031633148061101a5750336000908152610102602052604090205460ff165b61107f5760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b60648201526084016107a9565b6106828261108c60fc5490565b60fb546001600160a01b0316611f74565b919050565b6033546001600160a01b031633146110cc5760405162461bcd60e51b81526004016107a9906131f2565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b031633146111305760405162461bcd60e51b81526004016107a9906131f2565b6101075460ff161561118e5760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b60648201526084016107a9565b61010661119c8284836132ac565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e82826040516111ce92919061336d565b60405180910390a15050565b611200604051806060016040528060008152602001606081526020016000151581525090565b6040805160608101909152610105805482526101068054602084019190611226906131b8565b80601f0160208091040260200160405190810160405280929190818152602001828054611252906131b8565b801561129f5780601f106112745761010080835404028352916020019161129f565b820191906000526020600020905b81548152906001019060200180831161128257829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b6060609880546106b1906131b8565b6112d633610a0f565b6112f357604051635c510c8360e11b815260040160405180910390fd5b61089e8383838080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509250612030915050565b8160016101095460ff16600281111561134b5761134b612eaf565b036113815761136081610108600060016107fa565b61137c576040516282b42960e81b815260040160405180910390fd5b6113cd565b60026101095460ff16600281111561139b5761139b612eaf565b036113cd576113b081610108600060026107fa565b156113cd576040516282b42960e81b815260040160405180910390fd5b61089e838361220d565b6033546001600160a01b031633146114015760405162461bcd60e51b81526004016107a9906131f2565b60ff805416156114235760405162461bcd60e51b81526004016107a990613227565b61089e838383612218565b6114383383611a1e565b6114545760405162461bcd60e51b81526004016107a99061339c565b6114608484848461238d565b50505050565b6033546001600160a01b031633146114905760405162461bcd60e51b81526004016107a9906131f2565b60ff805416156114b25760405162461bcd60e51b81526004016107a990613227565b6114bd848484612218565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b6114ee33610a0f565b61150b57604051635c510c8360e11b815260040160405180910390fd5b610108600082600281111561152257611522612eaf565b600281111561153357611533612eaf565b8152602081019190915260400160009081209081816115528282612b3b565b50505050336001600160a01b03167f7efc19cf93d497a6a56103ea89a39d51c0cad74a817ed3cd0ecaff9823d4da248260405161158f9190612ec5565b60405180910390a250565b600081815261010360205260408120805460609291906115b9906131b8565b905011156116605760008281526101036020526040902080546115db906131b8565b80601f0160208091040260200160405190810160405280929190818152602001828054611607906131b8565b80156116545780601f1061162957610100808354040283529160200191611654565b820191906000526020600020905b81548152906001019060200180831161163757829003601f168201915b50505050509050919050565b61010661166c836123c0565b60405160200161167d929190613478565b6040516020818303038152906040529050919050565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b6101095460009061068290839061010890849060ff1660028111156107fa576107fa612eaf565b6033546001600160a01b031633146117125760405162461bcd60e51b81526004016107a9906131f2565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461176a5760405162461bcd60e51b81526004016107a9906131f2565b6001600160a01b0381166117cf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107a9565b610b6481611f22565b6117e133610a0f565b6117fe57604051635c510c8360e11b815260040160405180910390fd5b600083600281111561181257611812612eaf565b0361183057604051632de777a160e11b815260040160405180910390fd5b61089e8383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060019250612030915050565b6060600061187d836124c1565b9392505050565b60006001600160e01b0319821663fa31a45b60e01b148061068257506106828261251c565b60006001600160e01b03198216631030681960e21b14806118ce57506118ce8261251c565b806118dd57506118dd82612532565b80610682575061068282612553565b6001600160a01b0381166000908152600183016020526040812054151561187d565b600061191982610e99565b9050806001600160a01b0316836001600160a01b0316036119865760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107a9565b336001600160a01b03821614806119a257506119a28133611693565b611a145760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107a9565b61089e8383612593565b6000818152609960205260408120546001600160a01b0316611a975760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107a9565b6000611aa283610e99565b9050806001600160a01b0316846001600160a01b03161480611ac95750611ac98185611693565b80611aed5750836001600160a01b0316611ae284610734565b6001600160a01b0316145b949350505050565b826001600160a01b0316611b0882610e99565b6001600160a01b031614611b6c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107a9565b6001600160a01b038216611bce5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107a9565b611bd9600082612593565b6001600160a01b0383166000908152609a60205260408120805460019290611c02908490613534565b90915550506001600160a01b0382166000908152609a60205260408120805460019290611c3090849061354b565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061187d8284613563565b600061187d8284613598565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611cd682610e99565b9050611ce3600083612593565b6001600160a01b0381166000908152609a60205260408120805460019290611d0c908490613534565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45b5050565b806002811115611d7957611d79612eaf565b6101095460ff166002811115611d9157611d91612eaf565b60405133907f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f90600090a4610109805482919060ff19166001836002811115611ddc57611ddc612eaf565b021790555050565b60008054610100900460ff1615611e2b578160ff166001148015611e075750303b155b611e235760405162461bcd60e51b81526004016107a9906135ac565b506000919050565b60005460ff808416911610611e525760405162461bcd60e51b81526004016107a9906135ac565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16611e935760405162461bcd60e51b81526004016107a9906135fa565b610fca612601565b600054610100900460ff16611ec25760405162461bcd60e51b81526004016107a9906135fa565b611d638282612631565b600054610100900460ff16610fca5760405162461bcd60e51b81526004016107a9906135fa565b600054610100900460ff16611f1a5760405162461bcd60e51b81526004016107a9906135fa565b610fca611ecc565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611f8561010480546001019055565b6000611f916101045490565b905061010054811115611fe65760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e7360448201526064016107a9565b611ff08582612671565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b600083600281111561204457612044612eaf565b1461089e5760005b825181101561146057811561212d576120bc83828151811061207057612070613645565b6020026020010151610108600087600281111561208f5761208f612eaf565b60028111156120a0576120a0612eaf565b815260200190815260200160002061268b90919063ffffffff16565b508360028111156120cf576120cf612eaf565b8382815181106120e1576120e1613645565b60200260200101516001600160a01b0316336001600160a01b03167f14155f749dc3f9cd2bf890d6d3a47069f77ae35befcee11c8b1a3ba41cba153660405160405180910390a46121fb565b61218e83828151811061214257612142613645565b6020026020010151610108600087600281111561216157612161612eaf565b600281111561217257612172612eaf565b81526020019081526020016000206126a090919063ffffffff16565b508360028111156121a1576121a1612eaf565b8382815181106121b3576121b3613645565b60200260200101516001600160a01b0316336001600160a01b03167fc72e29af1b34de3dec3a764b4ca4d85b9c380ab33b9b268d29b6e7008bd0ed9560405160405180910390a45b806122058161365b565b91505061204c565b611d633383836126b5565b6101005481111561226b5760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e7360448201526064016107a9565b61010454156122d65760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b60648201526084016107a9565b604051806060016040528082815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020918201528151610105908155908201516101069061233f9082613674565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1990610a02908690869061336d565b612398848484611af5565b6123a484848484612783565b6114605760405162461bcd60e51b81526004016107a990613734565b6060816000036123e75750506040805180820190915260018152600360fc1b602082015290565b8160005b811561241157806123fb8161365b565b915061240a9050600a83613598565b91506123eb565b60008167ffffffffffffffff81111561242c5761242c61303f565b6040519080825280601f01601f191660200182016040528015612456576020820181803683370190505b5090505b8415611aed5761246b600183613534565b9150612478600a86613786565b61248390603061354b565b60f81b81838151811061249857612498613645565b60200101906001600160f81b031916908160001a9053506124ba600a86613598565b945061245a565b60608160000180548060200260200160405190810160405280929190818152602001828054801561165457602002820191906000526020600020905b8154815260200190600101908083116124fd5750505050509050919050565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b14806106825750610682825b60006001600160e01b031982166380ac58cd60e01b148061258457506001600160e01b03198216635b5e139f60e01b145b8061068257506106828261251c565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906125c882610e99565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600054610100900460ff166126285760405162461bcd60e51b81526004016107a9906135fa565b610fca33611f22565b600054610100900460ff166126585760405162461bcd60e51b81526004016107a9906135fa565b60976126648382613674565b50609861089e8282613674565b611d63828260405180602001604052806000815250612884565b600061187d836001600160a01b0384166128b7565b600061187d836001600160a01b038416612906565b816001600160a01b0316836001600160a01b0316036127165760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107a9565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006001600160a01b0384163b1561287957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906127c790339089908890889060040161379a565b6020604051808303816000875af1925050508015612802575060408051601f3d908101601f191682019092526127ff918101906137d7565b60015b61285f573d808015612830576040519150601f19603f3d011682016040523d82523d6000602084013e612835565b606091505b5080516000036128575760405162461bcd60e51b81526004016107a990613734565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611aed565b506001949350505050565b61288e83836129f9565b61289b6000848484612783565b61089e5760405162461bcd60e51b81526004016107a990613734565b60008181526001830160205260408120546128fe57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610682565b506000610682565b600081815260018301602052604081205480156129ef57600061292a600183613534565b855490915060009061293e90600190613534565b90508181146129a357600086600001828154811061295e5761295e613645565b906000526020600020015490508087600001848154811061298157612981613645565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806129b4576129b46137f4565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610682565b6000915050610682565b6001600160a01b038216612a4f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107a9565b6000818152609960205260409020546001600160a01b031615612ab45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107a9565b6001600160a01b0382166000908152609a60205260408120805460019290612add90849061354b565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5080546000825590600052602060002090810190610b6491905b80821115612b695760008155600101612b55565b5090565b80356003811061109d57600080fd5b600060208284031215612b8e57600080fd5b61187d82612b6d565b6020808252825182820181905260009190848201906040850190845b81811015612bd85783516001600160a01b031683529284019291840191600101612bb3565b50909695505050505050565b6001600160e01b031981168114610b6457600080fd5b600060208284031215612c0c57600080fd5b813561187d81612be4565b60005b83811015612c32578181015183820152602001612c1a565b838111156114605750506000910152565b60008151808452612c5b816020860160208601612c17565b601f01601f19169290920160200192915050565b60208152600061187d6020830184612c43565b600060208284031215612c9457600080fd5b5035919050565b80356001600160a01b038116811461109d57600080fd5b60008060408385031215612cc557600080fd5b612cce83612c9b565b946020939093013593505050565b60008060408385031215612cef57600080fd5b612cf883612c9b565b915060208301358015158114612d0d57600080fd5b809150509250929050565b60008083601f840112612d2a57600080fd5b50813567ffffffffffffffff811115612d4257600080fd5b602083019150836020828501011115612d5a57600080fd5b9250929050565b600080600060408486031215612d7657600080fd5b83359250602084013567ffffffffffffffff811115612d9457600080fd5b612da086828701612d18565b9497909650939450505050565b600060208284031215612dbf57600080fd5b61187d82612c9b565b600080600060608486031215612ddd57600080fd5b612de684612c9b565b9250612df460208501612c9b565b9150604084013590509250925092565b60008060408385031215612e1757600080fd5b50508035926020909101359150565b60008060008060008060808789031215612e3f57600080fd5b863567ffffffffffffffff80821115612e5757600080fd5b612e638a838b01612d18565b90985096506020890135915080821115612e7c57600080fd5b50612e8989828a01612d18565b9095509350612e9c905060408801612c9b565b9150606087013590509295509295509295565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612ee757634e487b7160e01b600052602160045260246000fd5b91905290565b60008060208385031215612f0057600080fd5b823567ffffffffffffffff811115612f1757600080fd5b612f2385828601612d18565b90969095509350505050565b60208152815160208201526000602083015160606040840152612f556080840182612c43565b90506040840151151560608401528091505092915050565b600080600060408486031215612f8257600080fd5b612f8b84612b6d565b9250602084013567ffffffffffffffff80821115612fa857600080fd5b818601915086601f830112612fbc57600080fd5b813581811115612fcb57600080fd5b8760208260051b8501011115612fe057600080fd5b6020830194508093505050509250925092565b60008060006040848603121561300857600080fd5b833567ffffffffffffffff81111561301f57600080fd5b61302b86828701612d18565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561306b57600080fd5b61307485612c9b565b935061308260208601612c9b565b925060408501359150606085013567ffffffffffffffff808211156130a657600080fd5b818701915087601f8301126130ba57600080fd5b8135818111156130cc576130cc61303f565b604051601f8201601f19908116603f011681019083821181831017156130f4576130f461303f565b816040528281528a602084870101111561310d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000806060858703121561314757600080fd5b843567ffffffffffffffff81111561315e57600080fd5b61316a87828801612d18565b9095509350506020850135915061318360408601612c9b565b905092959194509250565b600080604083850312156131a157600080fd5b6131aa83612c9b565b9150610b0260208401612c9b565b600181811c908216806131cc57607f821691505b6020821081036131ec57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b601f82111561089e57600081815260208120601f850160051c810160208610156132855750805b601f850160051c820191505b818110156132a457828155600101613291565b505050505050565b67ffffffffffffffff8311156132c4576132c461303f565b6132d8836132d283546131b8565b8361325e565b6000601f84116001811461330c57600085156132f45750838201355b600019600387901b1c1916600186901b178355613366565b600083815260209020601f19861690835b8281101561333d578685013582556020948501946001909201910161331d565b508682101561335a5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000602080835260008454613401816131b8565b80848701526040600180841660008114613422576001811461343c5761346a565b60ff1985168984015283151560051b89018301955061346a565b896000528660002060005b858110156134625781548b8201860152908301908801613447565b8a0184019650505b509398975050505050505050565b6000808454613486816131b8565b6001828116801561349e57600181146134b3576134e2565b60ff19841687528215158302870194506134e2565b8860005260208060002060005b858110156134d95781548a8201529084019082016134c0565b50505082870194505b50602f60f81b8452865192506134fe8382860160208a01612c17565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156135465761354661351e565b500390565b6000821982111561355e5761355e61351e565b500190565b600081600019048311821515161561357d5761357d61351e565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826135a7576135a7613582565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006001820161366d5761366d61351e565b5060010190565b815167ffffffffffffffff81111561368e5761368e61303f565b6136a28161369c84546131b8565b8461325e565b602080601f8311600181146136d757600084156136bf5750858301515b600019600386901b1c1916600185901b1785556132a4565b600085815260208120601f198616915b82811015613706578886015182559484019460019091019084016136e7565b50858210156137245787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261379557613795613582565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137cd90830184612c43565b9695505050505050565b6000602082840312156137e957600080fd5b815161187d81612be4565b634e487b7160e01b600052603160045260246000fdfea26469706673582212205370b00cd33099bb7db34d5dcd47472641d39a154db4f6e3ad68922ff6aec39a64736f6c634300080f0033",
    "sourceMap": "187:1659:39:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c806370a0823111610167578063b390ac25116100ce578063e985e9c511610087578063e985e9c5146105d7578063eab85118146105ea578063ee070805146105fd578063efc32cd414610609578063f2fde38b1461061c578063ff6e8c8f1461062f57600080fd5b8063b390ac251461056e578063b88d4fde14610581578063b9fbd25c14610594578063bc719455146105a7578063c87b56dd146105ba578063e8315742146105cd57600080fd5b8063931688cb11610120578063931688cb146105105780639338bb5d1461052357806395d89b41146105385780639e860f2a14610540578063a22cb46514610553578063ab69607a1461056657600080fd5b806370a08231146104b5578063715018a6146104c8578063755edd17146104d057806387bc793f146104e3578063894ba833146104f75780638da5cb5b146104ff57600080fd5b80632ce878da1161020b57806342966c68116101c457806342966c681461044e578063472a66381461046157806353df5c7c146104745780635edc7c191461047c5780636297c16c1461048f5780636352211e146104a257600080fd5b80632ce878da146103cf5780633403c4e9146103d75780633a3d146f146103e85780633ebc82c51461041557806340c1a0641461042857806342842e0e1461043b57600080fd5b80630de54ba01161025d5780630de54ba01461033b57806318160ddd1461034e57806318e97fd114610364578063204274861461037757806323b872dd1461038a5780632a55205a1461039d57600080fd5b8063012cf1e81461029a57806301ffc9a7146102c357806306fdde03146102e6578063081812fc146102fb578063095ea7b314610326575b600080fd5b6102ad6102a8366004612b7c565b610642565b6040516102ba9190612b97565b60405180910390f35b6102d66102d1366004612bfa565b610688565b60405190151581526020016102ba565b6102ee6106a2565b6040516102ba9190612c6f565b61030e610309366004612c82565b610734565b6040516001600160a01b0390911681526020016102ba565b610339610334366004612cb2565b6107ce565b005b610339610349366004612cdc565b6108a3565b61035661091b565b6040519081526020016102ba565b610339610372366004612d61565b61092c565b6102d6610385366004612dad565b610a0f565b610339610398366004612dc8565b610a3e565b6103b06103ab366004612e04565b610a70565b604080516001600160a01b0390931683526020830191909152016102ba565b6102ad610b0b565b60fb546001600160a01b031661030e565b6102d66103f6366004612dad565b6001600160a01b03166000908152610102602052604090205460ff1690565b610339610423366004612dad565b610b31565b61030e610436366004612c82565b610b67565b610339610449366004612dc8565b610b7b565b61033961045c366004612c82565b610b96565b61033961046f366004612b7c565b610c0d565b610339610c3c565b61033961048a366004612e26565b610cb0565b61033961049d366004612c82565b610e30565b61030e6104b0366004612c82565b610e99565b6103566104c3366004612dad565b610f10565b610339610f96565b6103566104de366004612dad565b610fcc565b6101095460ff166040516102ba9190612ec5565b6103396110a2565b6033546001600160a01b031661030e565b61033961051e366004612eed565b611106565b61052b6111da565b6040516102ba9190612f2f565b6102ee6112be565b61033961054e366004612f6d565b6112cd565b610339610561366004612cdc565b611330565b60fc54610356565b61033961057c366004612ff3565b6113d7565b61033961058f366004613055565b61142e565b6103396105a2366004613131565b611466565b6103396105b5366004612b7c565b6114e5565b6102ee6105c8366004612c82565b61159a565b6103566101005481565b6102d66105e536600461318e565b611693565b6102d66105f8366004612dad565b6116c1565b60ff80546102d6911681565b610339610617366004612cb2565b6116e8565b61033961062a366004612dad565b611740565b61033961063d366004612f6d565b6117d8565b6060610682610108600084600281111561065e5761065e612eaf565b600281111561066f5761066f612eaf565b8152602001908152602001600020611870565b92915050565b600061069382611884565b806106825750610682826118a9565b6060609780546106b1906131b8565b80601f01602080910402602001604051908101604052809291908181526020018280546106dd906131b8565b801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166107b25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b8160016101095460ff1660028111156107e9576107e9612eaf565b036108485761082781610108600060015b600281111561080b5761080b612eaf565b81526020019081526020016000206118ec90919063ffffffff16565b610843576040516282b42960e81b815260040160405180910390fd5b610894565b60026101095460ff16600281111561086257610862612eaf565b036108945761087781610108600060026107fa565b15610894576040516282b42960e81b815260040160405180910390fd5b61089e838361190e565b505050565b6033546001600160a01b031633146108cd5760405162461bcd60e51b81526004016107a9906131f2565b60ff805416156108ef5760405162461bcd60e51b81526004016107a990613227565b6001600160a01b0391909116600090815261010260205260409020805460ff1916911515919091179055565b60006109276101045490565b905090565b6033546001600160a01b031633146109565760405162461bcd60e51b81526004016107a9906131f2565b6101075460ff16156109b55760405162461bcd60e51b815260206004820152602260248201527f757064617465546f6b656e5552493a3a6d65746164617461206973206c6f636b604482015261195960f21b60648201526084016107a9565b6000838152610103602052604090206109cf8284836132ac565b50827f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd8383604051610a0292919061336d565b60405180910390a2505050565b6000610a236033546001600160a01b031690565b6001600160a01b0316826001600160a01b0316149050919050565b610a49335b82611a1e565b610a655760405162461bcd60e51b81526004016107a99061339c565b61089e838383611af5565b600082815260fd602052604081205481906001600160a01b0316610a9f5760fb546001600160a01b0316610ab8565b600084815260fd60205260409020546001600160a01b03165b9150610b026064610afc60fe600088815260200190815260200160002054600003610ae55760fc54610af5565b600087815260fe60205260409020545b8690611c91565b90611c9d565b90509250929050565b61010954606090610927906101089060009060ff16600281111561065e5761065e612eaf565b6033546001600160a01b03163314610b5b5760405162461bcd60e51b81526004016107a9906131f2565b610b6481611ca9565b50565b60006106826033546001600160a01b031690565b61089e8383836040518060200160405280600081525061142e565b610b9f33610a43565b610c045760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016107a9565b610b6481611ccb565b610c1633610a0f565b610c3357604051635c510c8360e11b815260040160405180910390fd5b610b6481611d67565b6033546001600160a01b03163314610c665760405162461bcd60e51b81526004016107a9906131f2565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e90610c9890610106906133ed565b60405180910390a1610107805460ff19166001179055565b6000610cbc6001611de4565b90508015610cd4576000805461ff0019166101001790555b6001600160a01b038316610d2a5760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c2061646472657373000060448201526064016107a9565b610d34600a60fc55565b60ff805460ff19169055610100829055610d4c611e6c565b610dbf87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250611e9b92505050565b610dc7611ecc565b610dcf611ef3565b610dd883611ca9565b610de183611740565b8015610e27576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610e3a82610e99565b6001600160a01b031614610e905760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e0060448201526064016107a9565b610b6481610b96565b6000818152609960205260408120546001600160a01b0316806106825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107a9565b60006001600160a01b038216610f7a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016107a9565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610fc05760405162461bcd60e51b81526004016107a9906131f2565b610fca6000611f22565b565b60ff80546000911615610ff15760405162461bcd60e51b81526004016107a990613227565b6033546001600160a01b031633148061101a5750336000908152610102602052604090205460ff165b61107f5760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b60648201526084016107a9565b6106828261108c60fc5490565b60fb546001600160a01b0316611f74565b919050565b6033546001600160a01b031633146110cc5760405162461bcd60e51b81526004016107a9906131f2565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b031633146111305760405162461bcd60e51b81526004016107a9906131f2565b6101075460ff161561118e5760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b60648201526084016107a9565b61010661119c8284836132ac565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e82826040516111ce92919061336d565b60405180910390a15050565b611200604051806060016040528060008152602001606081526020016000151581525090565b6040805160608101909152610105805482526101068054602084019190611226906131b8565b80601f0160208091040260200160405190810160405280929190818152602001828054611252906131b8565b801561129f5780601f106112745761010080835404028352916020019161129f565b820191906000526020600020905b81548152906001019060200180831161128257829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b6060609880546106b1906131b8565b6112d633610a0f565b6112f357604051635c510c8360e11b815260040160405180910390fd5b61089e8383838080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509250612030915050565b8160016101095460ff16600281111561134b5761134b612eaf565b036113815761136081610108600060016107fa565b61137c576040516282b42960e81b815260040160405180910390fd5b6113cd565b60026101095460ff16600281111561139b5761139b612eaf565b036113cd576113b081610108600060026107fa565b156113cd576040516282b42960e81b815260040160405180910390fd5b61089e838361220d565b6033546001600160a01b031633146114015760405162461bcd60e51b81526004016107a9906131f2565b60ff805416156114235760405162461bcd60e51b81526004016107a990613227565b61089e838383612218565b6114383383611a1e565b6114545760405162461bcd60e51b81526004016107a99061339c565b6114608484848461238d565b50505050565b6033546001600160a01b031633146114905760405162461bcd60e51b81526004016107a9906131f2565b60ff805416156114b25760405162461bcd60e51b81526004016107a990613227565b6114bd848484612218565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b6114ee33610a0f565b61150b57604051635c510c8360e11b815260040160405180910390fd5b610108600082600281111561152257611522612eaf565b600281111561153357611533612eaf565b8152602081019190915260400160009081209081816115528282612b3b565b50505050336001600160a01b03167f7efc19cf93d497a6a56103ea89a39d51c0cad74a817ed3cd0ecaff9823d4da248260405161158f9190612ec5565b60405180910390a250565b600081815261010360205260408120805460609291906115b9906131b8565b905011156116605760008281526101036020526040902080546115db906131b8565b80601f0160208091040260200160405190810160405280929190818152602001828054611607906131b8565b80156116545780601f1061162957610100808354040283529160200191611654565b820191906000526020600020905b81548152906001019060200180831161163757829003601f168201915b50505050509050919050565b61010661166c836123c0565b60405160200161167d929190613478565b6040516020818303038152906040529050919050565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b6101095460009061068290839061010890849060ff1660028111156107fa576107fa612eaf565b6033546001600160a01b031633146117125760405162461bcd60e51b81526004016107a9906131f2565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461176a5760405162461bcd60e51b81526004016107a9906131f2565b6001600160a01b0381166117cf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107a9565b610b6481611f22565b6117e133610a0f565b6117fe57604051635c510c8360e11b815260040160405180910390fd5b600083600281111561181257611812612eaf565b0361183057604051632de777a160e11b815260040160405180910390fd5b61089e8383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060019250612030915050565b6060600061187d836124c1565b9392505050565b60006001600160e01b0319821663fa31a45b60e01b148061068257506106828261251c565b60006001600160e01b03198216631030681960e21b14806118ce57506118ce8261251c565b806118dd57506118dd82612532565b80610682575061068282612553565b6001600160a01b0381166000908152600183016020526040812054151561187d565b600061191982610e99565b9050806001600160a01b0316836001600160a01b0316036119865760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107a9565b336001600160a01b03821614806119a257506119a28133611693565b611a145760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107a9565b61089e8383612593565b6000818152609960205260408120546001600160a01b0316611a975760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107a9565b6000611aa283610e99565b9050806001600160a01b0316846001600160a01b03161480611ac95750611ac98185611693565b80611aed5750836001600160a01b0316611ae284610734565b6001600160a01b0316145b949350505050565b826001600160a01b0316611b0882610e99565b6001600160a01b031614611b6c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107a9565b6001600160a01b038216611bce5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107a9565b611bd9600082612593565b6001600160a01b0383166000908152609a60205260408120805460019290611c02908490613534565b90915550506001600160a01b0382166000908152609a60205260408120805460019290611c3090849061354b565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061187d8284613563565b600061187d8284613598565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611cd682610e99565b9050611ce3600083612593565b6001600160a01b0381166000908152609a60205260408120805460019290611d0c908490613534565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45b5050565b806002811115611d7957611d79612eaf565b6101095460ff166002811115611d9157611d91612eaf565b60405133907f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f90600090a4610109805482919060ff19166001836002811115611ddc57611ddc612eaf565b021790555050565b60008054610100900460ff1615611e2b578160ff166001148015611e075750303b155b611e235760405162461bcd60e51b81526004016107a9906135ac565b506000919050565b60005460ff808416911610611e525760405162461bcd60e51b81526004016107a9906135ac565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16611e935760405162461bcd60e51b81526004016107a9906135fa565b610fca612601565b600054610100900460ff16611ec25760405162461bcd60e51b81526004016107a9906135fa565b611d638282612631565b600054610100900460ff16610fca5760405162461bcd60e51b81526004016107a9906135fa565b600054610100900460ff16611f1a5760405162461bcd60e51b81526004016107a9906135fa565b610fca611ecc565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611f8561010480546001019055565b6000611f916101045490565b905061010054811115611fe65760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e7360448201526064016107a9565b611ff08582612671565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b600083600281111561204457612044612eaf565b1461089e5760005b825181101561146057811561212d576120bc83828151811061207057612070613645565b6020026020010151610108600087600281111561208f5761208f612eaf565b60028111156120a0576120a0612eaf565b815260200190815260200160002061268b90919063ffffffff16565b508360028111156120cf576120cf612eaf565b8382815181106120e1576120e1613645565b60200260200101516001600160a01b0316336001600160a01b03167f14155f749dc3f9cd2bf890d6d3a47069f77ae35befcee11c8b1a3ba41cba153660405160405180910390a46121fb565b61218e83828151811061214257612142613645565b6020026020010151610108600087600281111561216157612161612eaf565b600281111561217257612172612eaf565b81526020019081526020016000206126a090919063ffffffff16565b508360028111156121a1576121a1612eaf565b8382815181106121b3576121b3613645565b60200260200101516001600160a01b0316336001600160a01b03167fc72e29af1b34de3dec3a764b4ca4d85b9c380ab33b9b268d29b6e7008bd0ed9560405160405180910390a45b806122058161365b565b91505061204c565b611d633383836126b5565b6101005481111561226b5760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e7360448201526064016107a9565b61010454156122d65760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b60648201526084016107a9565b604051806060016040528082815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020918201528151610105908155908201516101069061233f9082613674565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1990610a02908690869061336d565b612398848484611af5565b6123a484848484612783565b6114605760405162461bcd60e51b81526004016107a990613734565b6060816000036123e75750506040805180820190915260018152600360fc1b602082015290565b8160005b811561241157806123fb8161365b565b915061240a9050600a83613598565b91506123eb565b60008167ffffffffffffffff81111561242c5761242c61303f565b6040519080825280601f01601f191660200182016040528015612456576020820181803683370190505b5090505b8415611aed5761246b600183613534565b9150612478600a86613786565b61248390603061354b565b60f81b81838151811061249857612498613645565b60200101906001600160f81b031916908160001a9053506124ba600a86613598565b945061245a565b60608160000180548060200260200160405190810160405280929190818152602001828054801561165457602002820191906000526020600020905b8154815260200190600101908083116124fd5750505050509050919050565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b14806106825750610682825b60006001600160e01b031982166380ac58cd60e01b148061258457506001600160e01b03198216635b5e139f60e01b145b8061068257506106828261251c565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906125c882610e99565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600054610100900460ff166126285760405162461bcd60e51b81526004016107a9906135fa565b610fca33611f22565b600054610100900460ff166126585760405162461bcd60e51b81526004016107a9906135fa565b60976126648382613674565b50609861089e8282613674565b611d63828260405180602001604052806000815250612884565b600061187d836001600160a01b0384166128b7565b600061187d836001600160a01b038416612906565b816001600160a01b0316836001600160a01b0316036127165760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107a9565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006001600160a01b0384163b1561287957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906127c790339089908890889060040161379a565b6020604051808303816000875af1925050508015612802575060408051601f3d908101601f191682019092526127ff918101906137d7565b60015b61285f573d808015612830576040519150601f19603f3d011682016040523d82523d6000602084013e612835565b606091505b5080516000036128575760405162461bcd60e51b81526004016107a990613734565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611aed565b506001949350505050565b61288e83836129f9565b61289b6000848484612783565b61089e5760405162461bcd60e51b81526004016107a990613734565b60008181526001830160205260408120546128fe57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610682565b506000610682565b600081815260018301602052604081205480156129ef57600061292a600183613534565b855490915060009061293e90600190613534565b90508181146129a357600086600001828154811061295e5761295e613645565b906000526020600020015490508087600001848154811061298157612981613645565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806129b4576129b46137f4565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610682565b6000915050610682565b6001600160a01b038216612a4f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107a9565b6000818152609960205260409020546001600160a01b031615612ab45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107a9565b6001600160a01b0382166000908152609a60205260408120805460019290612add90849061354b565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5080546000825590600052602060002090810190610b6491905b80821115612b695760008155600101612b55565b5090565b80356003811061109d57600080fd5b600060208284031215612b8e57600080fd5b61187d82612b6d565b6020808252825182820181905260009190848201906040850190845b81811015612bd85783516001600160a01b031683529284019291840191600101612bb3565b50909695505050505050565b6001600160e01b031981168114610b6457600080fd5b600060208284031215612c0c57600080fd5b813561187d81612be4565b60005b83811015612c32578181015183820152602001612c1a565b838111156114605750506000910152565b60008151808452612c5b816020860160208601612c17565b601f01601f19169290920160200192915050565b60208152600061187d6020830184612c43565b600060208284031215612c9457600080fd5b5035919050565b80356001600160a01b038116811461109d57600080fd5b60008060408385031215612cc557600080fd5b612cce83612c9b565b946020939093013593505050565b60008060408385031215612cef57600080fd5b612cf883612c9b565b915060208301358015158114612d0d57600080fd5b809150509250929050565b60008083601f840112612d2a57600080fd5b50813567ffffffffffffffff811115612d4257600080fd5b602083019150836020828501011115612d5a57600080fd5b9250929050565b600080600060408486031215612d7657600080fd5b83359250602084013567ffffffffffffffff811115612d9457600080fd5b612da086828701612d18565b9497909650939450505050565b600060208284031215612dbf57600080fd5b61187d82612c9b565b600080600060608486031215612ddd57600080fd5b612de684612c9b565b9250612df460208501612c9b565b9150604084013590509250925092565b60008060408385031215612e1757600080fd5b50508035926020909101359150565b60008060008060008060808789031215612e3f57600080fd5b863567ffffffffffffffff80821115612e5757600080fd5b612e638a838b01612d18565b90985096506020890135915080821115612e7c57600080fd5b50612e8989828a01612d18565b9095509350612e9c905060408801612c9b565b9150606087013590509295509295509295565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612ee757634e487b7160e01b600052602160045260246000fd5b91905290565b60008060208385031215612f0057600080fd5b823567ffffffffffffffff811115612f1757600080fd5b612f2385828601612d18565b90969095509350505050565b60208152815160208201526000602083015160606040840152612f556080840182612c43565b90506040840151151560608401528091505092915050565b600080600060408486031215612f8257600080fd5b612f8b84612b6d565b9250602084013567ffffffffffffffff80821115612fa857600080fd5b818601915086601f830112612fbc57600080fd5b813581811115612fcb57600080fd5b8760208260051b8501011115612fe057600080fd5b6020830194508093505050509250925092565b60008060006040848603121561300857600080fd5b833567ffffffffffffffff81111561301f57600080fd5b61302b86828701612d18565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561306b57600080fd5b61307485612c9b565b935061308260208601612c9b565b925060408501359150606085013567ffffffffffffffff808211156130a657600080fd5b818701915087601f8301126130ba57600080fd5b8135818111156130cc576130cc61303f565b604051601f8201601f19908116603f011681019083821181831017156130f4576130f461303f565b816040528281528a602084870101111561310d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000806060858703121561314757600080fd5b843567ffffffffffffffff81111561315e57600080fd5b61316a87828801612d18565b9095509350506020850135915061318360408601612c9b565b905092959194509250565b600080604083850312156131a157600080fd5b6131aa83612c9b565b9150610b0260208401612c9b565b600181811c908216806131cc57607f821691505b6020821081036131ec57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b601f82111561089e57600081815260208120601f850160051c810160208610156132855750805b601f850160051c820191505b818110156132a457828155600101613291565b505050505050565b67ffffffffffffffff8311156132c4576132c461303f565b6132d8836132d283546131b8565b8361325e565b6000601f84116001811461330c57600085156132f45750838201355b600019600387901b1c1916600186901b178355613366565b600083815260209020601f19861690835b8281101561333d578685013582556020948501946001909201910161331d565b508682101561335a5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000602080835260008454613401816131b8565b80848701526040600180841660008114613422576001811461343c5761346a565b60ff1985168984015283151560051b89018301955061346a565b896000528660002060005b858110156134625781548b8201860152908301908801613447565b8a0184019650505b509398975050505050505050565b6000808454613486816131b8565b6001828116801561349e57600181146134b3576134e2565b60ff19841687528215158302870194506134e2565b8860005260208060002060005b858110156134d95781548a8201529084019082016134c0565b50505082870194505b50602f60f81b8452865192506134fe8382860160208a01612c17565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156135465761354661351e565b500390565b6000821982111561355e5761355e61351e565b500190565b600081600019048311821515161561357d5761357d61351e565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826135a7576135a7613582565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006001820161366d5761366d61351e565b5060010190565b815167ffffffffffffffff81111561368e5761368e61303f565b6136a28161369c84546131b8565b8461325e565b602080601f8311600181146136d757600084156136bf5750858301515b600019600386901b1c1916600185901b1785556132a4565b600085815260208120601f198616915b82811015613706578886015182559484019460019091019084016136e7565b50858210156137245787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261379557613795613582565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137cd90830184612c43565b9695505050505050565b6000602082840312156137e957600080fd5b815161187d81612be4565b634e487b7160e01b600052603160045260246000fdfea26469706673582212205370b00cd33099bb7db34d5dcd47472641d39a154db4f6e3ad68922ff6aec39a64736f6c634300080f0033",
    "sourceMap": "187:1659:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3744:142:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;515:312:39;;;;;;:::i;:::-;;:::i;:::-;;;1593:14:44;;1586:22;1568:41;;1556:2;1541:18;515:312:39;1428:187:44;2948:98:14;;;:::i;:::-;;;;;;;:::i;4471:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2720:32:44;;;2702:51;;2690:2;2675:18;4471:217:14;2556:203:44;1349:173:39;;;;;;:::i;:::-;;:::i;:::-;;4926:166:37;;;;;;:::i;:::-;;:::i;10790:109::-;;;:::i;:::-;;;3699:25:44;;;3687:2;3672:18;10790:109:37;3553:177:44;8332:337:37;;;;;;:::i;:::-;;:::i;1072:171:39:-;;;;;;:::i;:::-;;:::i;5198:330:14:-;;;;;;:::i;:::-;;:::i;846:566:41:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5541:32:44;;;5523:51;;5605:2;5590:18;;5583:34;;;;5496:18;846:566:41;5349:274:44;3922:114:33;;;:::i;2248:113:41:-;2332:22;;-1:-1:-1;;;;;2332:22:41;2248:113;;9281:120:37;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:25:37;9346:4;9369:25;;;:15;:25;;;;;;;;;9281:120;7363:127;;;;;;:::i;:::-;;:::i;9583:141::-;;;;;;:::i;:::-;;:::i;5594:179:14:-;;;;;;:::i;:::-;;:::i;801:241:17:-;;;;;;:::i;:::-;;:::i;2445:125:33:-;;;;;;:::i;:::-;;:::i;8750:140:37:-;;;:::i;3645:548::-;;;;;;:::i;:::-;;:::i;6819:196::-;;;;;;:::i;:::-;;:::i;2651:235:14:-;;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;:::i;:::-;;:::i;1908:101:12:-;;;:::i;6269:428:37:-;;;;;;:::i;:::-;;:::i;4242:104:33:-;4333:8;;;;4242:104;;;;;;:::i;7099:119:37:-;;;:::i;1276:85:12:-;1348:6;;-1:-1:-1;;;;;1348:6:12;1276:85;;7947:271:37;;;;;;:::i;:::-;;:::i;9840:99::-;;;:::i;:::-;;;;;;;:::i;3110:102:14:-;;;:::i;3066:182:33:-;;;;;;:::i;:::-;;:::i;1639:205:39:-;;;;;;:::i;:::-;;:::i;2367:117:41:-;2453:24;;2367:117;;5329:181:37;;;;;;:::i;:::-;;:::i;5839:320:14:-;;;;;;:::i;:::-;;:::i;5825:257:37:-;;;;;;:::i;:::-;;:::i;3343:158:33:-;;;;;;:::i;:::-;;:::i;10217:451:37:-;;;;;;:::i;:::-;;:::i;1857:24::-;;;;;;4974:162:14;;;;;;:::i;:::-;;:::i;4072:134:33:-;;;;;;:::i;:::-;;:::i;1779:20:37:-;;;;;;;;;7682:169;;;;;;:::i;:::-;;:::i;2158:198:12:-;;;;;;:::i;:::-;;:::i;2703:268:33:-;;;;;;:::i;:::-;;:::i;3744:142::-;3826:16;3857:24;:4;:15;3862:9;3857:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;:24::i;:::-;3850:31;3744:142;-1:-1:-1;;3744:142:33:o;515:312:39:-;673:4;712:44;743:12;712:30;:44::i;:::-;:108;;;;772:48;807:12;772:34;:48::i;2948:98:14:-;3002:13;3034:5;3027:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:98;:::o;4471:217::-;4547:7;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:14;4566:73;;;;-1:-1:-1;;;4566:73:14;;12017:2:44;4566:73:14;;;11999:21:44;12056:2;12036:18;;;12029:30;12095:34;12075:18;;;12068:62;-1:-1:-1;;;12146:18:44;;;12139:42;12198:19;;4566:73:14;;;;;;;;;-1:-1:-1;4657:24:14;;;;:15;:24;;;;;;-1:-1:-1;;;;;4657:24:14;;4471:217::o;1349:173:39:-;1463:8;1472:28:33;1460:8;;;;:40;;;;;;;;:::i;:::-;;1456:309;;1515:50;1559:5;1515:4;:34;1520:28;1515:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;:43;;:50;;;;:::i;:::-;1510:92;;1574:28;;-1:-1:-1;;;1574:28:33;;;;;;;;;;;1510:92;1456:309;;;1631:27;1619:8;;;;:39;;;;;;;;:::i;:::-;;1615:150;;1672:49;1715:5;1672:4;:33;1677:27;1672:33;;:49;1668:90;;;1730:28;;-1:-1:-1;;;1730:28:33;;;;;;;;;;;1668:90;1487:28:39::1;1501:8;1511:3;1487:13;:28::i;:::-;1349:173:::0;;;:::o;4926:166:37:-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;4503:8:37::1;::::0;;::::1;4502:9;4494:52;;;;-1:-1:-1::0;;;4494:52:37::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5049:24:37;;;::::2;;::::0;;;:15:::2;:24;::::0;;;;:36;;-1:-1:-1;;5049:36:37::2;::::0;::::2;;::::0;;;::::2;::::0;;4926:166::o;10790:109::-;10842:7;10868:24;:14;929::21;;838:112;10868:24:37;10861:31;;10790:109;:::o;8332:337::-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;8477:25:37;;::::1;;8476:26;8455:107;;;::::0;-1:-1:-1;;;8455:107:37;;13150:2:44;8455:107:37::1;::::0;::::1;13132:21:44::0;13189:2;13169:18;;;13162:30;13228:34;13208:18;;;13201:62;-1:-1:-1;;;13279:18:44;;;13272:32;13321:19;;8455:107:37::1;12948:398:44::0;8455:107:37::1;8573:20;::::0;;;:10:::1;:20;::::0;;;;:35:::1;8596:12:::0;;8573:20;:35:::1;:::i;:::-;;8639:8;8623:39;8649:12;;8623:39;;;;;;;:::i;:::-;;;;;;;;8332:337:::0;;;:::o;1072:171:39:-;1193:4;1229:7;1348:6:12;;-1:-1:-1;;;;;1348:6:12;;1276:85;1229:7:39;-1:-1:-1;;;;;1220:16:39;:5;-1:-1:-1;;;;;1220:16:39;;1213:23;;1072:171;;;:::o;5198:330:14:-;5387:41;929:10:20;5406:12:14;5420:7;5387:18;:41::i;:::-;5379:103;;;;-1:-1:-1;;;5379:103:14;;;;;;;:::i;:::-;5493:28;5503:4;5509:2;5513:7;5493:9;:28::i;846:566:41:-;983:16;1049:26;;;:16;:26;;;;;;983:16;;-1:-1:-1;;;;;1049:26:41;:118;;1145:22;;-1:-1:-1;;;;;1145:22:41;1049:118;;;1104:26;;;;:16;:26;;;;;;-1:-1:-1;;;;;1104:26:41;1049:118;1038:129;;1193:212;1401:3;1193:190;1238:18;:28;1257:8;1238:28;;;;;;;;;;;;1270:1;1238:33;:131;;1345:24;;1238:131;;;1294:28;;;;:18;:28;;;;;;1238:131;1193:10;;:27;:190::i;:::-;:207;;:212::i;:::-;1177:228;;846:566;;;;;:::o;3922:114:33:-;4013:8;;3977:16;;4008:23;;:4;;:14;;4013:8;;4008:14;;;;;;;;:::i;7363:127:37:-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;7446:37:37::1;7473:9;7446:26;:37::i;:::-;7363:127:::0;:::o;9583:141::-;9667:15;9709:7;1348:6:12;;-1:-1:-1;;;;;1348:6:12;;1276:85;5594:179:14;5727:39;5744:4;5750:2;5754:7;5727:39;;;;;;;;;;;;:16;:39::i;801:241:17:-;917:41;929:10:20;936:12:17;850:96:20;917:41:17;909:102;;;;-1:-1:-1;;;909:102:17;;16424:2:44;909:102:17;;;16406:21:44;16463:2;16443:18;;;16436:30;16502:34;16482:18;;;16475:62;-1:-1:-1;;;16553:18:44;;;16546:46;16609:19;;909:102:17;16222:412:44;909:102:17;1021:14;1027:7;1021:5;:14::i;2445:125:33:-;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:33;;;;;;;;;;;2064:71;2539:26:::1;2552:12;2539;:26::i;8750:140:37:-:0;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;8807:34:37::1;::::0;::::1;::::0;::::1;::::0;8822:18;;8807:34:::1;:::i;:::-;;;;;;;;8851:25:::0;:32;;-1:-1:-1;;8851:32:37::1;8879:4;8851:32;::::0;;8750:140::o;3645:548::-;3111:19:13;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:13;;;;;3168:65;-1:-1:-1;;;;;3820:22:37;::::1;3812:65;;;::::0;-1:-1:-1;;;3812:65:37;;17809:2:44;3812:65:37::1;::::0;::::1;17791:21:44::0;17848:2;17828:18;;;17821:30;17887:32;17867:18;;;17860:60;17937:18;;3812:65:37::1;17607:354:44::0;3812:65:37::1;3887:32;3916:2;2197:24:41::0;:38;2119:123;3887:32:37::1;3929:8;:16:::0;;-1:-1:-1;;3929:16:37::1;::::0;;::::1;3955:22:::0;;;3988:16:::1;:14;:16::i;:::-;4014:29;4028:5;;4014:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;4014:29:37::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;4035:7:37;;-1:-1:-1;4035:7:37;;;;4014:29;::::1;4035:7:::0;;;;4014:29;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;4014:13:37::1;::::0;-1:-1:-1;;;4014:29:37:i:1;:::-;4053:15;:13;:15::i;:::-;4078:17;:15;:17::i;:::-;4106:36;4133:8;4106:26;:36::i;:::-;4153:33;4177:8;4153:23;:33::i;:::-;3257:14:13::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:13;;;3327:14;;-1:-1:-1;18118:36:44;;3327:14:13;;18106:2:44;18091:18;3327:14:13;;;;;;;3253:99;3101:257;3645:548:37;;;;;;:::o;6819:196::-;6917:10;6896:17;6904:8;6896:7;:17::i;:::-;-1:-1:-1;;;;;6896:31:37;;6875:109;;;;-1:-1:-1;;;6875:109:37;;18367:2:44;6875:109:37;;;18349:21:44;18406:2;18386:18;;;18379:30;18445:33;18425:18;;;18418:61;18496:18;;6875:109:37;18165:355:44;6875:109:37;6994:14;6999:8;6994:4;:14::i;2651:235:14:-;2723:7;2758:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2758:16:14;;2784:73;;;;-1:-1:-1;;;2784:73:14;;18727:2:44;2784:73:14;;;18709:21:44;18766:2;18746:18;;;18739:30;18805:34;18785:18;;;18778:62;-1:-1:-1;;;18856:18:44;;;18849:39;18905:19;;2784:73:14;18525:405:44;2390:204:14;2462:7;-1:-1:-1;;;;;2489:19:14;;2481:73;;;;-1:-1:-1;;;2481:73:14;;19137:2:44;2481:73:14;;;19119:21:44;19176:2;19156:18;;;19149:30;19215:34;19195:18;;;19188:62;-1:-1:-1;;;19266:18:44;;;19259:39;19315:19;;2481:73:14;18935:405:44;2481:73:14;-1:-1:-1;;;;;;2571:16:14;;;;;:9;:16;;;;;;;2390:204::o;1908:101:12:-;1348:6;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;6269:428:37:-;4503:8;;;6350:7;;4503:8;4502:9;4494:52;;;;-1:-1:-1;;;4494:52:37;;;;;;;:::i;:::-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;6390:10:37::1;:21;::::0;:52:::1;;-1:-1:-1::0;6431:10:37::1;6415:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;6390:52;6369:147;;;::::0;-1:-1:-1;;;6369:147:37;;19547:2:44;6369:147:37::1;::::0;::::1;19529:21:44::0;19586:2;19566:18;;;19559:30;19625:34;19605:18;;;19598:62;-1:-1:-1;;;19676:18:44;;;19669:46;19732:19;;6369:147:37::1;19345:412:44::0;6369:147:37::1;6545:145;6575:9;6602:29;2453:24:41::0;;;2367:117;6602:29:37::1;2332:22:41::0;;-1:-1:-1;;;;;2332:22:41;6545:12:37::1;:145::i;4556:1::-;6269:428:::0;;;:::o;7099:119::-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;7153:8:37::1;:15:::0;;-1:-1:-1;;7153:15:37::1;7164:4;7153:15;::::0;;7183:28:::1;::::0;7200:10:::1;::::0;7183:28:::1;::::0;7153:8:::1;::::0;7183:28:::1;7099:119::o:0;7947:271::-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;8047:25:37;;::::1;;8046:26;8025:106;;;::::0;-1:-1:-1;;;8025:106:37;;19964:2:44;8025:106:37::1;::::0;::::1;19946:21:44::0;20003:2;19983:18;;;19976:30;20042:34;20022:18;;;20015:62;-1:-1:-1;;;20093:18:44;;;20086:31;20134:19;;8025:106:37::1;19762:397:44::0;8025:106:37::1;8142:18:::0;:29:::1;8163:8:::0;;8142:18;:29:::1;:::i;:::-;;8186:25;8202:8;;8186:25;;;;;;;:::i;:::-;;;;;;;;7947:271:::0;;:::o;9840:99::-;9886:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;9886:17:37;9915;;;;;;;;;9922:10;9915:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9915:17:37;;;-1:-1:-1;;9915:17:37;;;;;;;;;;;;;;;;9840:99;-1:-1:-1;9840:99:37:o;3110:102:14:-;3166:13;3198:7;3191:14;;;;;:::i;3066:182:33:-;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:33;;;;;;;;;;;2064:71;3201:42:::1;3218:9;3229:6;;3201:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;3201:42:33;-1:-1:-1;3201:16:33::1;::::0;-1:-1:-1;;3201:42:33:i:1;1639:205:39:-:0;1767:9;1472:28:33;1460:8;;;;:40;;;;;;;;:::i;:::-;;1456:309;;1515:50;1559:5;1515:4;:34;1520:28;1515:34;;:50;1510:92;;1574:28;;-1:-1:-1;;;1574:28:33;;;;;;;;;;;1510:92;1456:309;;;1631:27;1619:8;;;;:39;;;;;;;;:::i;:::-;;1615:150;;1672:49;1715:5;1672:4;:33;1677:27;1672:33;;:49;1668:90;;;1730:28;;-1:-1:-1;;;1730:28:33;;;;;;;;;;;1668:90;1792:45:39::1;1816:9;1827;1792:23;:45::i;5329:181:37:-:0;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;4503:8:37::1;::::0;;::::1;4502:9;4494:52;;;;-1:-1:-1::0;;;4494:52:37::1;;;;;;;:::i;:::-;5464:39:::2;5477:8;;5487:15;5464:12;:39::i;5839:320:14:-:0;6008:41;929:10:20;6041:7:14;6008:18;:41::i;:::-;6000:103;;;;-1:-1:-1;;;6000:103:14;;;;;;;:::i;:::-;6113:39;6127:4;6133:2;6137:7;6146:5;6113:13;:39::i;:::-;5839:320;;;;:::o;5825:257:37:-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;4503:8:37::1;::::0;;::::1;4502:9;4494:52;;;;-1:-1:-1::0;;;4494:52:37::1;;;;;;;:::i;:::-;5995:39:::2;6008:8;;6018:15;5995:12;:39::i;:::-;-1:-1:-1::0;;;;;6044:24:37::2;;::::0;;;:15:::2;:24;::::0;;;;:31;;-1:-1:-1;;6044:31:37::2;6071:4;6044:31;::::0;;-1:-1:-1;;;5825:257:37:o;3343:158:33:-;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:33;;;;;;;;;;;2064:71;3436:4:::1;:15;3441:9;3436:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3436:15:33;;;;;-1:-1:-1;3429:22:33::1;3436:15:::0;-1:-1:-1;3429:22:33::1;:::i;:::-;;;;;3474:10;-1:-1:-1::0;;;;;3462:34:33::1;;3486:9;3462:34;;;;;;:::i;:::-;;;;;;;;3343:158:::0;:::o;10217:451:37:-;10371:1;10340:20;;;:10;:20;;;;;10334:34;;10305:13;;10371:1;10340:20;10334:34;;;:::i;:::-;;;:38;10330:96;;;10395:20;;;;:10;:20;;;;;10388:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10217:451;;;:::o;10330:96::-;10516:18;10581:19;:8;:17;:19::i;:::-;10478:169;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10435:226;;10217:451;;;:::o;4974:162:14:-;-1:-1:-1;;;;;5094:25:14;;;5071:4;5094:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4974:162::o;4072:134:33:-;4172:8;;4148:4;;4167:34;;4191:9;;4167:4;;4148;;4172:8;;4167:14;;;;;;;;:::i;7682:169:37:-;1348:6:12;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;7806:26:37::1;::::0;;;:16:::1;:26;::::0;;;;:38;;-1:-1:-1;;;;;;7806:38:37::1;-1:-1:-1::0;;;;;7806:38:37;;;::::1;::::0;;;::::1;::::0;;7682:169::o;2158:198:12:-;1348:6;;-1:-1:-1;;;;;1348:6:12;929:10:20;1488:23:12;1480:68;;;;-1:-1:-1;;;1480:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:12;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:12;;21680:2:44;2238:73:12::1;::::0;::::1;21662:21:44::0;21719:2;21699:18;;;21692:30;21758:34;21738:18;;;21731:62;-1:-1:-1;;;21809:18:44;;;21802:36;21855:19;;2238:73:12::1;21478:402:44::0;2238:73:12::1;2321:28;2340:8;2321:18;:28::i;2703:268:33:-:0;2069:30;2088:10;2069:18;:30::i;:::-;2064:71;;2108:27;;-1:-1:-1;;;2108:27:33;;;;;;;;;;;2064:71;2852:26:::1;2839:9;:39;;;;;;;;:::i;:::-;::::0;2835:84:::1;;2887:32;;-1:-1:-1::0;;;2887:32:33::1;;;;;;;;;;;2835:84;2925:41;2942:9;2953:6;;2925:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2961:4:33::1;::::0;-1:-1:-1;2925:16:33::1;::::0;-1:-1:-1;;2925:41:33:i:1;9581:257:31:-:0;9644:16;9672:22;9697:19;9705:3;9697:7;:19::i;:::-;9672:44;9581:257;-1:-1:-1;;;9581:257:31:o;4735:204:33:-;4821:4;-1:-1:-1;;;;;;4844:47:33;;-1:-1:-1;;;4844:47:33;;:88;;;4895:37;4919:12;4895:23;:37::i;10966:482:37:-;11163:4;-1:-1:-1;;;;;;11202:46:37;;-1:-1:-1;;;11202:46:37;;:110;;;11264:48;11300:11;11264:35;:48::i;:::-;11202:175;;;;11328:49;11365:11;11328:36;:49::i;:::-;11202:239;;;;11393:48;11429:11;11393:35;:48::i;8182:165:31:-;-1:-1:-1;;;;;8315:23:31;;8262:4;3849:19;;;:12;;;:19;;;;;;:24;;8285:55;3753:127;3998:412:14;4078:13;4094:34;4120:7;4094:25;:34::i;:::-;4078:50;;4152:5;-1:-1:-1;;;;;4146:11:14;:2;-1:-1:-1;;;;;4146:11:14;;4138:57;;;;-1:-1:-1;;;4138:57:14;;22087:2:44;4138:57:14;;;22069:21:44;22126:2;22106:18;;;22099:30;22165:34;22145:18;;;22138:62;-1:-1:-1;;;22216:18:44;;;22209:31;22257:19;;4138:57:14;21885:397:44;4138:57:14;929:10:20;-1:-1:-1;;;;;4227:21:14;;;;:62;;-1:-1:-1;4252:37:14;4269:5;929:10:20;4974:162:14;:::i;4252:37::-;4206:165;;;;-1:-1:-1;;;4206:165:14;;22489:2:44;4206:165:14;;;22471:21:44;22528:2;22508:18;;;22501:30;22567:34;22547:18;;;22540:62;22638:26;22618:18;;;22611:54;22682:19;;4206:165:14;22287:420:44;4206:165:14;4382:21;4391:2;4395:7;4382:8;:21::i;7914:355::-;8007:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:14;8023:73;;;;-1:-1:-1;;;8023:73:14;;22914:2:44;8023:73:14;;;22896:21:44;22953:2;22933:18;;;22926:30;22992:34;22972:18;;;22965:62;-1:-1:-1;;;23043:18:44;;;23036:42;23095:19;;8023:73:14;22712:408:44;8023:73:14;8106:13;8122:34;8148:7;8122:25;:34::i;:::-;8106:50;;8185:5;-1:-1:-1;;;;;8174:16:14;:7;-1:-1:-1;;;;;8174:16:14;;:52;;;;8194:32;8211:5;8218:7;8194:16;:32::i;:::-;8174:87;;;;8254:7;-1:-1:-1;;;;;8230:31:14;:20;8242:7;8230:11;:20::i;:::-;-1:-1:-1;;;;;8230:31:14;;8174:87;8166:96;7914:355;-1:-1:-1;;;;7914:355:14:o;10946:616::-;11111:4;-1:-1:-1;;;;;11073:42:14;:34;11099:7;11073:25;:34::i;:::-;-1:-1:-1;;;;;11073:42:14;;11065:92;;;;-1:-1:-1;;;11065:92:14;;23327:2:44;11065:92:14;;;23309:21:44;23366:2;23346:18;;;23339:30;23405:34;23385:18;;;23378:62;-1:-1:-1;;;23456:18:44;;;23449:35;23501:19;;11065:92:14;23125:401:44;11065:92:14;-1:-1:-1;;;;;11175:16:14;;11167:65;;;;-1:-1:-1;;;11167:65:14;;23733:2:44;11167:65:14;;;23715:21:44;23772:2;23752:18;;;23745:30;23811:34;23791:18;;;23784:62;-1:-1:-1;;;23862:18:44;;;23855:34;23906:19;;11167:65:14;23531:400:44;11167:65:14;11344:29;11361:1;11365:7;11344:8;:29::i;:::-;-1:-1:-1;;;;;11384:15:14;;;;;;:9;:15;;;;;:20;;11403:1;;11384:15;:20;;11403:1;;11384:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11414:13:14;;;;;;:9;:13;;;;;:18;;11431:1;;11414:13;:18;;11431:1;;11414:18;:::i;:::-;;;;-1:-1:-1;;11442:16:14;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11442:21:14;-1:-1:-1;;;;;11442:21:14;;;;;;;;;11479:27;;11442:16;;11479:27;;;;;;;1349:173:39;;;:::o;3461:96:25:-;3519:7;3545:5;3549:1;3545;:5;:::i;3846:96::-;3904:7;3930:5;3934:1;3930;:5;:::i;1418:115:41:-;1492:22;:34;;-1:-1:-1;;;;;;1492:34:41;-1:-1:-1;;;;;1492:34:41;;;;;;;;;;1418:115::o;10205:417:14:-;10264:13;10280:34;10306:7;10280:25;:34::i;:::-;10264:50;;10411:29;10428:1;10432:7;10411:8;:29::i;:::-;-1:-1:-1;;;;;10451:16:14;;;;;;:9;:16;;;;;:21;;10471:1;;10451:16;:21;;10471:1;;10451:21;:::i;:::-;;;;-1:-1:-1;;10489:16:14;;;;:7;:16;;;;;;10482:23;;-1:-1:-1;;;;;;10482:23:14;;;10521:36;10497:7;;10489:16;-1:-1:-1;;;;;10521:36:14;;;;;10489:16;;10521:36;10568:47;10254:368;10205:417;:::o;5223:164:33:-;5340:12;5302:51;;;;;;;;:::i;:::-;5330:8;;;;5302:51;;;;;;;;:::i;:::-;;;5318:10;;5302:51;;;;;5359:8;:23;;5370:12;;5359:8;-1:-1:-1;;5359:23:33;;5370:12;5359:23;;;;;;;;:::i;:::-;;;;;;5223:164;:::o;5287:808:13:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:13;1476:19:19;:23;5738:61:13;5713:166;;;;-1:-1:-1;;;5713:166:13;;;;;;;:::i;:::-;-1:-1:-1;5900:5:13;;5287:808;-1:-1:-1;5287:808:13:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:13;;;;;;;:::i;:::-;-1:-1:-1;6031:12:13;:22;;-1:-1:-1;;6031:22:13;;;;;;;;;;;;-1:-1:-1;;5287:808:13:o;988:95:12:-;4698:13:13;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:13;;;;;;;:::i;:::-;1050:26:12::1;:24;:26::i;1605:149:14:-:0;4698:13:13;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:13;;;;;;;:::i;:::-;1708:39:14::1;1732:5;1739:7;1708:23;:39::i;862:58:23:-:0;4698:13:13;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:13;;;;;;;:::i;755:85:41:-;4698:13:13;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:13;;;;;;;:::i;:::-;818:15:41::1;:13;:15::i;2510:187:12:-:0;2602:6;;;-1:-1:-1;;;;;2618:17:12;;;-1:-1:-1;;;;;;2618:17:12;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;11990:489:37:-;12127:7;12146:26;:14;1043:19:21;;1061:1;1043:19;;;956:123;12146:26:37;12182:15;12200:24;:14;929::21;;838:112;12200:24:37;12182:42;;12253:9;;12242:7;:20;;12234:65;;;;-1:-1:-1;;;12234:65:37;;25790:2:44;12234:65:37;;;25772:21:44;;;25809:18;;;25802:30;25868:34;25848:18;;;25841:62;25920:18;;12234:65:37;25588:356:44;12234:65:37;12309:23;12319:3;12324:7;12309:9;:23::i;:::-;1794:28:41;;;;:18;:28;;;;;:42;;;1639:26;;;;:16;:26;;;;;:41;;-1:-1:-1;;;;;;1639:41:41;-1:-1:-1;;;;;1639:41:41;;;;;12465:7:37;11990:489;-1:-1:-1;;;;11990:489:37:o;5471:505:33:-;5602:26;5589:9;:39;;;;;;;;:::i;:::-;;5585:387;;5643:9;5638:328;5662:6;:13;5658:1;:17;5638:328;;;5696:7;5692:266;;;5717:30;5737:6;5744:1;5737:9;;;;;;;;:::i;:::-;;;;;;;5717:4;:15;5722:9;5717:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;;5806:9;5764:52;;;;;;;;:::i;:::-;5795:6;5802:1;5795:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5764:52:33;5783:10;-1:-1:-1;;;;;5764:52:33;;;;;;;;;;;5692:266;;;5845:33;5868:6;5875:1;5868:9;;;;;;;;:::i;:::-;;;;;;;5845:4;:15;5850:9;5845:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;:33;;;;:::i;:::-;;5937:9;5895:52;;;;;;;;:::i;:::-;5926:6;5933:1;5926:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5895:52:33;5914:10;-1:-1:-1;;;;;5895:52:33;;;;;;;;;;;5692:266;5677:3;;;;:::i;:::-;;;;5638:328;;4755:153:14;4849:52;929:10:20;4882:8:14;4892;4849:18;:52::i;12716:483:37:-;12870:9;;12851:15;:28;;12830:107;;;;-1:-1:-1;;;12830:107:37;;26423:2:44;12830:107:37;;;26405:21:44;;;26442:18;;;26435:30;26501:34;26481:18;;;26474:62;26553:18;;12830:107:37;26221:356:44;12830:107:37;12968:14;929::21;12968:29:37;12947:125;;;;-1:-1:-1;;;12947:125:37;;26784:2:44;12947:125:37;;;26766:21:44;26823:2;26803:18;;;26796:30;26862:34;26842:18;;;26835:62;-1:-1:-1;;;26913:18:44;;;26906:47;26970:19;;12947:125:37;26582:413:44;12947:125:37;13095:44;;;;;;;;13106:15;13095:44;;;;13123:8;;13095:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13095:44:37;;;-1:-1:-1;;;13095:44:37;;;;;13082:57;;:10;:57;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13082:57:37;;;;;;;;;;;;-1:-1:-1;;13082:57:37;;;;;;;;;;13154:38;13166:15;;13154:38;;;;13183:8;;;;13154:38;:::i;7021:307:14:-;7172:28;7182:4;7188:2;7192:7;7172:9;:28::i;:::-;7218:48;7241:4;7247:2;7251:7;7260:5;7218:22;:48::i;:::-;7210:111;;;;-1:-1:-1;;;7210:111:14;;;;;;;:::i;339:703:22:-;395:13;612:5;621:1;612:10;608:51;;-1:-1:-1;;638:10:22;;;;;;;;;;;;-1:-1:-1;;;638:10:22;;;;;339:703::o;608:51::-;683:5;668:12;722:75;729:9;;722:75;;754:8;;;;:::i;:::-;;-1:-1:-1;776:10:22;;-1:-1:-1;784:2:22;776:10;;:::i;:::-;;;722:75;;;806:19;838:6;828:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;828:17:22;;806:39;;855:150;862:10;;855:150;;888:11;898:1;888:11;;:::i;:::-;;-1:-1:-1;956:10:22;964:2;956:5;:10;:::i;:::-;943:24;;:2;:24;:::i;:::-;930:39;;913:6;920;913:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;913:56:22;;;;;;;;-1:-1:-1;983:11:22;992:2;983:11;;:::i;:::-;;;855:150;;5068:109:31;5124:16;5159:3;:11;;5152:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5068:109;;;:::o;829:155:29:-;-1:-1:-1;;;;;;937:40:29;-1:-1:-1;;;937:40:29;;829:155::o;1849:264:41:-;1974:4;-1:-1:-1;;;;;;2013:41:41;;-1:-1:-1;;;2013:41:41;;:93;;;2070:36;2094:11;1987:344:14;2111:4;-1:-1:-1;;;;;;2146:51:14;;-1:-1:-1;;;2146:51:14;;:126;;-1:-1:-1;;;;;;;2213:59:14;;-1:-1:-1;;;2213:59:14;2146:126;:178;;;;2288:36;2312:11;2288:23;:36::i;11673:182::-;11747:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11747:29:14;-1:-1:-1;;;;;11747:29:14;;;;;;;;:24;;11800:34;11747:24;11800:25;:34::i;:::-;-1:-1:-1;;;;;11791:57:14;;;;;;;;;;;11673:182;;:::o;1089:111:12:-;4698:13:13;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:13;;;;;;;:::i;:::-;1161:32:12::1;929:10:20::0;1161:18:12::1;:32::i;1760:160:14:-:0;4698:13:13;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:13;;;;;;;:::i;:::-;1873:5:14::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:14::1;:17;1906:7:::0;1896;:17:::1;:::i;8599:108::-:0;8674:26;8684:2;8688:7;8674:26;;;;;;;;;;;;:9;:26::i;7627:150:31:-;7697:4;7720:50;7725:3;-1:-1:-1;;;;;7745:23:31;;7720:4;:50::i;7945:156::-;8018:4;8041:53;8049:3;-1:-1:-1;;;;;8069:23:31;;8041:7;:53::i;11990:307:14:-;12140:8;-1:-1:-1;;;;;12131:17:14;:5;-1:-1:-1;;;;;12131:17:14;;12123:55;;;;-1:-1:-1;;;12123:55:14;;29095:2:44;12123:55:14;;;29077:21:44;29134:2;29114:18;;;29107:30;29173:27;29153:18;;;29146:55;29218:18;;12123:55:14;28893:349:44;12123:55:14;-1:-1:-1;;;;;12188:25:14;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12188:46:14;;;;;;;;;;12249:41;;1568::44;;;12249::14;;1541:18:44;12249:41:14;;;;;;;11990:307;;;:::o;12850:800::-;13000:4;-1:-1:-1;;;;;13020:13:14;;1476:19:19;:23;13016:628:14;;13055:83;;-1:-1:-1;;;13055:83:14;;-1:-1:-1;;;;;13055:47:14;;;;;:83;;929:10:20;;13117:4:14;;13123:7;;13132:5;;13055:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13055:83:14;;;;;;;;-1:-1:-1;;13055:83:14;;;;;;;;;;;;:::i;:::-;;;13051:541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13316:6;:13;13333:1;13316:18;13312:266;;13358:60;;-1:-1:-1;;;13358:60:14;;;;;;;:::i;13312:266::-;13530:6;13524:13;13515:6;13511:2;13507:15;13500:38;13051:541;-1:-1:-1;;;;;;13188:62:14;-1:-1:-1;;;13188:62:14;;-1:-1:-1;13181:69:14;;13016:628;-1:-1:-1;13629:4:14;12850:800;;;;;;:::o;8928:311::-;9053:18;9059:2;9063:7;9053:5;:18::i;:::-;9102:54;9133:1;9137:2;9141:7;9150:5;9102:22;:54::i;:::-;9081:151;;;;-1:-1:-1;;;9081:151:14;;;;;;;:::i;1712:404:31:-;1775:4;3849:19;;;:12;;;:19;;;;;;1791:319;;-1:-1:-1;1833:23:31;;;;;;;;:11;:23;;;;;;;;;;;;;2013:18;;1991:19;;;:12;;;:19;;;;;;:40;;;;2045:11;;1791:319;-1:-1:-1;2094:5:31;2087:12;;2284:1388;2350:4;2487:19;;;:12;;;:19;;;;;;2521:15;;2517:1149;;2890:21;2914:14;2927:1;2914:10;:14;:::i;:::-;2962:18;;2890:38;;-1:-1:-1;2942:17:31;;2962:22;;2983:1;;2962:22;:::i;:::-;2942:42;;3016:13;3003:9;:26;2999:398;;3049:17;3069:3;:11;;3081:9;3069:22;;;;;;;;:::i;:::-;;;;;;;;;3049:42;;3220:9;3191:3;:11;;3203:13;3191:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3303:23;;;:12;;;:23;;;;;:36;;;2999:398;3475:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3567:3;:12;;:19;3580:5;3567:19;;;;;;;;;;;3560:26;;;3608:4;3601:11;;;;;;;2517:1149;3650:5;3643:12;;;;;9561:427:14;-1:-1:-1;;;;;9640:16:14;;9632:61;;;;-1:-1:-1;;;9632:61:14;;30329:2:44;9632:61:14;;;30311:21:44;;;30348:18;;;30341:30;30407:34;30387:18;;;30380:62;30459:18;;9632:61:14;30127:356:44;9632:61:14;7696:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:14;:30;9703:58;;;;-1:-1:-1;;;9703:58:14;;30690:2:44;9703:58:14;;;30672:21:44;30729:2;30709:18;;;30702:30;30768;30748:18;;;30741:58;30816:18;;9703:58:14;30488:352:44;9703:58:14;-1:-1:-1;;;;;9828:13:14;;;;;;:9;:13;;;;;:18;;9845:1;;9828:13;:18;;9845:1;;9828:18;:::i;:::-;;;;-1:-1:-1;;9856:16:14;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9856:21:14;-1:-1:-1;;;;;9856:21:14;;;;;;;;9893:33;;9856:16;;;9893:33;;9856:16;;9893:33;10254:368;10205:417;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:149:44:-;88:20;;137:1;127:12;;117:40;;153:1;150;143:12;168:206;241:6;294:2;282:9;273:7;269:23;265:32;262:52;;;310:1;307;300:12;262:52;333:35;358:9;333:35;:::i;379:658::-;550:2;602:21;;;672:13;;575:18;;;694:22;;;521:4;;550:2;773:15;;;;747:2;732:18;;;521:4;816:195;830:6;827:1;824:13;816:195;;;895:13;;-1:-1:-1;;;;;891:39:44;879:52;;986:15;;;;951:12;;;;927:1;845:9;816:195;;;-1:-1:-1;1028:3:44;;379:658;-1:-1:-1;;;;;;379:658:44:o;1042:131::-;-1:-1:-1;;;;;;1116:32:44;;1106:43;;1096:71;;1163:1;1160;1153:12;1178:245;1236:6;1289:2;1277:9;1268:7;1264:23;1260:32;1257:52;;;1305:1;1302;1295:12;1257:52;1344:9;1331:23;1363:30;1387:5;1363:30;:::i;1620:258::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1792:11;;;1786:18;1773:11;;;1766:39;1738:2;1731:10;1702:113;;;1833:6;1830:1;1827:13;1824:48;;;-1:-1:-1;;1868:1:44;1850:16;;1843:27;1620:258::o;1883:::-;1925:3;1963:5;1957:12;1990:6;1985:3;1978:19;2006:63;2062:6;2055:4;2050:3;2046:14;2039:4;2032:5;2028:16;2006:63;:::i;:::-;2123:2;2102:15;-1:-1:-1;;2098:29:44;2089:39;;;;2130:4;2085:50;;1883:258;-1:-1:-1;;1883:258:44:o;2146:220::-;2295:2;2284:9;2277:21;2258:4;2315:45;2356:2;2345:9;2341:18;2333:6;2315:45;:::i;2371:180::-;2430:6;2483:2;2471:9;2462:7;2458:23;2454:32;2451:52;;;2499:1;2496;2489:12;2451:52;-1:-1:-1;2522:23:44;;2371:180;-1:-1:-1;2371:180:44:o;2764:173::-;2832:20;;-1:-1:-1;;;;;2881:31:44;;2871:42;;2861:70;;2927:1;2924;2917:12;2942:254;3010:6;3018;3071:2;3059:9;3050:7;3046:23;3042:32;3039:52;;;3087:1;3084;3077:12;3039:52;3110:29;3129:9;3110:29;:::i;:::-;3100:39;3186:2;3171:18;;;;3158:32;;-1:-1:-1;;;2942:254:44:o;3201:347::-;3266:6;3274;3327:2;3315:9;3306:7;3302:23;3298:32;3295:52;;;3343:1;3340;3333:12;3295:52;3366:29;3385:9;3366:29;:::i;:::-;3356:39;;3445:2;3434:9;3430:18;3417:32;3492:5;3485:13;3478:21;3471:5;3468:32;3458:60;;3514:1;3511;3504:12;3458:60;3537:5;3527:15;;;3201:347;;;;;:::o;3735:348::-;3787:8;3797:6;3851:3;3844:4;3836:6;3832:17;3828:27;3818:55;;3869:1;3866;3859:12;3818:55;-1:-1:-1;3892:20:44;;3935:18;3924:30;;3921:50;;;3967:1;3964;3957:12;3921:50;4004:4;3996:6;3992:17;3980:29;;4056:3;4049:4;4040:6;4032;4028:19;4024:30;4021:39;4018:59;;;4073:1;4070;4063:12;4018:59;3735:348;;;;;:::o;4088:479::-;4168:6;4176;4184;4237:2;4225:9;4216:7;4212:23;4208:32;4205:52;;;4253:1;4250;4243:12;4205:52;4289:9;4276:23;4266:33;;4350:2;4339:9;4335:18;4322:32;4377:18;4369:6;4366:30;4363:50;;;4409:1;4406;4399:12;4363:50;4448:59;4499:7;4490:6;4479:9;4475:22;4448:59;:::i;:::-;4088:479;;4526:8;;-1:-1:-1;4422:85:44;;-1:-1:-1;;;;4088:479:44:o;4572:186::-;4631:6;4684:2;4672:9;4663:7;4659:23;4655:32;4652:52;;;4700:1;4697;4690:12;4652:52;4723:29;4742:9;4723:29;:::i;4763:328::-;4840:6;4848;4856;4909:2;4897:9;4888:7;4884:23;4880:32;4877:52;;;4925:1;4922;4915:12;4877:52;4948:29;4967:9;4948:29;:::i;:::-;4938:39;;4996:38;5030:2;5019:9;5015:18;4996:38;:::i;:::-;4986:48;;5081:2;5070:9;5066:18;5053:32;5043:42;;4763:328;;;;;:::o;5096:248::-;5164:6;5172;5225:2;5213:9;5204:7;5200:23;5196:32;5193:52;;;5241:1;5238;5231:12;5193:52;-1:-1:-1;;5264:23:44;;;5334:2;5319:18;;;5306:32;;-1:-1:-1;5096:248:44:o;5852:864::-;5962:6;5970;5978;5986;5994;6002;6055:3;6043:9;6034:7;6030:23;6026:33;6023:53;;;6072:1;6069;6062:12;6023:53;6112:9;6099:23;6141:18;6182:2;6174:6;6171:14;6168:34;;;6198:1;6195;6188:12;6168:34;6237:59;6288:7;6279:6;6268:9;6264:22;6237:59;:::i;:::-;6315:8;;-1:-1:-1;6211:85:44;-1:-1:-1;6403:2:44;6388:18;;6375:32;;-1:-1:-1;6419:16:44;;;6416:36;;;6448:1;6445;6438:12;6416:36;;6487:61;6540:7;6529:8;6518:9;6514:24;6487:61;:::i;:::-;6567:8;;-1:-1:-1;6461:87:44;-1:-1:-1;6621:38:44;;-1:-1:-1;6655:2:44;6640:18;;6621:38;:::i;:::-;6611:48;;6706:2;6695:9;6691:18;6678:32;6668:42;;5852:864;;;;;;;;:::o;6721:127::-;6782:10;6777:3;6773:20;6770:1;6763:31;6813:4;6810:1;6803:15;6837:4;6834:1;6827:15;6853:342;6999:2;6984:18;;7032:1;7021:13;;7011:144;;7077:10;7072:3;7068:20;7065:1;7058:31;7112:4;7109:1;7102:15;7140:4;7137:1;7130:15;7011:144;7164:25;;;6853:342;:::o;7200:411::-;7271:6;7279;7332:2;7320:9;7311:7;7307:23;7303:32;7300:52;;;7348:1;7345;7338:12;7300:52;7388:9;7375:23;7421:18;7413:6;7410:30;7407:50;;;7453:1;7450;7443:12;7407:50;7492:59;7543:7;7534:6;7523:9;7519:22;7492:59;:::i;:::-;7570:8;;7466:85;;-1:-1:-1;7200:411:44;-1:-1:-1;;;;7200:411:44:o;7616:513::-;7803:2;7792:9;7785:21;7848:6;7842:13;7837:2;7826:9;7822:18;7815:41;7766:4;7903:2;7895:6;7891:15;7885:22;7943:4;7938:2;7927:9;7923:18;7916:32;7971:52;8018:3;8007:9;8003:19;7989:12;7971:52;:::i;:::-;7957:66;;8093:2;8085:6;8081:15;8075:22;8068:30;8061:38;8054:4;8043:9;8039:20;8032:68;8117:6;8109:14;;;7616:513;;;;:::o;8134:709::-;8243:6;8251;8259;8312:2;8300:9;8291:7;8287:23;8283:32;8280:52;;;8328:1;8325;8318:12;8280:52;8351:35;8376:9;8351:35;:::i;:::-;8341:45;;8437:2;8426:9;8422:18;8409:32;8460:18;8501:2;8493:6;8490:14;8487:34;;;8517:1;8514;8507:12;8487:34;8555:6;8544:9;8540:22;8530:32;;8600:7;8593:4;8589:2;8585:13;8581:27;8571:55;;8622:1;8619;8612:12;8571:55;8662:2;8649:16;8688:2;8680:6;8677:14;8674:34;;;8704:1;8701;8694:12;8674:34;8757:7;8752:2;8742:6;8739:1;8735:14;8731:2;8727:23;8723:32;8720:45;8717:65;;;8778:1;8775;8768:12;8717:65;8809:2;8805;8801:11;8791:21;;8831:6;8821:16;;;;;8134:709;;;;;:::o;8848:479::-;8928:6;8936;8944;8997:2;8985:9;8976:7;8972:23;8968:32;8965:52;;;9013:1;9010;9003:12;8965:52;9053:9;9040:23;9086:18;9078:6;9075:30;9072:50;;;9118:1;9115;9108:12;9072:50;9157:59;9208:7;9199:6;9188:9;9184:22;9157:59;:::i;:::-;9235:8;;9131:85;;-1:-1:-1;9317:2:44;9302:18;;;;9289:32;;8848:479;-1:-1:-1;;;;8848:479:44:o;9332:127::-;9393:10;9388:3;9384:20;9381:1;9374:31;9424:4;9421:1;9414:15;9448:4;9445:1;9438:15;9464:1138;9559:6;9567;9575;9583;9636:3;9624:9;9615:7;9611:23;9607:33;9604:53;;;9653:1;9650;9643:12;9604:53;9676:29;9695:9;9676:29;:::i;:::-;9666:39;;9724:38;9758:2;9747:9;9743:18;9724:38;:::i;:::-;9714:48;;9809:2;9798:9;9794:18;9781:32;9771:42;;9864:2;9853:9;9849:18;9836:32;9887:18;9928:2;9920:6;9917:14;9914:34;;;9944:1;9941;9934:12;9914:34;9982:6;9971:9;9967:22;9957:32;;10027:7;10020:4;10016:2;10012:13;10008:27;9998:55;;10049:1;10046;10039:12;9998:55;10085:2;10072:16;10107:2;10103;10100:10;10097:36;;;10113:18;;:::i;:::-;10188:2;10182:9;10156:2;10242:13;;-1:-1:-1;;10238:22:44;;;10262:2;10234:31;10230:40;10218:53;;;10286:18;;;10306:22;;;10283:46;10280:72;;;10332:18;;:::i;:::-;10372:10;10368:2;10361:22;10407:2;10399:6;10392:18;10447:7;10442:2;10437;10433;10429:11;10425:20;10422:33;10419:53;;;10468:1;10465;10458:12;10419:53;10524:2;10519;10515;10511:11;10506:2;10498:6;10494:15;10481:46;10569:1;10564:2;10559;10551:6;10547:15;10543:24;10536:35;10590:6;10580:16;;;;;;;9464:1138;;;;;;;:::o;10607:553::-;10696:6;10704;10712;10720;10773:2;10761:9;10752:7;10748:23;10744:32;10741:52;;;10789:1;10786;10779:12;10741:52;10829:9;10816:23;10862:18;10854:6;10851:30;10848:50;;;10894:1;10891;10884:12;10848:50;10933:59;10984:7;10975:6;10964:9;10960:22;10933:59;:::i;:::-;11011:8;;-1:-1:-1;10907:85:44;-1:-1:-1;;11093:2:44;11078:18;;11065:32;;-1:-1:-1;11116:38:44;11150:2;11135:18;;11116:38;:::i;:::-;11106:48;;10607:553;;;;;;;:::o;11165:260::-;11233:6;11241;11294:2;11282:9;11273:7;11269:23;11265:32;11262:52;;;11310:1;11307;11300:12;11262:52;11333:29;11352:9;11333:29;:::i;:::-;11323:39;;11381:38;11415:2;11404:9;11400:18;11381:38;:::i;11430:380::-;11509:1;11505:12;;;;11552;;;11573:61;;11627:4;11619:6;11615:17;11605:27;;11573:61;11680:2;11672:6;11669:14;11649:18;11646:38;11643:161;;11726:10;11721:3;11717:20;11714:1;11707:31;11761:4;11758:1;11751:15;11789:4;11786:1;11779:15;11643:161;;11430:380;;;:::o;12228:356::-;12430:2;12412:21;;;12449:18;;;12442:30;12508:34;12503:2;12488:18;;12481:62;12575:2;12560:18;;12228:356::o;12589:354::-;12791:2;12773:21;;;12830:2;12810:18;;;12803:30;12869:32;12864:2;12849:18;;12842:60;12934:2;12919:18;;12589:354::o;13477:545::-;13579:2;13574:3;13571:11;13568:448;;;13615:1;13640:5;13636:2;13629:17;13685:4;13681:2;13671:19;13755:2;13743:10;13739:19;13736:1;13732:27;13726:4;13722:38;13791:4;13779:10;13776:20;13773:47;;;-1:-1:-1;13814:4:44;13773:47;13869:2;13864:3;13860:12;13857:1;13853:20;13847:4;13843:31;13833:41;;13924:82;13942:2;13935:5;13932:13;13924:82;;;13987:17;;;13968:1;13957:13;13924:82;;;13928:3;;;13477:545;;;:::o;14198:1206::-;14322:18;14317:3;14314:27;14311:53;;;14344:18;;:::i;:::-;14373:94;14463:3;14423:38;14455:4;14449:11;14423:38;:::i;:::-;14417:4;14373:94;:::i;:::-;14493:1;14518:2;14513:3;14510:11;14535:1;14530:616;;;;15190:1;15207:3;15204:93;;;-1:-1:-1;15263:19:44;;;15250:33;15204:93;-1:-1:-1;;14155:1:44;14151:11;;;14147:24;14143:29;14133:40;14179:1;14175:11;;;14130:57;15310:78;;14503:895;;14530:616;13424:1;13417:14;;;13461:4;13448:18;;-1:-1:-1;;14566:17:44;;;14667:9;14689:229;14703:7;14700:1;14697:14;14689:229;;;14792:19;;;14779:33;14764:49;;14899:4;14884:20;;;;14852:1;14840:14;;;;14719:12;14689:229;;;14693:3;14946;14937:7;14934:16;14931:159;;;15070:1;15066:6;15060:3;15054;15051:1;15047:11;15043:21;15039:34;15035:39;15022:9;15017:3;15013:19;15000:33;14996:79;14988:6;14981:95;14931:159;;;15133:1;15127:3;15124:1;15120:11;15116:19;15110:4;15103:33;14503:895;;;14198:1206;;;:::o;15409:390::-;15568:2;15557:9;15550:21;15607:6;15602:2;15591:9;15587:18;15580:34;15664:6;15656;15651:2;15640:9;15636:18;15623:48;15720:1;15691:22;;;15715:2;15687:31;;;15680:42;;;;15783:2;15762:15;;;-1:-1:-1;;15758:29:44;15743:45;15739:54;;15409:390;-1:-1:-1;15409:390:44:o;15804:413::-;16006:2;15988:21;;;16045:2;16025:18;;;16018:30;16084:34;16079:2;16064:18;;16057:62;-1:-1:-1;;;16150:2:44;16135:18;;16128:47;16207:3;16192:19;;15804:413::o;16639:963::-;16748:4;16777:2;16806;16795:9;16788:21;16829:1;16862:6;16856:13;16892:36;16918:9;16892:36;:::i;:::-;16964:6;16959:2;16948:9;16944:18;16937:34;16990:2;17011:1;17043:2;17032:9;17028:18;17060:1;17055:158;;;;17227:1;17222:354;;;;17021:555;;17055:158;-1:-1:-1;;17103:24:44;;17083:18;;;17076:52;17181:14;;17174:22;17171:1;17167:30;17152:46;;17148:55;;;-1:-1:-1;17055:158:44;;17222:354;17253:6;17250:1;17243:17;17301:2;17298:1;17288:16;17326:1;17340:180;17354:6;17351:1;17348:13;17340:180;;;17447:14;;17423:17;;;17419:26;;17412:50;17490:16;;;;17369:10;;17340:180;;;17544:17;;17540:26;;;-1:-1:-1;;17021:555:44;-1:-1:-1;17593:3:44;;16639:963;-1:-1:-1;;;;;;;;16639:963:44:o;20164:1309::-;20542:3;20571:1;20604:6;20598:13;20634:36;20660:9;20634:36;:::i;:::-;20689:1;20706:18;;;20733:133;;;;20880:1;20875:356;;;;20699:532;;20733:133;-1:-1:-1;;20766:24:44;;20754:37;;20839:14;;20832:22;20820:35;;20811:45;;;-1:-1:-1;20733:133:44;;20875:356;20906:6;20903:1;20896:17;20936:4;20981:2;20978:1;20968:16;21006:1;21020:165;21034:6;21031:1;21028:13;21020:165;;;21112:14;;21099:11;;;21092:35;21155:16;;;;21049:10;;21020:165;;;21024:3;;;21214:6;21209:3;21205:16;21198:23;;20699:532;;-1:-1:-1;;;21247:3:44;21240:16;21287:6;21281:13;21265:29;;21303:64;21358:8;21353:2;21348:3;21344:12;21337:4;21329:6;21325:17;21303:64;:::i;:::-;-1:-1:-1;;;21386:18:44;;;;21420:11;;;21413:28;;;;21465:1;21457:10;;20164:1309;-1:-1:-1;;;;;20164:1309:44:o;23936:127::-;23997:10;23992:3;23988:20;23985:1;23978:31;24028:4;24025:1;24018:15;24052:4;24049:1;24042:15;24068:125;24108:4;24136:1;24133;24130:8;24127:34;;;24141:18;;:::i;:::-;-1:-1:-1;24178:9:44;;24068:125::o;24198:128::-;24238:3;24269:1;24265:6;24262:1;24259:13;24256:39;;;24275:18;;:::i;:::-;-1:-1:-1;24311:9:44;;24198:128::o;24331:168::-;24371:7;24437:1;24433;24429:6;24425:14;24422:1;24419:21;24414:1;24407:9;24400:17;24396:45;24393:71;;;24444:18;;:::i;:::-;-1:-1:-1;24484:9:44;;24331:168::o;24504:127::-;24565:10;24560:3;24556:20;24553:1;24546:31;24596:4;24593:1;24586:15;24620:4;24617:1;24610:15;24636:120;24676:1;24702;24692:35;;24707:18;;:::i;:::-;-1:-1:-1;24741:9:44;;24636:120::o;24761:410::-;24963:2;24945:21;;;25002:2;24982:18;;;24975:30;25041:34;25036:2;25021:18;;25014:62;-1:-1:-1;;;25107:2:44;25092:18;;25085:44;25161:3;25146:19;;24761:410::o;25176:407::-;25378:2;25360:21;;;25417:2;25397:18;;;25390:30;25456:34;25451:2;25436:18;;25429:62;-1:-1:-1;;;25522:2:44;25507:18;;25500:41;25573:3;25558:19;;25176:407::o;25949:127::-;26010:10;26005:3;26001:20;25998:1;25991:31;26041:4;26038:1;26031:15;26065:4;26062:1;26055:15;26081:135;26120:3;26141:17;;;26138:43;;26161:18;;:::i;:::-;-1:-1:-1;26208:1:44;26197:13;;26081:135::o;27000:1352::-;27126:3;27120:10;27153:18;27145:6;27142:30;27139:56;;;27175:18;;:::i;:::-;27204:97;27294:6;27254:38;27286:4;27280:11;27254:38;:::i;:::-;27248:4;27204:97;:::i;:::-;27356:4;;27420:2;27409:14;;27437:1;27432:663;;;;28139:1;28156:6;28153:89;;;-1:-1:-1;28208:19:44;;;28202:26;28153:89;-1:-1:-1;;14155:1:44;14151:11;;;14147:24;14143:29;14133:40;14179:1;14175:11;;;14130:57;28255:81;;27402:944;;27432:663;13424:1;13417:14;;;13461:4;13448:18;;-1:-1:-1;;27468:20:44;;;27586:236;27600:7;27597:1;27594:14;27586:236;;;27689:19;;;27683:26;27668:42;;27781:27;;;;27749:1;27737:14;;;;27616:19;;27586:236;;;27590:3;27850:6;27841:7;27838:19;27835:201;;;27911:19;;;27905:26;-1:-1:-1;;27994:1:44;27990:14;;;28006:3;27986:24;27982:37;27978:42;27963:58;27948:74;;27835:201;-1:-1:-1;;;;;28082:1:44;28066:14;;;28062:22;28049:36;;-1:-1:-1;27000:1352:44:o;28357:414::-;28559:2;28541:21;;;28598:2;28578:18;;;28571:30;28637:34;28632:2;28617:18;;28610:62;-1:-1:-1;;;28703:2:44;28688:18;;28681:48;28761:3;28746:19;;28357:414::o;28776:112::-;28808:1;28834;28824:35;;28839:18;;:::i;:::-;-1:-1:-1;28873:9:44;;28776:112::o;29247:489::-;-1:-1:-1;;;;;29516:15:44;;;29498:34;;29568:15;;29563:2;29548:18;;29541:43;29615:2;29600:18;;29593:34;;;29663:3;29658:2;29643:18;;29636:31;;;29441:4;;29684:46;;29710:19;;29702:6;29684:46;:::i;:::-;29676:54;29247:489;-1:-1:-1;;;;;;29247:489:44:o;29741:249::-;29810:6;29863:2;29851:9;29842:7;29838:23;29834:32;29831:52;;;29879:1;29876;29869:12;29831:52;29911:9;29905:16;29930:30;29954:5;29930:30;:::i;29995:127::-;30056:10;30051:3;30047:20;30044:1;30037:31;30087:4;30084:1;30077:15;30111:4;30108:1;30101:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchAddAddressToRoyaltyList(uint8,address[])": "ff6e8c8f",
    "batchRemoveAddressToRoyaltyList(uint8,address[])": "9e860f2a",
    "burn(uint256)": "42966c68",
    "clearList(uint8)": "bc719455",
    "deleteToken(uint256)": "6297c16c",
    "disableContract()": "894ba833",
    "disabled()": "ee070805",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyPercentage()": "ab69607a",
    "getDefaultRoyaltyReceiver()": "3403c4e9",
    "getInUseList()": "2ce878da",
    "getList(uint8)": "012cf1e8",
    "getListType()": "87bc793f",
    "getMintConfig()": "9338bb5d",
    "hasAdminPermission(address)": "20427486",
    "init(string,string,address,uint256)": "5edc7c19",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedMinter(address)": "3a3d146f",
    "isOperatorInList(address)": "eab85118",
    "lockBaseURI()": "53df5c7c",
    "maxTokens()": "e8315742",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "prepareMint(string,uint256)": "b390ac25",
    "prepareMintWithMinter(string,uint256,address)": "b9fbd25c",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDefaultRoyaltyReceiver(address)": "3ebc82c5",
    "setMinterApproval(address,bool)": "0de54ba0",
    "setRoyaltyReceiverForToken(address,uint256)": "efc32cd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "toggleListType(uint8)": "472a6638",
    "tokenCreator(uint256)": "40c1a064",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateBaseURI(string)": "931688cb",
    "updateTokenURI(uint256,string)": "18e97fd1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CantAddToOFFList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addedAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_ListType\",\"type\":\"uint8\"}],\"name\":\"AddressAddedToList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_removedAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_ListType\",\"type\":\"uint8\"}],\"name\":\"AddressRemovedList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"ListCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_oldListType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_newListType\",\"type\":\"uint8\"}],\"name\":\"ListTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"PrepareMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"}],\"name\":\"TokenURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"batchAddAddressToRoyaltyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"batchRemoveAddressToRoyaltyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"clearList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInUseList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"getList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListType\",\"outputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockedMetadata\",\"type\":\"bool\"}],\"internalType\":\"struct LazySovereignNFT.MintConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"hasAdminPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isOperatorInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"prepareMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"prepareMintWithMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setDefaultRoyaltyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isMinter\",\"type\":\"bool\"}],\"name\":\"setMinterApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyReceiverForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_newListType\",\"type\":\"uint8\"}],\"name\":\"toggleListType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadataUri\",\"type\":\"string\"}],\"name\":\"updateTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Guards {approve} based on the type of list and depending if {_spender} is on the list.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchAddAddressToRoyaltyList(uint8,address[])\":{\"details\":\"Only the contract owner can call this function.Cannot add to the OFF list\",\"params\":{\"_addrs\":\"being added to the designated list\",\"_listType\":\"that addresses are being added to\"}},\"batchRemoveAddressToRoyaltyList(uint8,address[])\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_addrs\":\"being removed from the designated list\",\"_listType\":\"that addresses are being removed from\"}},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"clearList(uint8)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_listType\":\"of list being cleared.\"}},\"deleteToken(uint256)\":{\"details\":\"Delete a token with the given ID.\",\"params\":{\"_tokenId\":\"The ID of the token to delete.\"}},\"disableContract()\":{\"details\":\"Disable the contract, preventing further minting.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getInUseList()\":{\"returns\":{\"_0\":\"list of addresses on a given list.\"}},\"getList(uint8)\":{\"params\":{\"_listType\":\"of list being retrieved.\"},\"returns\":{\"_0\":\"list of addresses on a given list.\"}},\"getListType()\":{\"returns\":{\"_0\":\"ListType of the list. Values are: 0 (OFF), 1 (ALLOW), 2 (DENY)\"}},\"getMintConfig()\":{\"details\":\"Get the current minting configuration.\",\"returns\":{\"_0\":\"mintConfig the mint config.\"}},\"hasAdminPermission(address)\":{\"details\":\"used in the {onlyAdmin} modifier\",\"returns\":{\"_0\":\"bool denoting if _addr has admin permission.\"}},\"init(string,string,address,uint256)\":{\"details\":\"Contract initialization function.\",\"params\":{\"_creator\":\"The address of the contract creator.\",\"_maxTokens\":\"The maximum number of tokens that can be minted.\",\"_name\":\"The name of the NFT contract.\",\"_symbol\":\"The symbol of the NFT contract.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedMinter(address)\":{\"details\":\"Checks if the supplied address is approved for minting\",\"params\":{\"_address\":\"The address of the minter.\"},\"returns\":{\"_0\":\"bool, whether the address is approved for minting.\"}},\"isOperatorInList(address)\":{\"params\":{\"_operator\":\"address being checked.\"},\"returns\":{\"_0\":\"bool relating to if the operator is on the list.\"}},\"lockBaseURI()\":{\"details\":\"Lock the metadata to prevent  further updates.\"},\"mintTo(address)\":{\"details\":\"Mint a new token to the specified receiver.\",\"params\":{\"_receiver\":\"The address of the token receiver.\"},\"returns\":{\"_0\":\"uint256 Token Id of the new token.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"prepareMint(string,uint256)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"prepareMintWithMinter(string,uint256,address)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_minter\":\"The address of the minter.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list.\"},\"setDefaultRoyaltyReceiver(address)\":{\"details\":\"Set the default royalty receiver address.\",\"params\":{\"_receiver\":\"The address of the default royalty receiver.\"}},\"setMinterApproval(address,bool)\":{\"details\":\"Set a minter for the contract\",\"params\":{\"_isMinter\":\"bool of whether the address is a minter.\",\"_minter\":\"address of the minter.\"}},\"setRoyaltyReceiverForToken(address,uint256)\":{\"details\":\"Set a specific royalty receiver address for a token.\",\"params\":{\"_receiver\":\"The address of the royalty receiver.\",\"_tokenId\":\"The ID of the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"toggleListType(uint8)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_newListType\":\"to be applied to the list. Options are 0 (OFF), 1 (ALLOW), 2 (DENY)\"}},\"tokenCreator(uint256)\":{\"details\":\"Get the address of the token creator for a given token ID.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"address of the token creator.\"}},\"tokenURI(uint256)\":{\"details\":\"Get the token URI for a specific token. If a token has a set URI, it will return that, otherwise it will return the token URI computed from the base URI.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token's URI.\"}},\"totalSupply()\":{\"details\":\"Get the total supply of tokens in existence.\",\"returns\":{\"_0\":\"The total supply of tokens.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseURI(string)\":{\"details\":\"Update the base URI.\",\"params\":{\"_baseURI\":\"The new base URI.\"}},\"updateTokenURI(uint256,string)\":{\"details\":\"Update the token metadata URI.\",\"params\":{\"_metadataUri\":\"The new metadata URI.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CantAddToOFFList()\":[{\"notice\":\"Emitted when trying to add an address to a list with type OFF.\"}],\"MustBeAdmin()\":[{\"notice\":\"Emitted when an admin only function tries to be called by a non-admin.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when an unauthorized party tries to call a specific function.\"}]},\"events\":{\"AddressAddedToList(address,address,uint8)\":{\"notice\":\"Emitted when an address is added to a list.\"},\"AddressRemovedList(address,address,uint8)\":{\"notice\":\"Emitted when an address is removed from a list.\"},\"ListCleared(address,uint8)\":{\"notice\":\"Emitted when a list is cleared.\"},\"ListTypeUpdated(address,uint8,uint8)\":{\"notice\":\"Emitted when the list type is updated.\"}},\"kind\":\"user\",\"methods\":{\"batchAddAddressToRoyaltyList(uint8,address[])\":{\"notice\":\"Adds a list of addresses to the specified list.\"},\"batchRemoveAddressToRoyaltyList(uint8,address[])\":{\"notice\":\"Removes a list of addresses to the specified list.\"},\"clearList(uint8)\":{\"notice\":\"Clears an entire list.\"},\"getInUseList()\":{\"notice\":\"Returns the set of addresses on a list.\"},\"getList(uint8)\":{\"notice\":\"Returns the set of addresses on a list.\"},\"getListType()\":{\"notice\":\"Returns the ListType currently being used;\"},\"hasAdminPermission(address)\":{\"notice\":\"States whether or not an address has admin permission.\"},\"isOperatorInList(address)\":{\"notice\":\"Returns if the supplied operator address in part of the current in use list.\"},\"toggleListType(uint8)\":{\"notice\":\"Toggles the list type between ALLOW, DENY, or OFF\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuard.sol\":\"LazySovereignNFTRoyaltyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aux/=lib/aux/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":solmate/=lib/royalty-guard/lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad\",\"dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740\",\"dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d\",\"dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c\",\"dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579\",\"dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78\",\"dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5\",\"dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]},\"lib/royalty-guard/src/royalty-guard/IRoyaltyGuard.sol\":{\"keccak256\":\"0x1fd7933ef0875db5bb8f32053e6ca36ab5544268c69cb04de9575609052a3fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e70aba58a73da37b33e8c7f6e04cbf957530afd3f463d4010e2a671773f5d82\",\"dweb:/ipfs/QmVitut8wbt64G3vpg4SmtbkPYGyqYCoBAFBqfv2KybE11\"]},\"lib/royalty-guard/src/royalty-guard/RoyaltyGuard.sol\":{\"keccak256\":\"0xe06d80490ce50e16b7e631d6183cb3dac8b25482748814f394590f0de3c2e4a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d07b9e7985fd8a09150c8e69178bfb05eb5e86d90fd3d91f17f1a57289e805f\",\"dweb:/ipfs/QmczFpxjLYsaWndsDj2NFLa4cfoCYi3g8jHMVNfUCzN9xF\"]},\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":{\"keccak256\":\"0x0e26cc39d2b9045ae517ae9d7768b2d19b6aa671d0bcb63c9bfd7a1441393d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://110ba8840b852c2299a73d43e335be49e27aa9c81263fdcca72b2ffa9722ad5e\",\"dweb:/ipfs/QmaTcaPuDsjuouw8ZrqWw2i6Ui87wtEJQKeHoEXUop4id9\"]},\"src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuard.sol\":{\"keccak256\":\"0x16f6e92c4bb69769c06fb0e5a13a74f735cdee23f8a6e4082244685022694ea7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7512c6d328a4a73a22e8d051d25dbfba01f3af7b0284dd3b161a0e19fcf201df\",\"dweb:/ipfs/QmSSk5mnspvQEX9YpRFQVLzcYEjEVbUnGzGEY7mwjAn1xR\"]},\"src/token/extensions/ERC2981Upgradeable.sol\":{\"keccak256\":\"0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465\",\"dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA\"]},\"src/token/extensions/IERC2981.sol\":{\"keccak256\":\"0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b\",\"dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w\"]},\"src/token/extensions/ITokenCreator.sol\":{\"keccak256\":\"0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42\",\"dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CantAddToOFFList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustBeAdmin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_addedAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_ListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressAddedToList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_removedAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_ListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressRemovedList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ContractDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ListCleared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_oldListType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_newListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ListTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PrepareMint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            },
            {
              "internalType": "address[]",
              "name": "_addrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchAddAddressToRoyaltyList"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            },
            {
              "internalType": "address[]",
              "name": "_addrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRemoveAddressToRoyaltyList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "disabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInUseList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getListType",
          "outputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMintConfig",
          "outputs": [
            {
              "internalType": "struct LazySovereignNFT.MintConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numberOfTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseURI",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "lockedMetadata",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasAdminPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockBaseURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMint"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMintWithMinter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isMinter",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinterApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyReceiverForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_newListType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggleListType"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenCreator",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_metadataUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokenURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Guards {approve} based on the type of list and depending if {_spender} is on the list."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "batchAddAddressToRoyaltyList(uint8,address[])": {
            "details": "Only the contract owner can call this function.Cannot add to the OFF list",
            "params": {
              "_addrs": "being added to the designated list",
              "_listType": "that addresses are being added to"
            }
          },
          "batchRemoveAddressToRoyaltyList(uint8,address[])": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_addrs": "being removed from the designated list",
              "_listType": "that addresses are being removed from"
            }
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
          },
          "clearList(uint8)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_listType": "of list being cleared."
            }
          },
          "deleteToken(uint256)": {
            "details": "Delete a token with the given ID.",
            "params": {
              "_tokenId": "The ID of the token to delete."
            }
          },
          "disableContract()": {
            "details": "Disable the contract, preventing further minting."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getInUseList()": {
            "returns": {
              "_0": "list of addresses on a given list."
            }
          },
          "getList(uint8)": {
            "params": {
              "_listType": "of list being retrieved."
            },
            "returns": {
              "_0": "list of addresses on a given list."
            }
          },
          "getListType()": {
            "returns": {
              "_0": "ListType of the list. Values are: 0 (OFF), 1 (ALLOW), 2 (DENY)"
            }
          },
          "getMintConfig()": {
            "details": "Get the current minting configuration.",
            "returns": {
              "_0": "mintConfig the mint config."
            }
          },
          "hasAdminPermission(address)": {
            "details": "used in the {onlyAdmin} modifier",
            "returns": {
              "_0": "bool denoting if _addr has admin permission."
            }
          },
          "init(string,string,address,uint256)": {
            "details": "Contract initialization function.",
            "params": {
              "_creator": "The address of the contract creator.",
              "_maxTokens": "The maximum number of tokens that can be minted.",
              "_name": "The name of the NFT contract.",
              "_symbol": "The symbol of the NFT contract."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedMinter(address)": {
            "details": "Checks if the supplied address is approved for minting",
            "params": {
              "_address": "The address of the minter."
            },
            "returns": {
              "_0": "bool, whether the address is approved for minting."
            }
          },
          "isOperatorInList(address)": {
            "params": {
              "_operator": "address being checked."
            },
            "returns": {
              "_0": "bool relating to if the operator is on the list."
            }
          },
          "lockBaseURI()": {
            "details": "Lock the metadata to prevent  further updates."
          },
          "mintTo(address)": {
            "details": "Mint a new token to the specified receiver.",
            "params": {
              "_receiver": "The address of the token receiver."
            },
            "returns": {
              "_0": "uint256 Token Id of the new token."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "prepareMint(string,uint256)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "prepareMintWithMinter(string,uint256,address)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_minter": "The address of the minter.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "_salePrice": "- the sale price of the NFT asset specified by _tokenId",
              "_tokenId": "- the NFT asset queried for royalty information"
            },
            "returns": {
              "receiver": "- address of who should be sent the royalty payment",
              "royaltyAmount": "- the royalty payment amount for _salePrice"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list."
          },
          "setDefaultRoyaltyReceiver(address)": {
            "details": "Set the default royalty receiver address.",
            "params": {
              "_receiver": "The address of the default royalty receiver."
            }
          },
          "setMinterApproval(address,bool)": {
            "details": "Set a minter for the contract",
            "params": {
              "_isMinter": "bool of whether the address is a minter.",
              "_minter": "address of the minter."
            }
          },
          "setRoyaltyReceiverForToken(address,uint256)": {
            "details": "Set a specific royalty receiver address for a token.",
            "params": {
              "_receiver": "The address of the royalty receiver.",
              "_tokenId": "The ID of the token."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "toggleListType(uint8)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_newListType": "to be applied to the list. Options are 0 (OFF), 1 (ALLOW), 2 (DENY)"
            }
          },
          "tokenCreator(uint256)": {
            "details": "Get the address of the token creator for a given token ID.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "address of the token creator."
            }
          },
          "tokenURI(uint256)": {
            "details": "Get the token URI for a specific token. If a token has a set URI, it will return that, otherwise it will return the token URI computed from the base URI.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token's URI."
            }
          },
          "totalSupply()": {
            "details": "Get the total supply of tokens in existence.",
            "returns": {
              "_0": "The total supply of tokens."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateBaseURI(string)": {
            "details": "Update the base URI.",
            "params": {
              "_baseURI": "The new base URI."
            }
          },
          "updateTokenURI(uint256,string)": {
            "details": "Update the token metadata URI.",
            "params": {
              "_metadataUri": "The new metadata URI."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchAddAddressToRoyaltyList(uint8,address[])": {
            "notice": "Adds a list of addresses to the specified list."
          },
          "batchRemoveAddressToRoyaltyList(uint8,address[])": {
            "notice": "Removes a list of addresses to the specified list."
          },
          "clearList(uint8)": {
            "notice": "Clears an entire list."
          },
          "getInUseList()": {
            "notice": "Returns the set of addresses on a list."
          },
          "getList(uint8)": {
            "notice": "Returns the set of addresses on a list."
          },
          "getListType()": {
            "notice": "Returns the ListType currently being used;"
          },
          "hasAdminPermission(address)": {
            "notice": "States whether or not an address has admin permission."
          },
          "isOperatorInList(address)": {
            "notice": "Returns if the supplied operator address in part of the current in use list."
          },
          "toggleListType(uint8)": {
            "notice": "Toggles the list type between ALLOW, DENY, or OFF"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "aux/=lib/aux/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/",
        "rareprotocol/aux/=lib/aux/src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "solmate/=lib/royalty-guard/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuard.sol": "LazySovereignNFTRoyaltyGuard"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e",
        "urls": [
          "bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad",
          "dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9",
        "urls": [
          "bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740",
          "dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a",
        "urls": [
          "bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d",
          "dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921",
        "urls": [
          "bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c",
          "dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol": {
        "keccak256": "0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d",
        "urls": [
          "bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579",
          "dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37",
        "urls": [
          "bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78",
          "dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol": {
        "keccak256": "0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512",
        "urls": [
          "bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5",
          "dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723",
        "urls": [
          "bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d",
          "dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/IRoyaltyGuard.sol": {
        "keccak256": "0x1fd7933ef0875db5bb8f32053e6ca36ab5544268c69cb04de9575609052a3fde",
        "urls": [
          "bzz-raw://4e70aba58a73da37b33e8c7f6e04cbf957530afd3f463d4010e2a671773f5d82",
          "dweb:/ipfs/QmVitut8wbt64G3vpg4SmtbkPYGyqYCoBAFBqfv2KybE11"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/RoyaltyGuard.sol": {
        "keccak256": "0xe06d80490ce50e16b7e631d6183cb3dac8b25482748814f394590f0de3c2e4a5",
        "urls": [
          "bzz-raw://6d07b9e7985fd8a09150c8e69178bfb05eb5e86d90fd3d91f17f1a57289e805f",
          "dweb:/ipfs/QmczFpxjLYsaWndsDj2NFLa4cfoCYi3g8jHMVNfUCzN9xF"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": {
        "keccak256": "0x0e26cc39d2b9045ae517ae9d7768b2d19b6aa671d0bcb63c9bfd7a1441393d47",
        "urls": [
          "bzz-raw://110ba8840b852c2299a73d43e335be49e27aa9c81263fdcca72b2ffa9722ad5e",
          "dweb:/ipfs/QmaTcaPuDsjuouw8ZrqWw2i6Ui87wtEJQKeHoEXUop4id9"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuard.sol": {
        "keccak256": "0x16f6e92c4bb69769c06fb0e5a13a74f735cdee23f8a6e4082244685022694ea7",
        "urls": [
          "bzz-raw://7512c6d328a4a73a22e8d051d25dbfba01f3af7b0284dd3b161a0e19fcf201df",
          "dweb:/ipfs/QmSSk5mnspvQEX9YpRFQVLzcYEjEVbUnGzGEY7mwjAn1xR"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ERC2981Upgradeable.sol": {
        "keccak256": "0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d",
        "urls": [
          "bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465",
          "dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA"
        ],
        "license": "MIT"
      },
      "src/token/extensions/IERC2981.sol": {
        "keccak256": "0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd",
        "urls": [
          "bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b",
          "dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ITokenCreator.sol": {
        "keccak256": "0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6",
        "urls": [
          "bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42",
          "dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuard.sol",
    "id": 28862,
    "exportedSymbols": {
      "AddressUpgradeable": [
        25717
      ],
      "ContextUpgradeable": [
        25759
      ],
      "CountersUpgradeable": [
        25833
      ],
      "ERC165": [
        26635
      ],
      "ERC165Upgradeable": [
        26080
      ],
      "ERC2981Upgradeable": [
        29123
      ],
      "ERC721BurnableUpgradeable": [
        25447
      ],
      "ERC721Upgradeable": [
        25263
      ],
      "EnumerableSet": [
        27246
      ],
      "IERC165Upgradeable": [
        26092
      ],
      "IERC2981": [
        29139
      ],
      "IERC721MetadataUpgradeable": [
        25474
      ],
      "IERC721ReceiverUpgradeable": [
        25281
      ],
      "IERC721Upgradeable": [
        25397
      ],
      "IRoyaltyGuard": [
        27376
      ],
      "ITokenCreator": [
        29149
      ],
      "Initializable": [
        24372
      ],
      "LazySovereignNFT": [
        28506
      ],
      "LazySovereignNFTRoyaltyGuard": [
        28861
      ],
      "OwnableUpgradeable": [
        24230
      ],
      "RoyaltyGuard": [
        27732
      ],
      "SafeMathUpgradeable": [
        26404
      ],
      "StringsUpgradeable": [
        26036
      ]
    },
    "nodeType": "SourceUnit",
    "src": "85:1762:39",
    "nodes": [
      {
        "id": 28777,
        "nodeType": "PragmaDirective",
        "src": "85:23:39",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28778,
        "nodeType": "ImportDirective",
        "src": "110:40:39",
        "nodes": [],
        "absolutePath": "lib/royalty-guard/src/royalty-guard/RoyaltyGuard.sol",
        "file": "royalty-guard/RoyaltyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28862,
        "sourceUnit": 27733,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28779,
        "nodeType": "ImportDirective",
        "src": "152:33:39",
        "nodes": [],
        "absolutePath": "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol",
        "file": "../LazySovereignNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28862,
        "sourceUnit": 28507,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28861,
        "nodeType": "ContractDefinition",
        "src": "187:1659:39",
        "nodes": [
          {
            "id": 28805,
            "nodeType": "FunctionDefinition",
            "src": "515:312:39",
            "nodes": [],
            "body": {
              "id": 28804,
              "nodeType": "Block",
              "src": "683:144:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 28796,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28786,
                          "src": "743:12:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 28794,
                          "name": "RoyaltyGuard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27732,
                          "src": "712:12:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RoyaltyGuard_$27732_$",
                            "typeString": "type(contract RoyaltyGuard)"
                          }
                        },
                        "id": 28795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27639,
                        "src": "712:30:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 28797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "712:44:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 28800,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28786,
                          "src": "807:12:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 28798,
                          "name": "LazySovereignNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28506,
                          "src": "772:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LazySovereignNFT_$28506_$",
                            "typeString": "type(contract LazySovereignNFT)"
                          }
                        },
                        "id": 28799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28419,
                        "src": "772:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 28801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "772:48:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "712:108:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28793,
                  "id": 28803,
                  "nodeType": "Return",
                  "src": "693:127:39"
                }
              ]
            },
            "baseFunctions": [
              27639,
              28419
            ],
            "documentation": {
              "id": 28784,
              "nodeType": "StructuredDocumentation",
              "src": "469:41:39",
              "text": "@dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "524:17:39",
            "overrides": {
              "id": 28790,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 28788,
                  "name": "LazySovereignNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28506,
                  "src": "624:16:39"
                },
                {
                  "id": 28789,
                  "name": "RoyaltyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27732,
                  "src": "642:12:39"
                }
              ],
              "src": "615:40:39"
            },
            "parameters": {
              "id": 28787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28786,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "549:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28805,
                  "src": "542:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 28785,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "541:21:39"
            },
            "returnParameters": {
              "id": 28793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28792,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28805,
                  "src": "673:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "672:6:39"
            },
            "scope": 28861,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28820,
            "nodeType": "FunctionDefinition",
            "src": "1072:171:39",
            "nodes": [],
            "body": {
              "id": 28819,
              "nodeType": "Block",
              "src": "1203:40:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28814,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28808,
                      "src": "1220:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28815,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24153,
                        "src": "1229:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 28816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1229:7:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1220:16:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28813,
                  "id": 28818,
                  "nodeType": "Return",
                  "src": "1213:23:39"
                }
              ]
            },
            "baseFunctions": [
              27617
            ],
            "documentation": {
              "id": 28806,
              "nodeType": "StructuredDocumentation",
              "src": "1039:28:39",
              "text": "@inheritdoc RoyaltyGuard"
            },
            "functionSelector": "20427486",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasAdminPermission",
            "nameLocation": "1081:18:39",
            "overrides": {
              "id": 28810,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1167:8:39"
            },
            "parameters": {
              "id": 28809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28808,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1108:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28820,
                  "src": "1100:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:15:39"
            },
            "returnParameters": {
              "id": 28813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28820,
                  "src": "1193:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28811,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1192:6:39"
            },
            "scope": 28861,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28840,
            "nodeType": "FunctionDefinition",
            "src": "1349:173:39",
            "nodes": [],
            "body": {
              "id": 28839,
              "nodeType": "Block",
              "src": "1477:45:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28835,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28823,
                        "src": "1501:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28836,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28825,
                        "src": "1511:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28832,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1487:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFTRoyaltyGuard_$28861_$",
                          "typeString": "type(contract super LazySovereignNFTRoyaltyGuard)"
                        }
                      },
                      "id": 28834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24652,
                      "src": "1487:13:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:28:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28838,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:28:39"
                }
              ]
            },
            "baseFunctions": [
              24652
            ],
            "documentation": {
              "id": 28821,
              "nodeType": "StructuredDocumentation",
              "src": "1249:95:39",
              "text": "@dev Guards {approve} based on the type of list and depending if {_spender} is on the list."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28829,
                    "name": "_spender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28823,
                    "src": "1463:8:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 28830,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28828,
                  "name": "checkList",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27452,
                  "src": "1453:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1453:19:39"
              }
            ],
            "name": "approve",
            "nameLocation": "1358:7:39",
            "overrides": {
              "id": 28827,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1436:8:39"
            },
            "parameters": {
              "id": 28826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28823,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "1374:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28840,
                  "src": "1366:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28825,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1392:3:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28840,
                  "src": "1384:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:31:39"
            },
            "returnParameters": {
              "id": 28831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1477:0:39"
            },
            "scope": 28861,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28860,
            "nodeType": "FunctionDefinition",
            "src": "1639:205:39",
            "nodes": [],
            "body": {
              "id": 28859,
              "nodeType": "Block",
              "src": "1782:62:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28855,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28843,
                        "src": "1816:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28856,
                        "name": "_approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28845,
                        "src": "1827:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 28852,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1792:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFTRoyaltyGuard_$28861_$",
                          "typeString": "type(contract super LazySovereignNFTRoyaltyGuard)"
                        }
                      },
                      "id": 28854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24690,
                      "src": "1792:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 28857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:45:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28858,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:45:39"
                }
              ]
            },
            "baseFunctions": [
              24690
            ],
            "documentation": {
              "id": 28841,
              "nodeType": "StructuredDocumentation",
              "src": "1528:106:39",
              "text": "@dev Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28849,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28843,
                    "src": "1767:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 28850,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28848,
                  "name": "checkList",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27452,
                  "src": "1757:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1757:20:39"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "1648:17:39",
            "overrides": {
              "id": 28847,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1740:8:39"
            },
            "parameters": {
              "id": 28846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28843,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1674:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28860,
                  "src": "1666:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28845,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1690:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28860,
                  "src": "1685:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28844,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1665:35:39"
            },
            "returnParameters": {
              "id": 28851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1782:0:39"
            },
            "scope": 28861,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28780,
              "name": "LazySovereignNFT",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28506,
              "src": "228:16:39"
            },
            "id": 28781,
            "nodeType": "InheritanceSpecifier",
            "src": "228:16:39"
          },
          {
            "baseName": {
              "id": 28782,
              "name": "RoyaltyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27732,
              "src": "246:12:39"
            },
            "id": 28783,
            "nodeType": "InheritanceSpecifier",
            "src": "246:12:39"
          }
        ],
        "canonicalName": "LazySovereignNFTRoyaltyGuard",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28861,
          27732,
          26635,
          26647,
          27376,
          28506,
          29123,
          25447,
          29149,
          25263,
          25474,
          25397,
          26080,
          26092,
          24230,
          25759,
          24372,
          29139
        ],
        "name": "LazySovereignNFTRoyaltyGuard",
        "nameLocation": "196:28:39",
        "scope": 28862,
        "usedErrors": [
          27295,
          27298,
          27301
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 39
}