{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "ContractDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "PrepareMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "deleteToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "lockedMetadata",
              "type": "bool"
            }
          ],
          "internalType": "struct LazySovereignNFT.MintConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isApprovedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "prepareMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "prepareMintWithMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "setDefaultRoyaltyReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isMinter",
          "type": "bool"
        }
      ],
      "name": "setMinterApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyReceiverForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenCreator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612b21806100206000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c806370a0823111610130578063ab69607a116100b8578063e83157421161007c578063e8315742146104c0578063e985e9c5146104ca578063ee07080514610506578063efc32cd414610512578063f2fde38b1461052557600080fd5b8063ab69607a1461046c578063b390ac2514610474578063b88d4fde14610487578063b9fbd25c1461049a578063c87b56dd146104ad57600080fd5b80638da5cb5b116100ff5780638da5cb5b14610418578063931688cb146104295780639338bb5d1461043c57806395d89b4114610451578063a22cb4651461045957600080fd5b806370a08231146103e2578063715018a6146103f5578063755edd17146103fd578063894ba8331461041057600080fd5b80633a3d146f116101b357806342966c681161018257806342966c681461038e57806353df5c7c146103a15780635edc7c19146103a95780636297c16c146103bc5780636352211e146103cf57600080fd5b80633a3d146f146103285780633ebc82c51461035557806340c1a0641461036857806342842e0e1461037b57600080fd5b80630de54ba0116101fa5780630de54ba0146102a957806318160ddd146102bc57806323b872dd146102d25780632a55205a146102e55780633403c4e91461031757600080fd5b806301ffc9a71461022c57806306fdde0314610254578063081812fc14610269578063095ea7b314610294575b600080fd5b61023f61023a366004612001565b610538565b60405190151581526020015b60405180910390f35b61025c610581565b60405161024b9190612076565b61027c610277366004612089565b610613565b6040516001600160a01b03909116815260200161024b565b6102a76102a23660046120b9565b6106ad565b005b6102a76102b73660046120e3565b6107c2565b6102c461083a565b60405190815260200161024b565b6102a76102e036600461211f565b61084b565b6102f86102f336600461215b565b61087d565b604080516001600160a01b03909316835260208301919091520161024b565b60fb546001600160a01b031661027c565b61023f61033636600461217d565b6001600160a01b03166000908152610102602052604090205460ff1690565b6102a761036336600461217d565b610918565b61027c610376366004612089565b61094e565b6102a761038936600461211f565b610962565b6102a761039c366004612089565b61097d565b6102a76109f4565b6102a76103b73660046121e1565b610a68565b6102a76103ca366004612089565b610be8565b61027c6103dd366004612089565b610c51565b6102c46103f036600461217d565b610cc8565b6102a7610d4e565b6102c461040b36600461217d565b610d84565b6102a7610e5a565b6033546001600160a01b031661027c565b6102a761043736600461226a565b610ebe565b610444610f92565b60405161024b91906122ac565b61025c611076565b6102a76104673660046120e3565b611085565b60fc546102c4565b6102a76104823660046122ea565b611094565b6102a761049536600461234c565b6110eb565b6102a76104a8366004612428565b611123565b61025c6104bb366004612089565b6111a2565b6102c46101005481565b61023f6104d8366004612485565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b60ff805461023f911681565b6102a76105203660046120b9565b6111d7565b6102a761053336600461217d565b61122f565b60006001600160e01b03198216631030681960e21b148061055d575061055d826112c7565b8061056c575061056c826112dd565b8061057b575061057b826112fe565b92915050565b606060978054610590906124af565b80601f01602080910402602001604051908101604052809291908181526020018280546105bc906124af565b80156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166106915760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b60006106b882610c51565b9050806001600160a01b0316836001600160a01b0316036107255760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610688565b336001600160a01b0382161480610741575061074181336104d8565b6107b35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610688565b6107bd838361133e565b505050565b6033546001600160a01b031633146107ec5760405162461bcd60e51b8152600401610688906124e9565b60ff8054161561080e5760405162461bcd60e51b81526004016106889061251e565b6001600160a01b0391909116600090815261010260205260409020805460ff1916911515919091179055565b60006108466101035490565b905090565b610856335b826113ac565b6108725760405162461bcd60e51b815260040161068890612555565b6107bd8383836114a3565b600082815260fd602052604081205481906001600160a01b03166108ac5760fb546001600160a01b03166108c5565b600084815260fd60205260409020546001600160a01b03165b915061090f606461090960fe6000888152602001908152602001600020546000036108f25760fc54610902565b600087815260fe60205260409020545b869061163f565b90611652565b90509250929050565b6033546001600160a01b031633146109425760405162461bcd60e51b8152600401610688906124e9565b61094b8161165e565b50565b600061057b6033546001600160a01b031690565b6107bd838383604051806020016040528060008152506110eb565b61098633610850565b6109eb5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610688565b61094b81611680565b6033546001600160a01b03163314610a1e5760405162461bcd60e51b8152600401610688906124e9565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e90610a5090610105906125a6565b60405180910390a1610106805460ff19166001179055565b6000610a74600161171b565b90508015610a8c576000805461ff0019166101001790555b6001600160a01b038316610ae25760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c206164647265737300006044820152606401610688565b610aec600a60fc55565b60ff805460ff19169055610100829055610b046117a3565b610b7787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284376000920191909152506117d292505050565b610b7f611803565b610b8761182a565b610b908361165e565b610b998361122f565b8015610bdf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610bf282610c51565b6001600160a01b031614610c485760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e006044820152606401610688565b61094b8161097d565b6000818152609960205260408120546001600160a01b03168061057b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610688565b60006001600160a01b038216610d325760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610688565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610d785760405162461bcd60e51b8152600401610688906124e9565b610d826000611859565b565b60ff80546000911615610da95760405162461bcd60e51b81526004016106889061251e565b6033546001600160a01b0316331480610dd25750336000908152610102602052604090205460ff165b610e375760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b6064820152608401610688565b61057b82610e4460fc5490565b60fb546001600160a01b03166118ab565b919050565b6033546001600160a01b03163314610e845760405162461bcd60e51b8152600401610688906124e9565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b03163314610ee85760405162461bcd60e51b8152600401610688906124e9565b6101065460ff1615610f465760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b6064820152608401610688565b610105610f5482848361267f565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e8282604051610f86929190612740565b60405180910390a15050565b610fb8604051806060016040528060008152602001606081526020016000151581525090565b6040805160608101909152610104805482526101058054602084019190610fde906124af565b80601f016020809104026020016040519081016040528092919081815260200182805461100a906124af565b80156110575780601f1061102c57610100808354040283529160200191611057565b820191906000526020600020905b81548152906001019060200180831161103a57829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b606060988054610590906124af565b611090338383611967565b5050565b6033546001600160a01b031633146110be5760405162461bcd60e51b8152600401610688906124e9565b60ff805416156110e05760405162461bcd60e51b81526004016106889061251e565b6107bd838383611a35565b6110f533836113ac565b6111115760405162461bcd60e51b815260040161068890612555565b61111d84848484611bb7565b50505050565b6033546001600160a01b0316331461114d5760405162461bcd60e51b8152600401610688906124e9565b60ff8054161561116f5760405162461bcd60e51b81526004016106889061251e565b61117a848484611a35565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b60606101056111b083611bea565b6040516020016111c192919061276f565b6040516020818303038152906040529050919050565b6033546001600160a01b031633146112015760405162461bcd60e51b8152600401610688906124e9565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146112595760405162461bcd60e51b8152600401610688906124e9565b6001600160a01b0381166112be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610688565b61094b81611859565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b148061057b575061057b825b60006001600160e01b031982166380ac58cd60e01b148061132f57506001600160e01b03198216635b5e139f60e01b145b8061057b575061057b826112c7565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b038416908117909155819061137382610c51565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152609960205260408120546001600160a01b03166114255760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610688565b600061143083610c51565b9050806001600160a01b0316846001600160a01b0316148061147757506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b8061149b5750836001600160a01b031661149084610613565b6001600160a01b0316145b949350505050565b826001600160a01b03166114b682610c51565b6001600160a01b03161461151a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610688565b6001600160a01b03821661157c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610688565b61158760008261133e565b6001600160a01b0383166000908152609a602052604081208054600192906115b090849061282b565b90915550506001600160a01b0382166000908152609a602052604081208054600192906115de908490612842565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061164b828461285a565b9392505050565b600061164b828461288f565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b600061168b82610c51565b905061169860008361133e565b6001600160a01b0381166000908152609a602052604081208054600192906116c190849061282b565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008054610100900460ff1615611762578160ff16600114801561173e5750303b155b61175a5760405162461bcd60e51b8152600401610688906128a3565b506000919050565b60005460ff8084169116106117895760405162461bcd60e51b8152600401610688906128a3565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166117ca5760405162461bcd60e51b8152600401610688906128f1565b610d82611ceb565b600054610100900460ff166117f95760405162461bcd60e51b8152600401610688906128f1565b6110908282611d1b565b600054610100900460ff16610d825760405162461bcd60e51b8152600401610688906128f1565b600054610100900460ff166118515760405162461bcd60e51b8152600401610688906128f1565b610d82611803565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006118bc61010380546001019055565b60006118c86101035490565b90506101005481111561191d5760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e736044820152606401610688565b6119278582611d5b565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b816001600160a01b0316836001600160a01b0316036119c85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610688565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61010054811115611a885760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e736044820152606401610688565b6101035415611af35760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b6064820152608401610688565b604051806060016040528082815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182015281516101049081559082015161010590611b5c908261293c565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1990611baa9086908690612740565b60405180910390a2505050565b611bc28484846114a3565b611bce84848484611d75565b61111d5760405162461bcd60e51b8152600401610688906129fc565b606081600003611c115750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c3b5780611c2581612a4e565b9150611c349050600a8361288f565b9150611c15565b60008167ffffffffffffffff811115611c5657611c56612336565b6040519080825280601f01601f191660200182016040528015611c80576020820181803683370190505b5090505b841561149b57611c9560018361282b565b9150611ca2600a86612a67565b611cad906030612842565b60f81b818381518110611cc257611cc2612a7b565b60200101906001600160f81b031916908160001a905350611ce4600a8661288f565b9450611c84565b600054610100900460ff16611d125760405162461bcd60e51b8152600401610688906128f1565b610d8233611859565b600054610100900460ff16611d425760405162461bcd60e51b8152600401610688906128f1565b6097611d4e838261293c565b5060986107bd828261293c565b611090828260405180602001604052806000815250611e76565b60006001600160a01b0384163b15611e6b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611db9903390899088908890600401612a91565b6020604051808303816000875af1925050508015611df4575060408051601f3d908101601f19168201909252611df191810190612ace565b60015b611e51573d808015611e22576040519150601f19603f3d011682016040523d82523d6000602084013e611e27565b606091505b508051600003611e495760405162461bcd60e51b8152600401610688906129fc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061149b565b506001949350505050565b611e808383611ea9565b611e8d6000848484611d75565b6107bd5760405162461bcd60e51b8152600401610688906129fc565b6001600160a01b038216611eff5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610688565b6000818152609960205260409020546001600160a01b031615611f645760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610688565b6001600160a01b0382166000908152609a60205260408120805460019290611f8d908490612842565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461094b57600080fd5b60006020828403121561201357600080fd5b813561164b81611feb565b60005b83811015612039578181015183820152602001612021565b8381111561111d5750506000910152565b6000815180845261206281602086016020860161201e565b601f01601f19169290920160200192915050565b60208152600061164b602083018461204a565b60006020828403121561209b57600080fd5b5035919050565b80356001600160a01b0381168114610e5557600080fd5b600080604083850312156120cc57600080fd5b6120d5836120a2565b946020939093013593505050565b600080604083850312156120f657600080fd5b6120ff836120a2565b91506020830135801515811461211457600080fd5b809150509250929050565b60008060006060848603121561213457600080fd5b61213d846120a2565b925061214b602085016120a2565b9150604084013590509250925092565b6000806040838503121561216e57600080fd5b50508035926020909101359150565b60006020828403121561218f57600080fd5b61164b826120a2565b60008083601f8401126121aa57600080fd5b50813567ffffffffffffffff8111156121c257600080fd5b6020830191508360208285010111156121da57600080fd5b9250929050565b600080600080600080608087890312156121fa57600080fd5b863567ffffffffffffffff8082111561221257600080fd5b61221e8a838b01612198565b9098509650602089013591508082111561223757600080fd5b5061224489828a01612198565b90955093506122579050604088016120a2565b9150606087013590509295509295509295565b6000806020838503121561227d57600080fd5b823567ffffffffffffffff81111561229457600080fd5b6122a085828601612198565b90969095509350505050565b602081528151602082015260006020830151606060408401526122d2608084018261204a565b90506040840151151560608401528091505092915050565b6000806000604084860312156122ff57600080fd5b833567ffffffffffffffff81111561231657600080fd5b61232286828701612198565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561236257600080fd5b61236b856120a2565b9350612379602086016120a2565b925060408501359150606085013567ffffffffffffffff8082111561239d57600080fd5b818701915087601f8301126123b157600080fd5b8135818111156123c3576123c3612336565b604051601f8201601f19908116603f011681019083821181831017156123eb576123eb612336565b816040528281528a602084870101111561240457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000806060858703121561243e57600080fd5b843567ffffffffffffffff81111561245557600080fd5b61246187828801612198565b9095509350506020850135915061247a604086016120a2565b905092959194509250565b6000806040838503121561249857600080fd5b6124a1836120a2565b915061090f602084016120a2565b600181811c908216806124c357607f821691505b6020821081036124e357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60006020808352600084546125ba816124af565b808487015260406001808416600081146125db57600181146125f557612623565b60ff1985168984015283151560051b890183019550612623565b896000528660002060005b8581101561261b5781548b8201860152908301908801612600565b8a0184019650505b509398975050505050505050565b601f8211156107bd57600081815260208120601f850160051c810160208610156126585750805b601f850160051c820191505b8181101561267757828155600101612664565b505050505050565b67ffffffffffffffff83111561269757612697612336565b6126ab836126a583546124af565b83612631565b6000601f8411600181146126df57600085156126c75750838201355b600019600387901b1c1916600186901b178355612739565b600083815260209020601f19861690835b8281101561271057868501358255602094850194600190920191016126f0565b508682101561272d5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600080845461277d816124af565b6001828116801561279557600181146127aa576127d9565b60ff19841687528215158302870194506127d9565b8860005260208060002060005b858110156127d05781548a8201529084019082016127b7565b50505082870194505b50602f60f81b8452865192506127f58382860160208a0161201e565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561283d5761283d612815565b500390565b6000821982111561285557612855612815565b500190565b600081600019048311821515161561287457612874612815565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261289e5761289e612879565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff81111561295657612956612336565b61296a8161296484546124af565b84612631565b602080601f83116001811461299f57600084156129875750858301515b600019600386901b1c1916600185901b178555612677565b600085815260208120601f198616915b828110156129ce578886015182559484019460019091019084016129af565b50858210156129ec5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201612a6057612a60612815565b5060010190565b600082612a7657612a76612879565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612ac49083018461204a565b9695505050505050565b600060208284031215612ae057600080fd5b815161164b81611feb56fea2646970667358221220c98fa94911acc69f4888b4ce79165e5d513b88b682cd7393129d9d4db9c2729964736f6c634300080f0033",
    "sourceMap": "841:11473:63:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102275760003560e01c806370a0823111610130578063ab69607a116100b8578063e83157421161007c578063e8315742146104c0578063e985e9c5146104ca578063ee07080514610506578063efc32cd414610512578063f2fde38b1461052557600080fd5b8063ab69607a1461046c578063b390ac2514610474578063b88d4fde14610487578063b9fbd25c1461049a578063c87b56dd146104ad57600080fd5b80638da5cb5b116100ff5780638da5cb5b14610418578063931688cb146104295780639338bb5d1461043c57806395d89b4114610451578063a22cb4651461045957600080fd5b806370a08231146103e2578063715018a6146103f5578063755edd17146103fd578063894ba8331461041057600080fd5b80633a3d146f116101b357806342966c681161018257806342966c681461038e57806353df5c7c146103a15780635edc7c19146103a95780636297c16c146103bc5780636352211e146103cf57600080fd5b80633a3d146f146103285780633ebc82c51461035557806340c1a0641461036857806342842e0e1461037b57600080fd5b80630de54ba0116101fa5780630de54ba0146102a957806318160ddd146102bc57806323b872dd146102d25780632a55205a146102e55780633403c4e91461031757600080fd5b806301ffc9a71461022c57806306fdde0314610254578063081812fc14610269578063095ea7b314610294575b600080fd5b61023f61023a366004612001565b610538565b60405190151581526020015b60405180910390f35b61025c610581565b60405161024b9190612076565b61027c610277366004612089565b610613565b6040516001600160a01b03909116815260200161024b565b6102a76102a23660046120b9565b6106ad565b005b6102a76102b73660046120e3565b6107c2565b6102c461083a565b60405190815260200161024b565b6102a76102e036600461211f565b61084b565b6102f86102f336600461215b565b61087d565b604080516001600160a01b03909316835260208301919091520161024b565b60fb546001600160a01b031661027c565b61023f61033636600461217d565b6001600160a01b03166000908152610102602052604090205460ff1690565b6102a761036336600461217d565b610918565b61027c610376366004612089565b61094e565b6102a761038936600461211f565b610962565b6102a761039c366004612089565b61097d565b6102a76109f4565b6102a76103b73660046121e1565b610a68565b6102a76103ca366004612089565b610be8565b61027c6103dd366004612089565b610c51565b6102c46103f036600461217d565b610cc8565b6102a7610d4e565b6102c461040b36600461217d565b610d84565b6102a7610e5a565b6033546001600160a01b031661027c565b6102a761043736600461226a565b610ebe565b610444610f92565b60405161024b91906122ac565b61025c611076565b6102a76104673660046120e3565b611085565b60fc546102c4565b6102a76104823660046122ea565b611094565b6102a761049536600461234c565b6110eb565b6102a76104a8366004612428565b611123565b61025c6104bb366004612089565b6111a2565b6102c46101005481565b61023f6104d8366004612485565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b60ff805461023f911681565b6102a76105203660046120b9565b6111d7565b6102a761053336600461217d565b61122f565b60006001600160e01b03198216631030681960e21b148061055d575061055d826112c7565b8061056c575061056c826112dd565b8061057b575061057b826112fe565b92915050565b606060978054610590906124af565b80601f01602080910402602001604051908101604052809291908181526020018280546105bc906124af565b80156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166106915760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b60006106b882610c51565b9050806001600160a01b0316836001600160a01b0316036107255760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610688565b336001600160a01b0382161480610741575061074181336104d8565b6107b35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610688565b6107bd838361133e565b505050565b6033546001600160a01b031633146107ec5760405162461bcd60e51b8152600401610688906124e9565b60ff8054161561080e5760405162461bcd60e51b81526004016106889061251e565b6001600160a01b0391909116600090815261010260205260409020805460ff1916911515919091179055565b60006108466101035490565b905090565b610856335b826113ac565b6108725760405162461bcd60e51b815260040161068890612555565b6107bd8383836114a3565b600082815260fd602052604081205481906001600160a01b03166108ac5760fb546001600160a01b03166108c5565b600084815260fd60205260409020546001600160a01b03165b915061090f606461090960fe6000888152602001908152602001600020546000036108f25760fc54610902565b600087815260fe60205260409020545b869061163f565b90611652565b90509250929050565b6033546001600160a01b031633146109425760405162461bcd60e51b8152600401610688906124e9565b61094b8161165e565b50565b600061057b6033546001600160a01b031690565b6107bd838383604051806020016040528060008152506110eb565b61098633610850565b6109eb5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610688565b61094b81611680565b6033546001600160a01b03163314610a1e5760405162461bcd60e51b8152600401610688906124e9565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e90610a5090610105906125a6565b60405180910390a1610106805460ff19166001179055565b6000610a74600161171b565b90508015610a8c576000805461ff0019166101001790555b6001600160a01b038316610ae25760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c206164647265737300006044820152606401610688565b610aec600a60fc55565b60ff805460ff19169055610100829055610b046117a3565b610b7787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284376000920191909152506117d292505050565b610b7f611803565b610b8761182a565b610b908361165e565b610b998361122f565b8015610bdf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610bf282610c51565b6001600160a01b031614610c485760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e006044820152606401610688565b61094b8161097d565b6000818152609960205260408120546001600160a01b03168061057b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610688565b60006001600160a01b038216610d325760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610688565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610d785760405162461bcd60e51b8152600401610688906124e9565b610d826000611859565b565b60ff80546000911615610da95760405162461bcd60e51b81526004016106889061251e565b6033546001600160a01b0316331480610dd25750336000908152610102602052604090205460ff165b610e375760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b6064820152608401610688565b61057b82610e4460fc5490565b60fb546001600160a01b03166118ab565b919050565b6033546001600160a01b03163314610e845760405162461bcd60e51b8152600401610688906124e9565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b03163314610ee85760405162461bcd60e51b8152600401610688906124e9565b6101065460ff1615610f465760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b6064820152608401610688565b610105610f5482848361267f565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e8282604051610f86929190612740565b60405180910390a15050565b610fb8604051806060016040528060008152602001606081526020016000151581525090565b6040805160608101909152610104805482526101058054602084019190610fde906124af565b80601f016020809104026020016040519081016040528092919081815260200182805461100a906124af565b80156110575780601f1061102c57610100808354040283529160200191611057565b820191906000526020600020905b81548152906001019060200180831161103a57829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b606060988054610590906124af565b611090338383611967565b5050565b6033546001600160a01b031633146110be5760405162461bcd60e51b8152600401610688906124e9565b60ff805416156110e05760405162461bcd60e51b81526004016106889061251e565b6107bd838383611a35565b6110f533836113ac565b6111115760405162461bcd60e51b815260040161068890612555565b61111d84848484611bb7565b50505050565b6033546001600160a01b0316331461114d5760405162461bcd60e51b8152600401610688906124e9565b60ff8054161561116f5760405162461bcd60e51b81526004016106889061251e565b61117a848484611a35565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b60606101056111b083611bea565b6040516020016111c192919061276f565b6040516020818303038152906040529050919050565b6033546001600160a01b031633146112015760405162461bcd60e51b8152600401610688906124e9565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146112595760405162461bcd60e51b8152600401610688906124e9565b6001600160a01b0381166112be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610688565b61094b81611859565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b148061057b575061057b825b60006001600160e01b031982166380ac58cd60e01b148061132f57506001600160e01b03198216635b5e139f60e01b145b8061057b575061057b826112c7565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b038416908117909155819061137382610c51565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152609960205260408120546001600160a01b03166114255760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610688565b600061143083610c51565b9050806001600160a01b0316846001600160a01b0316148061147757506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b8061149b5750836001600160a01b031661149084610613565b6001600160a01b0316145b949350505050565b826001600160a01b03166114b682610c51565b6001600160a01b03161461151a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610688565b6001600160a01b03821661157c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610688565b61158760008261133e565b6001600160a01b0383166000908152609a602052604081208054600192906115b090849061282b565b90915550506001600160a01b0382166000908152609a602052604081208054600192906115de908490612842565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061164b828461285a565b9392505050565b600061164b828461288f565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b600061168b82610c51565b905061169860008361133e565b6001600160a01b0381166000908152609a602052604081208054600192906116c190849061282b565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008054610100900460ff1615611762578160ff16600114801561173e5750303b155b61175a5760405162461bcd60e51b8152600401610688906128a3565b506000919050565b60005460ff8084169116106117895760405162461bcd60e51b8152600401610688906128a3565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166117ca5760405162461bcd60e51b8152600401610688906128f1565b610d82611ceb565b600054610100900460ff166117f95760405162461bcd60e51b8152600401610688906128f1565b6110908282611d1b565b600054610100900460ff16610d825760405162461bcd60e51b8152600401610688906128f1565b600054610100900460ff166118515760405162461bcd60e51b8152600401610688906128f1565b610d82611803565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006118bc61010380546001019055565b60006118c86101035490565b90506101005481111561191d5760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e736044820152606401610688565b6119278582611d5b565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b816001600160a01b0316836001600160a01b0316036119c85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610688565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61010054811115611a885760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e736044820152606401610688565b6101035415611af35760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b6064820152608401610688565b604051806060016040528082815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182015281516101049081559082015161010590611b5c908261293c565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1990611baa9086908690612740565b60405180910390a2505050565b611bc28484846114a3565b611bce84848484611d75565b61111d5760405162461bcd60e51b8152600401610688906129fc565b606081600003611c115750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c3b5780611c2581612a4e565b9150611c349050600a8361288f565b9150611c15565b60008167ffffffffffffffff811115611c5657611c56612336565b6040519080825280601f01601f191660200182016040528015611c80576020820181803683370190505b5090505b841561149b57611c9560018361282b565b9150611ca2600a86612a67565b611cad906030612842565b60f81b818381518110611cc257611cc2612a7b565b60200101906001600160f81b031916908160001a905350611ce4600a8661288f565b9450611c84565b600054610100900460ff16611d125760405162461bcd60e51b8152600401610688906128f1565b610d8233611859565b600054610100900460ff16611d425760405162461bcd60e51b8152600401610688906128f1565b6097611d4e838261293c565b5060986107bd828261293c565b611090828260405180602001604052806000815250611e76565b60006001600160a01b0384163b15611e6b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611db9903390899088908890600401612a91565b6020604051808303816000875af1925050508015611df4575060408051601f3d908101601f19168201909252611df191810190612ace565b60015b611e51573d808015611e22576040519150601f19603f3d011682016040523d82523d6000602084013e611e27565b606091505b508051600003611e495760405162461bcd60e51b8152600401610688906129fc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061149b565b506001949350505050565b611e808383611ea9565b611e8d6000848484611d75565b6107bd5760405162461bcd60e51b8152600401610688906129fc565b6001600160a01b038216611eff5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610688565b6000818152609960205260409020546001600160a01b031615611f645760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610688565b6001600160a01b0382166000908152609a60205260408120805460019290611f8d908490612842565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461094b57600080fd5b60006020828403121561201357600080fd5b813561164b81611feb565b60005b83811015612039578181015183820152602001612021565b8381111561111d5750506000910152565b6000815180845261206281602086016020860161201e565b601f01601f19169290920160200192915050565b60208152600061164b602083018461204a565b60006020828403121561209b57600080fd5b5035919050565b80356001600160a01b0381168114610e5557600080fd5b600080604083850312156120cc57600080fd5b6120d5836120a2565b946020939093013593505050565b600080604083850312156120f657600080fd5b6120ff836120a2565b91506020830135801515811461211457600080fd5b809150509250929050565b60008060006060848603121561213457600080fd5b61213d846120a2565b925061214b602085016120a2565b9150604084013590509250925092565b6000806040838503121561216e57600080fd5b50508035926020909101359150565b60006020828403121561218f57600080fd5b61164b826120a2565b60008083601f8401126121aa57600080fd5b50813567ffffffffffffffff8111156121c257600080fd5b6020830191508360208285010111156121da57600080fd5b9250929050565b600080600080600080608087890312156121fa57600080fd5b863567ffffffffffffffff8082111561221257600080fd5b61221e8a838b01612198565b9098509650602089013591508082111561223757600080fd5b5061224489828a01612198565b90955093506122579050604088016120a2565b9150606087013590509295509295509295565b6000806020838503121561227d57600080fd5b823567ffffffffffffffff81111561229457600080fd5b6122a085828601612198565b90969095509350505050565b602081528151602082015260006020830151606060408401526122d2608084018261204a565b90506040840151151560608401528091505092915050565b6000806000604084860312156122ff57600080fd5b833567ffffffffffffffff81111561231657600080fd5b61232286828701612198565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561236257600080fd5b61236b856120a2565b9350612379602086016120a2565b925060408501359150606085013567ffffffffffffffff8082111561239d57600080fd5b818701915087601f8301126123b157600080fd5b8135818111156123c3576123c3612336565b604051601f8201601f19908116603f011681019083821181831017156123eb576123eb612336565b816040528281528a602084870101111561240457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000806060858703121561243e57600080fd5b843567ffffffffffffffff81111561245557600080fd5b61246187828801612198565b9095509350506020850135915061247a604086016120a2565b905092959194509250565b6000806040838503121561249857600080fd5b6124a1836120a2565b915061090f602084016120a2565b600181811c908216806124c357607f821691505b6020821081036124e357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60006020808352600084546125ba816124af565b808487015260406001808416600081146125db57600181146125f557612623565b60ff1985168984015283151560051b890183019550612623565b896000528660002060005b8581101561261b5781548b8201860152908301908801612600565b8a0184019650505b509398975050505050505050565b601f8211156107bd57600081815260208120601f850160051c810160208610156126585750805b601f850160051c820191505b8181101561267757828155600101612664565b505050505050565b67ffffffffffffffff83111561269757612697612336565b6126ab836126a583546124af565b83612631565b6000601f8411600181146126df57600085156126c75750838201355b600019600387901b1c1916600186901b178355612739565b600083815260209020601f19861690835b8281101561271057868501358255602094850194600190920191016126f0565b508682101561272d5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600080845461277d816124af565b6001828116801561279557600181146127aa576127d9565b60ff19841687528215158302870194506127d9565b8860005260208060002060005b858110156127d05781548a8201529084019082016127b7565b50505082870194505b50602f60f81b8452865192506127f58382860160208a0161201e565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561283d5761283d612815565b500390565b6000821982111561285557612855612815565b500190565b600081600019048311821515161561287457612874612815565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261289e5761289e612879565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff81111561295657612956612336565b61296a8161296484546124af565b84612631565b602080601f83116001811461299f57600084156129875750858301515b600019600386901b1c1916600185901b178555612677565b600085815260208120601f198616915b828110156129ce578886015182559484019460019091019084016129af565b50858210156129ec5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201612a6057612a60612815565b5060010190565b600082612a7657612a76612879565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612ac49083018461204a565b9695505050505050565b600060208284031215612ae057600080fd5b815161164b81611feb56fea2646970667358221220c98fa94911acc69f4888b4ce79165e5d513b88b682cd7393129d9d4db9c2729964736f6c634300080f0033",
    "sourceMap": "841:11473:63:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10079:482;;;;;;:::i;:::-;;:::i;:::-;;;565:14:77;;558:22;540:41;;528:2;513:18;10079:482:63;;;;;;;;2948:98:27;;;:::i;:::-;;;;;;;:::i;4471:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:77;;;1674:51;;1662:2;1647:18;4471:217:27;1528:203:77;3998:412:27;;;;;;:::i;:::-;;:::i;:::-;;4722:166:63;;;;;;:::i;:::-;;:::i;9903:109::-;;;:::i;:::-;;;2671:25:77;;;2659:2;2644:18;9903:109:63;2525:177:77;5198:330:27;;;;;;:::i;:::-;;:::i;846:566:72:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3485:32:77;;;3467:51;;3549:2;3534:18;;3527:34;;;;3440:18;846:566:72;3293:274:77;2248:113:72;2332:22;;-1:-1:-1;;;;;2332:22:72;2248:113;;8584:135:63;;;;;;:::i;:::-;-1:-1:-1;;;;;8687:25:63;8664:4;8687:25;;;:15;:25;;;;;;;;;8584:135;7117:127;;;;;;:::i;:::-;;:::i;8901:141::-;;;;;;:::i;:::-;;:::i;5594:179:27:-;;;;;;:::i;:::-;;:::i;801:241:30:-;;;;;;:::i;:::-;;:::i;8053:140:63:-;;;:::i;3441:548::-;;;;;;:::i;:::-;;:::i;6573:196::-;;;;;;:::i;:::-;;:::i;2651:235:27:-;;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;:::i;:::-;;:::i;1908:101:18:-;;;:::i;6065:386:63:-;;;;;;:::i;:::-;;:::i;6853:119::-;;;:::i;1276:85:18:-;1348:6;;-1:-1:-1;;;;;1348:6:18;1276:85;;7701:271:63;;;;;;:::i;:::-;;:::i;9158:127::-;;;:::i;:::-;;;;;;;:::i;3110:102:27:-;;;:::i;4755:153::-;;;;;;:::i;:::-;;:::i;2367:117:72:-;2453:24;;2367:117;;5125:181:63;;;;;;:::i;:::-;;:::i;5839:320:27:-;;;;;;:::i;:::-;;:::i;5621:257:63:-;;;;;;:::i;:::-;;:::i;9435:346::-;;;;;;:::i;:::-;;:::i;1857:24::-;;;;;;4974:162:27;;;;;;:::i;:::-;-1:-1:-1;;;;;5094:25:27;;;5071:4;5094:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4974:162;1779:20:63;;;;;;;;;7436:169;;;;;;:::i;:::-;;:::i;2158:198:18:-;;;;;;:::i;:::-;;:::i;10079:482:63:-;10276:4;-1:-1:-1;;;;;;10315:46:63;;-1:-1:-1;;;10315:46:63;;:110;;;10377:48;10413:11;10377:35;:48::i;:::-;10315:175;;;;10441:49;10478:11;10441:36;:49::i;:::-;10315:239;;;;10506:48;10542:11;10506:35;:48::i;:::-;10296:258;10079:482;-1:-1:-1;;10079:482:63:o;2948:98:27:-;3002:13;3034:5;3027:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:98;:::o;4471:217::-;4547:7;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:27;4566:73;;;;-1:-1:-1;;;4566:73:27;;9312:2:77;4566:73:27;;;9294:21:77;9351:2;9331:18;;;9324:30;9390:34;9370:18;;;9363:62;-1:-1:-1;;;9441:18:77;;;9434:42;9493:19;;4566:73:27;;;;;;;;;-1:-1:-1;4657:24:27;;;;:15;:24;;;;;;-1:-1:-1;;;;;4657:24:27;;4471:217::o;3998:412::-;4078:13;4094:34;4120:7;4094:25;:34::i;:::-;4078:50;;4152:5;-1:-1:-1;;;;;4146:11:27;:2;-1:-1:-1;;;;;4146:11:27;;4138:57;;;;-1:-1:-1;;;4138:57:27;;9725:2:77;4138:57:27;;;9707:21:77;9764:2;9744:18;;;9737:30;9803:34;9783:18;;;9776:62;-1:-1:-1;;;9854:18:77;;;9847:31;9895:19;;4138:57:27;9523:397:77;4138:57:27;929:10:33;-1:-1:-1;;;;;4227:21:27;;;;:62;;-1:-1:-1;4252:37:27;4269:5;929:10:33;4974:162:27;:::i;4252:37::-;4206:165;;;;-1:-1:-1;;;4206:165:27;;10127:2:77;4206:165:27;;;10109:21:77;10166:2;10146:18;;;10139:30;10205:34;10185:18;;;10178:62;10276:26;10256:18;;;10249:54;10320:19;;4206:165:27;9925:420:77;4206:165:27;4382:21;4391:2;4395:7;4382:8;:21::i;:::-;4068:342;3998:412;;:::o;4722:166:63:-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;4299:8:63::1;::::0;;::::1;4298:9;4290:52;;;;-1:-1:-1::0;;;4290:52:63::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4845:24:63;;;::::2;;::::0;;;:15:::2;:24;::::0;;;;:36;;-1:-1:-1;;4845:36:63::2;::::0;::::2;;::::0;;;::::2;::::0;;4722:166::o;9903:109::-;9955:7;9981:24;:14;929::34;;838:112;9981:24:63;9974:31;;9903:109;:::o;5198:330:27:-;5387:41;929:10:33;5406:12:27;5420:7;5387:18;:41::i;:::-;5379:103;;;;-1:-1:-1;;;5379:103:27;;;;;;;:::i;:::-;5493:28;5503:4;5509:2;5513:7;5493:9;:28::i;846:566:72:-;983:16;1049:26;;;:16;:26;;;;;;983:16;;-1:-1:-1;;;;;1049:26:72;:118;;1145:22;;-1:-1:-1;;;;;1145:22:72;1049:118;;;1104:26;;;;:16;:26;;;;;;-1:-1:-1;;;;;1104:26:72;1049:118;1038:129;;1193:212;1401:3;1193:190;1238:18;:28;1257:8;1238:28;;;;;;;;;;;;1270:1;1238:33;:131;;1345:24;;1238:131;;;1294:28;;;;:18;:28;;;;;;1238:131;1193:10;;:27;:190::i;:::-;:207;;:212::i;:::-;1177:228;;846:566;;;;;:::o;7117:127:63:-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;7200:37:63::1;7227:9;7200:26;:37::i;:::-;7117:127:::0;:::o;8901:141::-;8985:15;9027:7;1348:6:18;;-1:-1:-1;;;;;1348:6:18;;1276:85;5594:179:27;5727:39;5744:4;5750:2;5754:7;5727:39;;;;;;;;;;;;:16;:39::i;801:241:30:-;917:41;929:10:33;936:12:30;850:96:33;917:41:30;909:102;;;;-1:-1:-1;;;909:102:30;;11690:2:77;909:102:30;;;11672:21:77;11729:2;11709:18;;;11702:30;11768:34;11748:18;;;11741:62;-1:-1:-1;;;11819:18:77;;;11812:46;11875:19;;909:102:30;11488:412:77;909:102:30;1021:14;1027:7;1021:5;:14::i;8053:140:63:-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;8110:34:63::1;::::0;::::1;::::0;::::1;::::0;8125:18;;8110:34:::1;:::i;:::-;;;;;;;;8154:25:::0;:32;;-1:-1:-1;;8154:32:63::1;8182:4;8154:32;::::0;;8053:140::o;3441:548::-;3111:19:19;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:19;;;;;3168:65;-1:-1:-1;;;;;3616:22:63;::::1;3608:65;;;::::0;-1:-1:-1;;;3608:65:63;;13201:2:77;3608:65:63::1;::::0;::::1;13183:21:77::0;13240:2;13220:18;;;13213:30;13279:32;13259:18;;;13252:60;13329:18;;3608:65:63::1;12999:354:77::0;3608:65:63::1;3683:32;3712:2;2197:24:72::0;:38;2119:123;3683:32:63::1;3725:8;:16:::0;;-1:-1:-1;;3725:16:63::1;::::0;;::::1;3751:22:::0;;;3784:16:::1;:14;:16::i;:::-;3810:29;3824:5;;3810:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;3810:29:63::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;3831:7:63;;-1:-1:-1;3831:7:63;;;;3810:29;::::1;3831:7:::0;;;;3810:29;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;3810:13:63::1;::::0;-1:-1:-1;;;3810:29:63:i:1;:::-;3849:15;:13;:15::i;:::-;3874:17;:15;:17::i;:::-;3902:36;3929:8;3902:26;:36::i;:::-;3949:33;3973:8;3949:23;:33::i;:::-;3257:14:19::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:19;;;3327:14;;-1:-1:-1;13510:36:77;;3327:14:19;;13498:2:77;13483:18;3327:14:19;;;;;;;3253:99;3101:257;3441:548:63;;;;;;:::o;6573:196::-;6671:10;6650:17;6658:8;6650:7;:17::i;:::-;-1:-1:-1;;;;;6650:31:63;;6629:109;;;;-1:-1:-1;;;6629:109:63;;13759:2:77;6629:109:63;;;13741:21:77;13798:2;13778:18;;;13771:30;13837:33;13817:18;;;13810:61;13888:18;;6629:109:63;13557:355:77;6629:109:63;6748:14;6753:8;6748:4;:14::i;2651:235:27:-;2723:7;2758:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2758:16:27;;2784:73;;;;-1:-1:-1;;;2784:73:27;;14119:2:77;2784:73:27;;;14101:21:77;14158:2;14138:18;;;14131:30;14197:34;14177:18;;;14170:62;-1:-1:-1;;;14248:18:77;;;14241:39;14297:19;;2784:73:27;13917:405:77;2390:204:27;2462:7;-1:-1:-1;;;;;2489:19:27;;2481:73;;;;-1:-1:-1;;;2481:73:27;;14529:2:77;2481:73:27;;;14511:21:77;14568:2;14548:18;;;14541:30;14607:34;14587:18;;;14580:62;-1:-1:-1;;;14658:18:77;;;14651:39;14707:19;;2481:73:27;14327:405:77;2481:73:27;-1:-1:-1;;;;;;2571:16:27;;;;;:9;:16;;;;;;;2390:204::o;1908:101:18:-;1348:6;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;6065:386:63:-;4299:8;;;6132:7;;4299:8;4298:9;4290:52;;;;-1:-1:-1;;;4290:52:63;;;;;;;:::i;:::-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;6172:10:63::1;:21;::::0;:52:::1;;-1:-1:-1::0;6213:10:63::1;6197:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;6172:52;6151:147;;;::::0;-1:-1:-1;;;6151:147:63;;14939:2:77;6151:147:63::1;::::0;::::1;14921:21:77::0;14978:2;14958:18;;;14951:30;15017:34;14997:18;;;14990:62;-1:-1:-1;;;15068:18:77;;;15061:46;15124:19;;6151:147:63::1;14737:412:77::0;6151:147:63::1;6315:129;6341:9;6364:29;2453:24:72::0;;;2367:117;6364:29:63::1;2332:22:72::0;;-1:-1:-1;;;;;2332:22:72;6315:12:63::1;:129::i;4352:1::-;6065:386:::0;;;:::o;6853:119::-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;6907:8:63::1;:15:::0;;-1:-1:-1;;6907:15:63::1;6918:4;6907:15;::::0;;6937:28:::1;::::0;6954:10:::1;::::0;6937:28:::1;::::0;6907:8:::1;::::0;6937:28:::1;6853:119::o:0;7701:271::-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;7801:25:63;;::::1;;7800:26;7779:106;;;::::0;-1:-1:-1;;;7779:106:63;;15356:2:77;7779:106:63::1;::::0;::::1;15338:21:77::0;15395:2;15375:18;;;15368:30;15434:34;15414:18;;;15407:62;-1:-1:-1;;;15485:18:77;;;15478:31;15526:19;;7779:106:63::1;15154:397:77::0;7779:106:63::1;7896:18:::0;:29:::1;7917:8:::0;;7896:18;:29:::1;:::i;:::-;;7940:25;7956:8;;7940:25;;;;;;;:::i;:::-;;;;;;;;7701:271:::0;;:::o;9158:127::-;9228:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;9228:17:63;9261;;;;;;;;;9268:10;9261:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9261:17:63;;;-1:-1:-1;;9261:17:63;;;;;;;;;;;;;;;;9158:127;-1:-1:-1;9158:127:63:o;3110:102:27:-;3166:13;3198:7;3191:14;;;;;:::i;4755:153::-;4849:52;929:10:33;4882:8:27;4892;4849:18;:52::i;:::-;4755:153;;:::o;5125:181:63:-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;4299:8:63::1;::::0;;::::1;4298:9;4290:52;;;;-1:-1:-1::0;;;4290:52:63::1;;;;;;;:::i;:::-;5260:39:::2;5273:8;;5283:15;5260:12;:39::i;5839:320:27:-:0;6008:41;929:10:33;6041:7:27;6008:18;:41::i;:::-;6000:103;;;;-1:-1:-1;;;6000:103:27;;;;;;;:::i;:::-;6113:39;6127:4;6133:2;6137:7;6146:5;6113:13;:39::i;:::-;5839:320;;;;:::o;5621:257:63:-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;4299:8:63::1;::::0;;::::1;4298:9;4290:52;;;;-1:-1:-1::0;;;4290:52:63::1;;;;;;;:::i;:::-;5791:39:::2;5804:8;;5814:15;5791:12;:39::i;:::-;-1:-1:-1::0;;;;;5840:24:63::2;;::::0;;;:15:::2;:24;::::0;;;;:31;;-1:-1:-1;;5840:31:63::2;5867:4;5840:31;::::0;;-1:-1:-1;;;5621:257:63:o;9435:346::-;9523:13;9629:18;9694:19;:8;:17;:19::i;:::-;9591:169;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9548:226;;9435:346;;;:::o;7436:169::-;1348:6:18;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;7560:26:63::1;::::0;;;:16:::1;:26;::::0;;;;:38;;-1:-1:-1;;;;;;7560:38:63::1;-1:-1:-1::0;;;;;7560:38:63;;;::::1;::::0;;;::::1;::::0;;7436:169::o;2158:198:18:-;1348:6;;-1:-1:-1;;;;;1348:6:18;929:10:33;1488:23:18;1480:68;;;;-1:-1:-1;;;1480:68:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:18;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:18;;19399:2:77;2238:73:18::1;::::0;::::1;19381:21:77::0;19438:2;19418:18;;;19411:30;19477:34;19457:18;;;19450:62;-1:-1:-1;;;19528:18:77;;;19521:36;19574:19;;2238:73:18::1;19197:402:77::0;2238:73:18::1;2321:28;2340:8;2321:18;:28::i;1060:166:36:-:0;-1:-1:-1;;;;;;1168:51:36;-1:-1:-1;;;1168:51:36;;1060:166::o;1849:264:72:-;1974:4;-1:-1:-1;;;;;;2013:41:72;;-1:-1:-1;;;2013:41:72;;:93;;;2070:36;2094:11;1987:344:27;2111:4;-1:-1:-1;;;;;;2146:51:27;;-1:-1:-1;;;2146:51:27;;:126;;-1:-1:-1;;;;;;;2213:59:27;;-1:-1:-1;;;2213:59:27;2146:126;:178;;;;2288:36;2312:11;2288:23;:36::i;11673:182::-;11747:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11747:29:27;-1:-1:-1;;;;;11747:29:27;;;;;;;;:24;;11800:34;11747:24;11800:25;:34::i;:::-;-1:-1:-1;;;;;11791:57:27;;;;;;;;;;;11673:182;;:::o;7914:355::-;8007:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:27;8023:73;;;;-1:-1:-1;;;8023:73:27;;19806:2:77;8023:73:27;;;19788:21:77;19845:2;19825:18;;;19818:30;19884:34;19864:18;;;19857:62;-1:-1:-1;;;19935:18:77;;;19928:42;19987:19;;8023:73:27;19604:408:77;8023:73:27;8106:13;8122:34;8148:7;8122:25;:34::i;:::-;8106:50;;8185:5;-1:-1:-1;;;;;8174:16:27;:7;-1:-1:-1;;;;;8174:16:27;;:52;;;-1:-1:-1;;;;;;5094:25:27;;;5071:4;5094:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8194:32;8174:87;;;;8254:7;-1:-1:-1;;;;;8230:31:27;:20;8242:7;8230:11;:20::i;:::-;-1:-1:-1;;;;;8230:31:27;;8174:87;8166:96;7914:355;-1:-1:-1;;;;7914:355:27:o;10946:616::-;11111:4;-1:-1:-1;;;;;11073:42:27;:34;11099:7;11073:25;:34::i;:::-;-1:-1:-1;;;;;11073:42:27;;11065:92;;;;-1:-1:-1;;;11065:92:27;;20219:2:77;11065:92:27;;;20201:21:77;20258:2;20238:18;;;20231:30;20297:34;20277:18;;;20270:62;-1:-1:-1;;;20348:18:77;;;20341:35;20393:19;;11065:92:27;20017:401:77;11065:92:27;-1:-1:-1;;;;;11175:16:27;;11167:65;;;;-1:-1:-1;;;11167:65:27;;20625:2:77;11167:65:27;;;20607:21:77;20664:2;20644:18;;;20637:30;20703:34;20683:18;;;20676:62;-1:-1:-1;;;20754:18:77;;;20747:34;20798:19;;11167:65:27;20423:400:77;11167:65:27;11344:29;11361:1;11365:7;11344:8;:29::i;:::-;-1:-1:-1;;;;;11384:15:27;;;;;;:9;:15;;;;;:20;;11403:1;;11384:15;:20;;11403:1;;11384:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11414:13:27;;;;;;:9;:13;;;;;:18;;11431:1;;11414:13;:18;;11431:1;;11414:18;:::i;:::-;;;;-1:-1:-1;;11442:16:27;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11442:21:27;-1:-1:-1;;;;;11442:21:27;;;;;;;;;11479:27;;11442:16;;11479:27;;;;;;;4068:342;3998:412;;:::o;3461:96:38:-;3519:7;3545:5;3549:1;3545;:5;:::i;:::-;3538:12;3461:96;-1:-1:-1;;;3461:96:38:o;3846:::-;3904:7;3930:5;3934:1;3930;:5;:::i;1418:115:72:-;1492:22;:34;;-1:-1:-1;;;;;;1492:34:72;-1:-1:-1;;;;;1492:34:72;;;;;;;;;;1418:115::o;10205:417:27:-;10264:13;10280:34;10306:7;10280:25;:34::i;:::-;10264:50;;10411:29;10428:1;10432:7;10411:8;:29::i;:::-;-1:-1:-1;;;;;10451:16:27;;;;;;:9;:16;;;;;:21;;10471:1;;10451:16;:21;;10471:1;;10451:21;:::i;:::-;;;;-1:-1:-1;;10489:16:27;;;;:7;:16;;;;;;10482:23;;-1:-1:-1;;;;;;10482:23:27;;;10521:36;10497:7;;10489:16;-1:-1:-1;;;;;10521:36:27;;;;;10489:16;;10521:36;4755:153;;:::o;5287:808:19:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:19;1476:19:32;:23;5738:61:19;5713:166;;;;-1:-1:-1;;;5713:166:19;;;;;;;:::i;:::-;-1:-1:-1;5900:5:19;;5287:808;-1:-1:-1;5287:808:19:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:19;;;;;;;:::i;:::-;-1:-1:-1;6031:12:19;:22;;-1:-1:-1;;6031:22:19;;;;;;;;;;;;-1:-1:-1;;5287:808:19:o;988:95:18:-;4698:13:19;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:19;;;;;;;:::i;:::-;1050:26:18::1;:24;:26::i;1605:149:27:-:0;4698:13:19;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:19;;;;;;;:::i;:::-;1708:39:27::1;1732:5;1739:7;1708:23;:39::i;862:58:36:-:0;4698:13:19;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:19;;;;;;;:::i;755:85:72:-;4698:13:19;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:19;;;;;;;:::i;:::-;818:15:72::1;:13;:15::i;2510:187:18:-:0;2602:6;;;-1:-1:-1;;;;;2618:17:18;;;-1:-1:-1;;;;;;2618:17:18;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;11103:489:63:-;11240:7;11259:26;:14;1043:19:34;;1061:1;1043:19;;;956:123;11259:26:63;11295:15;11313:24;:14;929::34;;838:112;11313:24:63;11295:42;;11366:9;;11355:7;:20;;11347:65;;;;-1:-1:-1;;;11347:65:63;;22682:2:77;11347:65:63;;;22664:21:77;;;22701:18;;;22694:30;22760:34;22740:18;;;22733:62;22812:18;;11347:65:63;22480:356:77;11347:65:63;11422:23;11432:3;11437:7;11422:9;:23::i;:::-;1794:28:72;;;;:18;:28;;;;;:42;;;1639:26;;;;:16;:26;;;;;:41;;-1:-1:-1;;;;;;1639:41:72;-1:-1:-1;;;;;1639:41:72;;;;;11578:7:63;11103:489;-1:-1:-1;;;;11103:489:63:o;11990:307:27:-;12140:8;-1:-1:-1;;;;;12131:17:27;:5;-1:-1:-1;;;;;12131:17:27;;12123:55;;;;-1:-1:-1;;;12123:55:27;;23043:2:77;12123:55:27;;;23025:21:77;23082:2;23062:18;;;23055:30;23121:27;23101:18;;;23094:55;23166:18;;12123:55:27;22841:349:77;12123:55:27;-1:-1:-1;;;;;12188:25:27;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12188:46:27;;;;;;;;;;12249:41;;540::77;;;12249::27;;513:18:77;12249:41:27;;;;;;;11990:307;;;:::o;11829:483:63:-;11983:9;;11964:15;:28;;11943:107;;;;-1:-1:-1;;;11943:107:63;;23397:2:77;11943:107:63;;;23379:21:77;;;23416:18;;;23409:30;23475:34;23455:18;;;23448:62;23527:18;;11943:107:63;23195:356:77;11943:107:63;12081:14;929::34;12081:29:63;12060:125;;;;-1:-1:-1;;;12060:125:63;;23758:2:77;12060:125:63;;;23740:21:77;23797:2;23777:18;;;23770:30;23836:34;23816:18;;;23809:62;-1:-1:-1;;;23887:18:77;;;23880:47;23944:19;;12060:125:63;23556:413:77;12060:125:63;12208:44;;;;;;;;12219:15;12208:44;;;;12236:8;;12208:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12208:44:63;;;-1:-1:-1;;;12208:44:63;;;;;12195:57;;:10;:57;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12195:57:63;;;;;;;;;;;;-1:-1:-1;;12195:57:63;;;;;;;;;;12267:38;12279:15;;12267:38;;;;12296:8;;;;12267:38;:::i;:::-;;;;;;;;11829:483;;;:::o;7021:307:27:-;7172:28;7182:4;7188:2;7192:7;7172:9;:28::i;:::-;7218:48;7241:4;7247:2;7251:7;7260:5;7218:22;:48::i;:::-;7210:111;;;;-1:-1:-1;;;7210:111:27;;;;;;;:::i;339:703:35:-;395:13;612:5;621:1;612:10;608:51;;-1:-1:-1;;638:10:35;;;;;;;;;;;;-1:-1:-1;;;638:10:35;;;;;339:703::o;608:51::-;683:5;668:12;722:75;729:9;;722:75;;754:8;;;;:::i;:::-;;-1:-1:-1;776:10:35;;-1:-1:-1;784:2:35;776:10;;:::i;:::-;;;722:75;;;806:19;838:6;828:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;828:17:35;;806:39;;855:150;862:10;;855:150;;888:11;898:1;888:11;;:::i;:::-;;-1:-1:-1;956:10:35;964:2;956:5;:10;:::i;:::-;943:24;;:2;:24;:::i;:::-;930:39;;913:6;920;913:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;913:56:35;;;;;;;;-1:-1:-1;983:11:35;992:2;983:11;;:::i;:::-;;;855:150;;1089:111:18;4698:13:19;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:19;;;;;;;:::i;:::-;1161:32:18::1;929:10:33::0;1161:18:18::1;:32::i;1760:160:27:-:0;4698:13:19;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:19;;;;;;;:::i;:::-;1873:5:27::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:27::1;:17;1906:7:::0;1896;:17:::1;:::i;8599:108::-:0;8674:26;8684:2;8688:7;8674:26;;;;;;;;;;;;:9;:26::i;12850:800::-;13000:4;-1:-1:-1;;;;;13020:13:27;;1476:19:32;:23;13016:628:27;;13055:83;;-1:-1:-1;;;13055:83:27;;-1:-1:-1;;;;;13055:47:27;;;;;:83;;929:10:33;;13117:4:27;;13123:7;;13132:5;;13055:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13055:83:27;;;;;;;;-1:-1:-1;;13055:83:27;;;;;;;;;;;;:::i;:::-;;;13051:541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13316:6;:13;13333:1;13316:18;13312:266;;13358:60;;-1:-1:-1;;;13358:60:27;;;;;;;:::i;13312:266::-;13530:6;13524:13;13515:6;13511:2;13507:15;13500:38;13051:541;-1:-1:-1;;;;;;13188:62:27;-1:-1:-1;;;13188:62:27;;-1:-1:-1;13181:69:27;;13016:628;-1:-1:-1;13629:4:27;12850:800;;;;;;:::o;8928:311::-;9053:18;9059:2;9063:7;9053:5;:18::i;:::-;9102:54;9133:1;9137:2;9141:7;9150:5;9102:22;:54::i;:::-;9081:151;;;;-1:-1:-1;;;9081:151:27;;;;;;;:::i;9561:427::-;-1:-1:-1;;;;;9640:16:27;;9632:61;;;;-1:-1:-1;;;9632:61:27;;27089:2:77;9632:61:27;;;27071:21:77;;;27108:18;;;27101:30;27167:34;27147:18;;;27140:62;27219:18;;9632:61:27;26887:356:77;9632:61:27;7696:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:27;:30;9703:58;;;;-1:-1:-1;;;9703:58:27;;27450:2:77;9703:58:27;;;27432:21:77;27489:2;27469:18;;;27462:30;27528;27508:18;;;27501:58;27576:18;;9703:58:27;27248:352:77;9703:58:27;-1:-1:-1;;;;;9828:13:27;;;;;;:9;:13;;;;;:18;;9845:1;;9828:13;:18;;9845:1;;9828:18;:::i;:::-;;;;-1:-1:-1;;9856:16:27;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9856:21:27;-1:-1:-1;;;;;9856:21:27;;;;;;;;9893:33;;9856:16;;;9893:33;;9856:16;;9893:33;4755:153;;:::o;14:131:77:-;-1:-1:-1;;;;;;88:32:77;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:77;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:77;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:77:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:77;;1343:180;-1:-1:-1;1343:180:77:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:77;;1843:42;;1833:70;;1899:1;1896;1889:12;1914:254;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:77:o;2173:347::-;2238:6;2246;2299:2;2287:9;2278:7;2274:23;2270:32;2267:52;;;2315:1;2312;2305:12;2267:52;2338:29;2357:9;2338:29;:::i;:::-;2328:39;;2417:2;2406:9;2402:18;2389:32;2464:5;2457:13;2450:21;2443:5;2440:32;2430:60;;2486:1;2483;2476:12;2430:60;2509:5;2499:15;;;2173:347;;;;;:::o;2707:328::-;2784:6;2792;2800;2853:2;2841:9;2832:7;2828:23;2824:32;2821:52;;;2869:1;2866;2859:12;2821:52;2892:29;2911:9;2892:29;:::i;:::-;2882:39;;2940:38;2974:2;2963:9;2959:18;2940:38;:::i;:::-;2930:48;;3025:2;3014:9;3010:18;2997:32;2987:42;;2707:328;;;;;:::o;3040:248::-;3108:6;3116;3169:2;3157:9;3148:7;3144:23;3140:32;3137:52;;;3185:1;3182;3175:12;3137:52;-1:-1:-1;;3208:23:77;;;3278:2;3263:18;;;3250:32;;-1:-1:-1;3040:248:77:o;3572:186::-;3631:6;3684:2;3672:9;3663:7;3659:23;3655:32;3652:52;;;3700:1;3697;3690:12;3652:52;3723:29;3742:9;3723:29;:::i;3987:348::-;4039:8;4049:6;4103:3;4096:4;4088:6;4084:17;4080:27;4070:55;;4121:1;4118;4111:12;4070:55;-1:-1:-1;4144:20:77;;4187:18;4176:30;;4173:50;;;4219:1;4216;4209:12;4173:50;4256:4;4248:6;4244:17;4232:29;;4308:3;4301:4;4292:6;4284;4280:19;4276:30;4273:39;4270:59;;;4325:1;4322;4315:12;4270:59;3987:348;;;;;:::o;4340:864::-;4450:6;4458;4466;4474;4482;4490;4543:3;4531:9;4522:7;4518:23;4514:33;4511:53;;;4560:1;4557;4550:12;4511:53;4600:9;4587:23;4629:18;4670:2;4662:6;4659:14;4656:34;;;4686:1;4683;4676:12;4656:34;4725:59;4776:7;4767:6;4756:9;4752:22;4725:59;:::i;:::-;4803:8;;-1:-1:-1;4699:85:77;-1:-1:-1;4891:2:77;4876:18;;4863:32;;-1:-1:-1;4907:16:77;;;4904:36;;;4936:1;4933;4926:12;4904:36;;4975:61;5028:7;5017:8;5006:9;5002:24;4975:61;:::i;:::-;5055:8;;-1:-1:-1;4949:87:77;-1:-1:-1;5109:38:77;;-1:-1:-1;5143:2:77;5128:18;;5109:38;:::i;:::-;5099:48;;5194:2;5183:9;5179:18;5166:32;5156:42;;4340:864;;;;;;;;:::o;5209:411::-;5280:6;5288;5341:2;5329:9;5320:7;5316:23;5312:32;5309:52;;;5357:1;5354;5347:12;5309:52;5397:9;5384:23;5430:18;5422:6;5419:30;5416:50;;;5462:1;5459;5452:12;5416:50;5501:59;5552:7;5543:6;5532:9;5528:22;5501:59;:::i;:::-;5579:8;;5475:85;;-1:-1:-1;5209:411:77;-1:-1:-1;;;;5209:411:77:o;5625:513::-;5812:2;5801:9;5794:21;5857:6;5851:13;5846:2;5835:9;5831:18;5824:41;5775:4;5912:2;5904:6;5900:15;5894:22;5952:4;5947:2;5936:9;5932:18;5925:32;5980:52;6027:3;6016:9;6012:19;5998:12;5980:52;:::i;:::-;5966:66;;6102:2;6094:6;6090:15;6084:22;6077:30;6070:38;6063:4;6052:9;6048:20;6041:68;6126:6;6118:14;;;5625:513;;;;:::o;6143:479::-;6223:6;6231;6239;6292:2;6280:9;6271:7;6267:23;6263:32;6260:52;;;6308:1;6305;6298:12;6260:52;6348:9;6335:23;6381:18;6373:6;6370:30;6367:50;;;6413:1;6410;6403:12;6367:50;6452:59;6503:7;6494:6;6483:9;6479:22;6452:59;:::i;:::-;6530:8;;6426:85;;-1:-1:-1;6612:2:77;6597:18;;;;6584:32;;6143:479;-1:-1:-1;;;;6143:479:77:o;6627:127::-;6688:10;6683:3;6679:20;6676:1;6669:31;6719:4;6716:1;6709:15;6743:4;6740:1;6733:15;6759:1138;6854:6;6862;6870;6878;6931:3;6919:9;6910:7;6906:23;6902:33;6899:53;;;6948:1;6945;6938:12;6899:53;6971:29;6990:9;6971:29;:::i;:::-;6961:39;;7019:38;7053:2;7042:9;7038:18;7019:38;:::i;:::-;7009:48;;7104:2;7093:9;7089:18;7076:32;7066:42;;7159:2;7148:9;7144:18;7131:32;7182:18;7223:2;7215:6;7212:14;7209:34;;;7239:1;7236;7229:12;7209:34;7277:6;7266:9;7262:22;7252:32;;7322:7;7315:4;7311:2;7307:13;7303:27;7293:55;;7344:1;7341;7334:12;7293:55;7380:2;7367:16;7402:2;7398;7395:10;7392:36;;;7408:18;;:::i;:::-;7483:2;7477:9;7451:2;7537:13;;-1:-1:-1;;7533:22:77;;;7557:2;7529:31;7525:40;7513:53;;;7581:18;;;7601:22;;;7578:46;7575:72;;;7627:18;;:::i;:::-;7667:10;7663:2;7656:22;7702:2;7694:6;7687:18;7742:7;7737:2;7732;7728;7724:11;7720:20;7717:33;7714:53;;;7763:1;7760;7753:12;7714:53;7819:2;7814;7810;7806:11;7801:2;7793:6;7789:15;7776:46;7864:1;7859:2;7854;7846:6;7842:15;7838:24;7831:35;7885:6;7875:16;;;;;;;6759:1138;;;;;;;:::o;7902:553::-;7991:6;7999;8007;8015;8068:2;8056:9;8047:7;8043:23;8039:32;8036:52;;;8084:1;8081;8074:12;8036:52;8124:9;8111:23;8157:18;8149:6;8146:30;8143:50;;;8189:1;8186;8179:12;8143:50;8228:59;8279:7;8270:6;8259:9;8255:22;8228:59;:::i;:::-;8306:8;;-1:-1:-1;8202:85:77;-1:-1:-1;;8388:2:77;8373:18;;8360:32;;-1:-1:-1;8411:38:77;8445:2;8430:18;;8411:38;:::i;:::-;8401:48;;7902:553;;;;;;;:::o;8460:260::-;8528:6;8536;8589:2;8577:9;8568:7;8564:23;8560:32;8557:52;;;8605:1;8602;8595:12;8557:52;8628:29;8647:9;8628:29;:::i;:::-;8618:39;;8676:38;8710:2;8699:9;8695:18;8676:38;:::i;8725:380::-;8804:1;8800:12;;;;8847;;;8868:61;;8922:4;8914:6;8910:17;8900:27;;8868:61;8975:2;8967:6;8964:14;8944:18;8941:38;8938:161;;9021:10;9016:3;9012:20;9009:1;9002:31;9056:4;9053:1;9046:15;9084:4;9081:1;9074:15;8938:161;;8725:380;;;:::o;10350:356::-;10552:2;10534:21;;;10571:18;;;10564:30;10630:34;10625:2;10610:18;;10603:62;10697:2;10682:18;;10350:356::o;10711:354::-;10913:2;10895:21;;;10952:2;10932:18;;;10925:30;10991:32;10986:2;10971:18;;10964:60;11056:2;11041:18;;10711:354::o;11070:413::-;11272:2;11254:21;;;11311:2;11291:18;;;11284:30;11350:34;11345:2;11330:18;;11323:62;-1:-1:-1;;;11416:2:77;11401:18;;11394:47;11473:3;11458:19;;11070:413::o;12031:963::-;12140:4;12169:2;12198;12187:9;12180:21;12221:1;12254:6;12248:13;12284:36;12310:9;12284:36;:::i;:::-;12356:6;12351:2;12340:9;12336:18;12329:34;12382:2;12403:1;12435:2;12424:9;12420:18;12452:1;12447:158;;;;12619:1;12614:354;;;;12413:555;;12447:158;-1:-1:-1;;12495:24:77;;12475:18;;;12468:52;12573:14;;12566:22;12563:1;12559:30;12544:46;;12540:55;;;-1:-1:-1;12447:158:77;;12614:354;12645:6;12642:1;12635:17;12693:2;12690:1;12680:16;12718:1;12732:180;12746:6;12743:1;12740:13;12732:180;;;12839:14;;12815:17;;;12811:26;;12804:50;12882:16;;;;12761:10;;12732:180;;;12936:17;;12932:26;;;-1:-1:-1;;12413:555:77;-1:-1:-1;12985:3:77;;12031:963;-1:-1:-1;;;;;;;;12031:963:77:o;15556:545::-;15658:2;15653:3;15650:11;15647:448;;;15694:1;15719:5;15715:2;15708:17;15764:4;15760:2;15750:19;15834:2;15822:10;15818:19;15815:1;15811:27;15805:4;15801:38;15870:4;15858:10;15855:20;15852:47;;;-1:-1:-1;15893:4:77;15852:47;15948:2;15943:3;15939:12;15936:1;15932:20;15926:4;15922:31;15912:41;;16003:82;16021:2;16014:5;16011:13;16003:82;;;16066:17;;;16047:1;16036:13;16003:82;;;16007:3;;;15556:545;;;:::o;16277:1206::-;16401:18;16396:3;16393:27;16390:53;;;16423:18;;:::i;:::-;16452:94;16542:3;16502:38;16534:4;16528:11;16502:38;:::i;:::-;16496:4;16452:94;:::i;:::-;16572:1;16597:2;16592:3;16589:11;16614:1;16609:616;;;;17269:1;17286:3;17283:93;;;-1:-1:-1;17342:19:77;;;17329:33;17283:93;-1:-1:-1;;16234:1:77;16230:11;;;16226:24;16222:29;16212:40;16258:1;16254:11;;;16209:57;17389:78;;16582:895;;16609:616;11978:1;11971:14;;;12015:4;12002:18;;-1:-1:-1;;16645:17:77;;;16746:9;16768:229;16782:7;16779:1;16776:14;16768:229;;;16871:19;;;16858:33;16843:49;;16978:4;16963:20;;;;16931:1;16919:14;;;;16798:12;16768:229;;;16772:3;17025;17016:7;17013:16;17010:159;;;17149:1;17145:6;17139:3;17133;17130:1;17126:11;17122:21;17118:34;17114:39;17101:9;17096:3;17092:19;17079:33;17075:79;17067:6;17060:95;17010:159;;;17212:1;17206:3;17203:1;17199:11;17195:19;17189:4;17182:33;16582:895;;;16277:1206;;;:::o;17488:390::-;17647:2;17636:9;17629:21;17686:6;17681:2;17670:9;17666:18;17659:34;17743:6;17735;17730:2;17719:9;17715:18;17702:48;17799:1;17770:22;;;17794:2;17766:31;;;17759:42;;;;17862:2;17841:15;;;-1:-1:-1;;17837:29:77;17822:45;17818:54;;17488:390;-1:-1:-1;17488:390:77:o;17883:1309::-;18261:3;18290:1;18323:6;18317:13;18353:36;18379:9;18353:36;:::i;:::-;18408:1;18425:18;;;18452:133;;;;18599:1;18594:356;;;;18418:532;;18452:133;-1:-1:-1;;18485:24:77;;18473:37;;18558:14;;18551:22;18539:35;;18530:45;;;-1:-1:-1;18452:133:77;;18594:356;18625:6;18622:1;18615:17;18655:4;18700:2;18697:1;18687:16;18725:1;18739:165;18753:6;18750:1;18747:13;18739:165;;;18831:14;;18818:11;;;18811:35;18874:16;;;;18768:10;;18739:165;;;18743:3;;;18933:6;18928:3;18924:16;18917:23;;18418:532;;-1:-1:-1;;;18966:3:77;18959:16;19006:6;19000:13;18984:29;;19022:64;19077:8;19072:2;19067:3;19063:12;19056:4;19048:6;19044:17;19022:64;:::i;:::-;-1:-1:-1;;;19105:18:77;;;;19139:11;;;19132:28;;;;19184:1;19176:10;;17883:1309;-1:-1:-1;;;;;17883:1309:77:o;20828:127::-;20889:10;20884:3;20880:20;20877:1;20870:31;20920:4;20917:1;20910:15;20944:4;20941:1;20934:15;20960:125;21000:4;21028:1;21025;21022:8;21019:34;;;21033:18;;:::i;:::-;-1:-1:-1;21070:9:77;;20960:125::o;21090:128::-;21130:3;21161:1;21157:6;21154:1;21151:13;21148:39;;;21167:18;;:::i;:::-;-1:-1:-1;21203:9:77;;21090:128::o;21223:168::-;21263:7;21329:1;21325;21321:6;21317:14;21314:1;21311:21;21306:1;21299:9;21292:17;21288:45;21285:71;;;21336:18;;:::i;:::-;-1:-1:-1;21376:9:77;;21223:168::o;21396:127::-;21457:10;21452:3;21448:20;21445:1;21438:31;21488:4;21485:1;21478:15;21512:4;21509:1;21502:15;21528:120;21568:1;21594;21584:35;;21599:18;;:::i;:::-;-1:-1:-1;21633:9:77;;21528:120::o;21653:410::-;21855:2;21837:21;;;21894:2;21874:18;;;21867:30;21933:34;21928:2;21913:18;;21906:62;-1:-1:-1;;;21999:2:77;21984:18;;21977:44;22053:3;22038:19;;21653:410::o;22068:407::-;22270:2;22252:21;;;22309:2;22289:18;;;22282:30;22348:34;22343:2;22328:18;;22321:62;-1:-1:-1;;;22414:2:77;22399:18;;22392:41;22465:3;22450:19;;22068:407::o;23974:1352::-;24100:3;24094:10;24127:18;24119:6;24116:30;24113:56;;;24149:18;;:::i;:::-;24178:97;24268:6;24228:38;24260:4;24254:11;24228:38;:::i;:::-;24222:4;24178:97;:::i;:::-;24330:4;;24394:2;24383:14;;24411:1;24406:663;;;;25113:1;25130:6;25127:89;;;-1:-1:-1;25182:19:77;;;25176:26;25127:89;-1:-1:-1;;16234:1:77;16230:11;;;16226:24;16222:29;16212:40;16258:1;16254:11;;;16209:57;25229:81;;24376:944;;24406:663;11978:1;11971:14;;;12015:4;12002:18;;-1:-1:-1;;24442:20:77;;;24560:236;24574:7;24571:1;24568:14;24560:236;;;24663:19;;;24657:26;24642:42;;24755:27;;;;24723:1;24711:14;;;;24590:19;;24560:236;;;24564:3;24824:6;24815:7;24812:19;24809:201;;;24885:19;;;24879:26;-1:-1:-1;;24968:1:77;24964:14;;;24980:3;24960:24;24956:37;24952:42;24937:58;24922:74;;24809:201;-1:-1:-1;;;;;25056:1:77;25040:14;;;25036:22;25023:36;;-1:-1:-1;23974:1352:77:o;25331:414::-;25533:2;25515:21;;;25572:2;25552:18;;;25545:30;25611:34;25606:2;25591:18;;25584:62;-1:-1:-1;;;25677:2:77;25662:18;;25655:48;25735:3;25720:19;;25331:414::o;25750:135::-;25789:3;25810:17;;;25807:43;;25830:18;;:::i;:::-;-1:-1:-1;25877:1:77;25866:13;;25750:135::o;25890:112::-;25922:1;25948;25938:35;;25953:18;;:::i;:::-;-1:-1:-1;25987:9:77;;25890:112::o;26007:127::-;26068:10;26063:3;26059:20;26056:1;26049:31;26099:4;26096:1;26089:15;26123:4;26120:1;26113:15;26139:489;-1:-1:-1;;;;;26408:15:77;;;26390:34;;26460:15;;26455:2;26440:18;;26433:43;26507:2;26492:18;;26485:34;;;26555:3;26550:2;26535:18;;26528:31;;;26333:4;;26576:46;;26602:19;;26594:6;26576:46;:::i;:::-;26568:54;26139:489;-1:-1:-1;;;;;;26139:489:77:o;26633:249::-;26702:6;26755:2;26743:9;26734:7;26730:23;26726:32;26723:52;;;26771:1;26768;26761:12;26723:52;26803:9;26797:16;26822:30;26846:5;26822:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "deleteToken(uint256)": "6297c16c",
    "disableContract()": "894ba833",
    "disabled()": "ee070805",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyPercentage()": "ab69607a",
    "getDefaultRoyaltyReceiver()": "3403c4e9",
    "getMintConfig()": "9338bb5d",
    "init(string,string,address,uint256)": "5edc7c19",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedMinter(address)": "3a3d146f",
    "lockBaseURI()": "53df5c7c",
    "maxTokens()": "e8315742",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "prepareMint(string,uint256)": "b390ac25",
    "prepareMintWithMinter(string,uint256,address)": "b9fbd25c",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDefaultRoyaltyReceiver(address)": "3ebc82c5",
    "setMinterApproval(address,bool)": "0de54ba0",
    "setRoyaltyReceiverForToken(address,uint256)": "efc32cd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenCreator(uint256)": "40c1a064",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateBaseURI(string)": "931688cb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"PrepareMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockedMetadata\",\"type\":\"bool\"}],\"internalType\":\"struct LazySovereignNFT.MintConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"prepareMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"prepareMintWithMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setDefaultRoyaltyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isMinter\",\"type\":\"bool\"}],\"name\":\"setMinterApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyReceiverForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements an ERC721 compliant NFT (Non-Fungible Token) with lazy minting.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"deleteToken(uint256)\":{\"details\":\"Delete a token with the given ID.\",\"params\":{\"_tokenId\":\"The ID of the token to delete.\"}},\"disableContract()\":{\"details\":\"Disable the contract, preventing further minting.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getMintConfig()\":{\"details\":\"Get the current minting configuration.\",\"returns\":{\"_0\":\"mintConfig the mint config.\"}},\"init(string,string,address,uint256)\":{\"details\":\"Contract initialization function.\",\"params\":{\"_creator\":\"The address of the contract creator.\",\"_maxTokens\":\"The maximum number of tokens that can be minted.\",\"_name\":\"The name of the NFT contract.\",\"_symbol\":\"The symbol of the NFT contract.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedMinter(address)\":{\"details\":\"Checks if the supplied address is approved for minting\",\"params\":{\"_address\":\"The address of the minter.\"},\"returns\":{\"_0\":\"bool, whether the address is approved for minting.\"}},\"lockBaseURI()\":{\"details\":\"Lock the metadata to prevent  further updates.\"},\"mintTo(address)\":{\"details\":\"Mint a new token to the specified receiver.\",\"params\":{\"_receiver\":\"The address of the token receiver.\"},\"returns\":{\"_0\":\"uint256 Token Id of the new token.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"prepareMint(string,uint256)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"prepareMintWithMinter(string,uint256,address)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_minter\":\"The address of the minter.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setDefaultRoyaltyReceiver(address)\":{\"details\":\"Set the default royalty receiver address.\",\"params\":{\"_receiver\":\"The address of the default royalty receiver.\"}},\"setMinterApproval(address,bool)\":{\"details\":\"Set a minter for the contract\",\"params\":{\"_isMinter\":\"bool of whether the address is a minter.\",\"_minter\":\"address of the minter.\"}},\"setRoyaltyReceiverForToken(address,uint256)\":{\"details\":\"Set a specific royalty receiver address for a token.\",\"params\":{\"_receiver\":\"The address of the royalty receiver.\",\"_tokenId\":\"The ID of the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenCreator(uint256)\":{\"details\":\"Get the address of the token creator for a given token ID.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"address of the token creator.\"}},\"tokenURI(uint256)\":{\"details\":\"Get the token URI for a specific token.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token's URI.\"}},\"totalSupply()\":{\"details\":\"Get the total supply of tokens in existence.\",\"returns\":{\"_0\":\"The total supply of tokens.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseURI(string)\":{\"details\":\"Update the base URI.\",\"params\":{\"_baseURI\":\"The new base URI.\"}}},\"title\":\"LazySovereignNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":\"LazySovereignNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aux/=lib/aux/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":solmate/=lib/royalty-guard/lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad\",\"dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740\",\"dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d\",\"dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c\",\"dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579\",\"dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78\",\"dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5\",\"dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp\"]},\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":{\"keccak256\":\"0x2b601fa21108f1c62a3c58a6f1391815384d03d515a7e1162253d03238a773bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c2569f069fb29ec2ec336847305375914d253b96329e2861ae9466aabe3e8af\",\"dweb:/ipfs/QmTVsoJ4KnZTYWnVsFCzmhzMTPSQruuRvdoZ2dQqQheuZX\"]},\"src/token/extensions/ERC2981Upgradeable.sol\":{\"keccak256\":\"0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465\",\"dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA\"]},\"src/token/extensions/IERC2981.sol\":{\"keccak256\":\"0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b\",\"dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w\"]},\"src/token/extensions/ITokenCreator.sol\":{\"keccak256\":\"0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42\",\"dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ContractDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PrepareMint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "disabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMintConfig",
          "outputs": [
            {
              "internalType": "struct LazySovereignNFT.MintConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numberOfTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseURI",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "lockedMetadata",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockBaseURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMint"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMintWithMinter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isMinter",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinterApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyReceiverForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenCreator",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBaseURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
          },
          "deleteToken(uint256)": {
            "details": "Delete a token with the given ID.",
            "params": {
              "_tokenId": "The ID of the token to delete."
            }
          },
          "disableContract()": {
            "details": "Disable the contract, preventing further minting."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getMintConfig()": {
            "details": "Get the current minting configuration.",
            "returns": {
              "_0": "mintConfig the mint config."
            }
          },
          "init(string,string,address,uint256)": {
            "details": "Contract initialization function.",
            "params": {
              "_creator": "The address of the contract creator.",
              "_maxTokens": "The maximum number of tokens that can be minted.",
              "_name": "The name of the NFT contract.",
              "_symbol": "The symbol of the NFT contract."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedMinter(address)": {
            "details": "Checks if the supplied address is approved for minting",
            "params": {
              "_address": "The address of the minter."
            },
            "returns": {
              "_0": "bool, whether the address is approved for minting."
            }
          },
          "lockBaseURI()": {
            "details": "Lock the metadata to prevent  further updates."
          },
          "mintTo(address)": {
            "details": "Mint a new token to the specified receiver.",
            "params": {
              "_receiver": "The address of the token receiver."
            },
            "returns": {
              "_0": "uint256 Token Id of the new token."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "prepareMint(string,uint256)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "prepareMintWithMinter(string,uint256,address)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_minter": "The address of the minter.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "_salePrice": "- the sale price of the NFT asset specified by _tokenId",
              "_tokenId": "- the NFT asset queried for royalty information"
            },
            "returns": {
              "receiver": "- address of who should be sent the royalty payment",
              "royaltyAmount": "- the royalty payment amount for _salePrice"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setDefaultRoyaltyReceiver(address)": {
            "details": "Set the default royalty receiver address.",
            "params": {
              "_receiver": "The address of the default royalty receiver."
            }
          },
          "setMinterApproval(address,bool)": {
            "details": "Set a minter for the contract",
            "params": {
              "_isMinter": "bool of whether the address is a minter.",
              "_minter": "address of the minter."
            }
          },
          "setRoyaltyReceiverForToken(address,uint256)": {
            "details": "Set a specific royalty receiver address for a token.",
            "params": {
              "_receiver": "The address of the royalty receiver.",
              "_tokenId": "The ID of the token."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenCreator(uint256)": {
            "details": "Get the address of the token creator for a given token ID.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "address of the token creator."
            }
          },
          "tokenURI(uint256)": {
            "details": "Get the token URI for a specific token.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token's URI."
            }
          },
          "totalSupply()": {
            "details": "Get the total supply of tokens in existence.",
            "returns": {
              "_0": "The total supply of tokens."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateBaseURI(string)": {
            "details": "Update the base URI.",
            "params": {
              "_baseURI": "The new base URI."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "aux/=lib/aux/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/",
        "rareprotocol/aux/=lib/aux/src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "solmate/=lib/royalty-guard/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": "LazySovereignNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e",
        "urls": [
          "bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad",
          "dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9",
        "urls": [
          "bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740",
          "dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a",
        "urls": [
          "bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d",
          "dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921",
        "urls": [
          "bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c",
          "dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol": {
        "keccak256": "0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d",
        "urls": [
          "bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579",
          "dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37",
        "urls": [
          "bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78",
          "dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol": {
        "keccak256": "0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512",
        "urls": [
          "bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5",
          "dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": {
        "keccak256": "0x2b601fa21108f1c62a3c58a6f1391815384d03d515a7e1162253d03238a773bf",
        "urls": [
          "bzz-raw://5c2569f069fb29ec2ec336847305375914d253b96329e2861ae9466aabe3e8af",
          "dweb:/ipfs/QmTVsoJ4KnZTYWnVsFCzmhzMTPSQruuRvdoZ2dQqQheuZX"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ERC2981Upgradeable.sol": {
        "keccak256": "0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d",
        "urls": [
          "bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465",
          "dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA"
        ],
        "license": "MIT"
      },
      "src/token/extensions/IERC2981.sol": {
        "keccak256": "0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd",
        "urls": [
          "bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b",
          "dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ITokenCreator.sol": {
        "keccak256": "0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6",
        "urls": [
          "bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42",
          "dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol",
    "id": 34023,
    "exportedSymbols": {
      "AddressUpgradeable": [
        27536
      ],
      "ContextUpgradeable": [
        27578
      ],
      "CountersUpgradeable": [
        27652
      ],
      "ERC165Upgradeable": [
        27899
      ],
      "ERC2981Upgradeable": [
        35531
      ],
      "ERC721BurnableUpgradeable": [
        27266
      ],
      "ERC721Upgradeable": [
        27082
      ],
      "IERC165Upgradeable": [
        27911
      ],
      "IERC2981": [
        35547
      ],
      "IERC721MetadataUpgradeable": [
        27293
      ],
      "IERC721ReceiverUpgradeable": [
        27100
      ],
      "IERC721Upgradeable": [
        27216
      ],
      "ITokenCreator": [
        35557
      ],
      "Initializable": [
        25062
      ],
      "LazySovereignNFT": [
        34022
      ],
      "OwnableUpgradeable": [
        24920
      ],
      "SafeMathUpgradeable": [
        28223
      ],
      "StringsUpgradeable": [
        27855
      ]
    },
    "nodeType": "SourceUnit",
    "src": "85:12230:63",
    "nodes": [
      {
        "id": 33473,
        "nodeType": "PragmaDirective",
        "src": "85:23:63",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 33474,
        "nodeType": "ImportDirective",
        "src": "110:79:63",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 27083,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33475,
        "nodeType": "ImportDirective",
        "src": "190:98:63",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 27267,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33476,
        "nodeType": "ImportDirective",
        "src": "289:86:63",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 27900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33477,
        "nodeType": "ImportDirective",
        "src": "376:74:63",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 24921,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33478,
        "nodeType": "ImportDirective",
        "src": "451:74:63",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/CountersUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 27653,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33479,
        "nodeType": "ImportDirective",
        "src": "526:79:63",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 28224,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33480,
        "nodeType": "ImportDirective",
        "src": "606:47:63",
        "nodes": [],
        "absolutePath": "src/token/extensions/ITokenCreator.sol",
        "file": "../../../extensions/ITokenCreator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 35558,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33481,
        "nodeType": "ImportDirective",
        "src": "654:52:63",
        "nodes": [],
        "absolutePath": "src/token/extensions/ERC2981Upgradeable.sol",
        "file": "../../../extensions/ERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34023,
        "sourceUnit": 35532,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34022,
        "nodeType": "ContractDefinition",
        "src": "841:11473:63",
        "nodes": [
          {
            "id": 33497,
            "nodeType": "UsingForDirective",
            "src": "1019:38:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33495,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28223,
              "src": "1025:19:63"
            },
            "typeName": {
              "id": 33496,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1049:7:63",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 33500,
            "nodeType": "UsingForDirective",
            "src": "1062:37:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33498,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27855,
              "src": "1068:18:63"
            },
            "typeName": {
              "id": 33499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1091:7:63",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 33504,
            "nodeType": "UsingForDirective",
            "src": "1104:58:63",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33501,
              "name": "CountersUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27652,
              "src": "1110:19:63"
            },
            "typeName": {
              "id": 33503,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33502,
                "name": "CountersUpgradeable.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27584,
                "src": "1134:27:63"
              },
              "referencedDeclaration": 27584,
              "src": "1134:27:63",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$27584_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "id": 33511,
            "nodeType": "StructDefinition",
            "src": "1347:110:63",
            "nodes": [],
            "canonicalName": "LazySovereignNFT.MintConfig",
            "members": [
              {
                "constant": false,
                "id": 33506,
                "mutability": "mutable",
                "name": "numberOfTokens",
                "nameLocation": "1383:14:63",
                "nodeType": "VariableDeclaration",
                "scope": 33511,
                "src": "1375:22:63",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33505,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1375:7:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33508,
                "mutability": "mutable",
                "name": "baseURI",
                "nameLocation": "1414:7:63",
                "nodeType": "VariableDeclaration",
                "scope": 33511,
                "src": "1407:14:63",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 33507,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1407:6:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33510,
                "mutability": "mutable",
                "name": "lockedMetadata",
                "nameLocation": "1436:14:63",
                "nodeType": "VariableDeclaration",
                "scope": 33511,
                "src": "1431:19:63",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 33509,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1431:4:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MintConfig",
            "nameLocation": "1354:10:63",
            "scope": 34022,
            "visibility": "public"
          },
          {
            "id": 33513,
            "nodeType": "VariableDeclaration",
            "src": "1779:20:63",
            "nodes": [],
            "constant": false,
            "functionSelector": "ee070805",
            "mutability": "mutable",
            "name": "disabled",
            "nameLocation": "1791:8:63",
            "scope": 34022,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 33512,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1779:4:63",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33515,
            "nodeType": "VariableDeclaration",
            "src": "1857:24:63",
            "nodes": [],
            "constant": false,
            "functionSelector": "e8315742",
            "mutability": "mutable",
            "name": "maxTokens",
            "nameLocation": "1872:9:63",
            "scope": 34022,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1857:7:63",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33519,
            "nodeType": "VariableDeclaration",
            "src": "2054:50:63",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenApprovals",
            "nameLocation": "2090:14:63",
            "scope": 34022,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 33518,
              "keyType": {
                "id": 33516,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2062:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2054:27:63",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 33517,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2073:7:63",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 33523,
            "nodeType": "VariableDeclaration",
            "src": "2176:48:63",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minterAddresses",
            "nameLocation": "2209:15:63",
            "scope": 34022,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 33522,
              "keyType": {
                "id": 33520,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2184:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2176:24:63",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 33521,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2195:4:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 33526,
            "nodeType": "VariableDeclaration",
            "src": "2285:50:63",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenIdCounter",
            "nameLocation": "2321:14:63",
            "scope": 34022,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$27584_storage",
              "typeString": "struct CountersUpgradeable.Counter"
            },
            "typeName": {
              "id": 33525,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33524,
                "name": "CountersUpgradeable.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27584,
                "src": "2285:27:63"
              },
              "referencedDeclaration": 27584,
              "src": "2285:27:63",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$27584_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 33529,
            "nodeType": "VariableDeclaration",
            "src": "2380:29:63",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mintConfig",
            "nameLocation": "2399:10:63",
            "scope": 34022,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
              "typeString": "struct LazySovereignNFT.MintConfig"
            },
            "typeName": {
              "id": 33528,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33527,
                "name": "MintConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33511,
                "src": "2380:10:63"
              },
              "referencedDeclaration": 33511,
              "src": "2380:10:63",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MintConfig_$33511_storage_ptr",
                "typeString": "struct LazySovereignNFT.MintConfig"
              }
            },
            "visibility": "private"
          },
          {
            "id": 33533,
            "nodeType": "EventDefinition",
            "src": "2638:45:63",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd",
            "name": "ContractDisabled",
            "nameLocation": "2644:16:63",
            "parameters": {
              "id": 33532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33531,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2677:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33533,
                  "src": "2661:20:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2661:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2660:22:63"
            }
          },
          {
            "id": 33539,
            "nodeType": "EventDefinition",
            "src": "2729:66:63",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba19",
            "name": "PrepareMint",
            "nameLocation": "2735:11:63",
            "parameters": {
              "id": 33538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33535,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "numberOfTokens",
                  "nameLocation": "2763:14:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33539,
                  "src": "2747:30:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33537,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2786:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33539,
                  "src": "2779:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33536,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:48:63"
            }
          },
          {
            "id": 33543,
            "nodeType": "EventDefinition",
            "src": "2839:37:63",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e",
            "name": "MetadataLocked",
            "nameLocation": "2845:14:63",
            "parameters": {
              "id": 33542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33541,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2867:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33543,
                  "src": "2860:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33540,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2859:16:63"
            }
          },
          {
            "id": 33547,
            "nodeType": "EventDefinition",
            "src": "2921:38:63",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e",
            "name": "MetadataUpdated",
            "nameLocation": "2927:15:63",
            "parameters": {
              "id": 33546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2950:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33547,
                  "src": "2943:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2942:16:63"
            }
          },
          {
            "id": 33608,
            "nodeType": "FunctionDefinition",
            "src": "3441:548:63",
            "nodes": [],
            "body": {
              "id": 33607,
              "nodeType": "Block",
              "src": "3598:391:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33562,
                          "name": "_creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33554,
                          "src": "3616:8:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3636:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3628:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33563,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3628:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3628:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3616:22:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746f722063616e6e6f74206265206e756c6c2061646472657373",
                        "id": 33568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3640:32:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6b5b1211b5e6bbc5108a4538b47b57acfb95986a81d99f9ebc78a6dbfa62ee",
                          "typeString": "literal_string \"creator cannot be null address\""
                        },
                        "value": "creator cannot be null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6b5b1211b5e6bbc5108a4538b47b57acfb95986a81d99f9ebc78a6dbfa62ee",
                          "typeString": "literal_string \"creator cannot be null address\""
                        }
                      ],
                      "id": 33561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3608:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:65:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33570,
                  "nodeType": "ExpressionStatement",
                  "src": "3608:65:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 33572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3712:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 33571,
                      "name": "_setDefaultRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35514,
                      "src": "3683:28:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 33573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3683:32:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33574,
                  "nodeType": "ExpressionStatement",
                  "src": "3683:32:63"
                },
                {
                  "expression": {
                    "id": 33577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33575,
                      "name": "disabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33513,
                      "src": "3725:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 33576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3736:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3725:16:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33578,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:16:63"
                },
                {
                  "expression": {
                    "id": 33581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33579,
                      "name": "maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33515,
                      "src": "3751:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33580,
                      "name": "_maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33556,
                      "src": "3763:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3751:22:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33582,
                  "nodeType": "ExpressionStatement",
                  "src": "3751:22:63"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33583,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24823,
                      "src": "3784:14:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3784:16:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33585,
                  "nodeType": "ExpressionStatement",
                  "src": "3784:16:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33587,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33550,
                        "src": "3824:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 33588,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33552,
                        "src": "3831:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 33586,
                      "name": "__ERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26256,
                      "src": "3810:13:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 33589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3810:29:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33590,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:29:63"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33591,
                      "name": "__ERC165_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27870,
                      "src": "3849:13:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:15:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33593,
                  "nodeType": "ExpressionStatement",
                  "src": "3849:15:63"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33594,
                      "name": "__ERC2981__init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35397,
                      "src": "3874:15:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:17:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33596,
                  "nodeType": "ExpressionStatement",
                  "src": "3874:17:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33598,
                        "name": "_creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33554,
                        "src": "3929:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33597,
                      "name": "_setDefaultRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35455,
                      "src": "3902:26:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3902:36:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33600,
                  "nodeType": "ExpressionStatement",
                  "src": "3902:36:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33604,
                        "name": "_creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33554,
                        "src": "3973:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33601,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3949:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFT_$34022_$",
                          "typeString": "type(contract super LazySovereignNFT)"
                        }
                      },
                      "id": 33603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24894,
                      "src": "3949:23:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3949:33:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33606,
                  "nodeType": "ExpressionStatement",
                  "src": "3949:33:63"
                }
              ]
            },
            "documentation": {
              "id": 33548,
              "nodeType": "StructuredDocumentation",
              "src": "3141:295:63",
              "text": " @dev Contract initialization function.\n @param _name The name of the NFT contract.\n @param _symbol The symbol of the NFT contract.\n @param _creator The address of the contract creator.\n @param _maxTokens The maximum number of tokens that can be minted."
            },
            "functionSelector": "5edc7c19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33558,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24964,
                  "src": "3586:11:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "3586:11:63"
              }
            ],
            "name": "init",
            "nameLocation": "3450:4:63",
            "parameters": {
              "id": 33557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33550,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3480:5:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33608,
                  "src": "3464:21:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3464:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33552,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3511:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33608,
                  "src": "3495:23:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33554,
                  "mutability": "mutable",
                  "name": "_creator",
                  "nameLocation": "3536:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33608,
                  "src": "3528:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3528:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33556,
                  "mutability": "mutable",
                  "name": "_maxTokens",
                  "nameLocation": "3562:10:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33608,
                  "src": "3554:18:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3454:124:63"
            },
            "returnParameters": {
              "id": 33560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3598:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33619,
            "nodeType": "ModifierDefinition",
            "src": "4255:105:63",
            "nodes": [],
            "body": {
              "id": 33618,
              "nodeType": "Block",
              "src": "4280:80:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4298:9:63",
                        "subExpression": {
                          "id": 33612,
                          "name": "disabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33513,
                          "src": "4299:8:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206d757374206e6f742062652064697361626c65642e",
                        "id": 33614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4309:32:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b71ca1c3bd528156808cb7a73ab2c5a516c90c9e4e66cd32f11bb4e07aeb5ad",
                          "typeString": "literal_string \"Contract must not be disabled.\""
                        },
                        "value": "Contract must not be disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b71ca1c3bd528156808cb7a73ab2c5a516c90c9e4e66cd32f11bb4e07aeb5ad",
                          "typeString": "literal_string \"Contract must not be disabled.\""
                        }
                      ],
                      "id": 33611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4290:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4290:52:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33616,
                  "nodeType": "ExpressionStatement",
                  "src": "4290:52:63"
                },
                {
                  "id": 33617,
                  "nodeType": "PlaceholderStatement",
                  "src": "4352:1:63"
                }
              ]
            },
            "documentation": {
              "id": 33609,
              "nodeType": "StructuredDocumentation",
              "src": "4176:74:63",
              "text": " @dev Modifier to check if the contract is not disabled."
            },
            "name": "ifNotDisabled",
            "nameLocation": "4264:13:63",
            "parameters": {
              "id": 33610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4277:2:63"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 33638,
            "nodeType": "FunctionDefinition",
            "src": "4722:166:63",
            "nodes": [],
            "body": {
              "id": 33637,
              "nodeType": "Block",
              "src": "4835:53:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 33631,
                        "name": "minterAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33523,
                        "src": "4845:15:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 33633,
                      "indexExpression": {
                        "id": 33632,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33622,
                        "src": "4861:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4845:24:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33634,
                      "name": "_isMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33624,
                      "src": "4872:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4845:36:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33636,
                  "nodeType": "ExpressionStatement",
                  "src": "4845:36:63"
                }
              ]
            },
            "documentation": {
              "id": 33620,
              "nodeType": "StructuredDocumentation",
              "src": "4554:163:63",
              "text": " @dev Set a minter for the contract\n @param _minter address of the minter.\n @param _isMinter bool of whether the address is a minter."
            },
            "functionSelector": "0de54ba0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33627,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33626,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "4811:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "4811:9:63"
              },
              {
                "id": 33629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33628,
                  "name": "ifNotDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33619,
                  "src": "4821:13:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "4821:13:63"
              }
            ],
            "name": "setMinterApproval",
            "nameLocation": "4731:17:63",
            "parameters": {
              "id": 33625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33622,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "4766:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33638,
                  "src": "4758:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33624,
                  "mutability": "mutable",
                  "name": "_isMinter",
                  "nameLocation": "4788:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33638,
                  "src": "4783:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33623,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4748:55:63"
            },
            "returnParameters": {
              "id": 33630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4835:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33656,
            "nodeType": "FunctionDefinition",
            "src": "5125:181:63",
            "nodes": [],
            "body": {
              "id": 33655,
              "nodeType": "Block",
              "src": "5250:56:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33651,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33641,
                        "src": "5273:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 33652,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33643,
                        "src": "5283:15:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33650,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34021,
                      "src": "5260:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string calldata,uint256)"
                      }
                    },
                    "id": 33653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5260:39:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33654,
                  "nodeType": "ExpressionStatement",
                  "src": "5260:39:63"
                }
              ]
            },
            "documentation": {
              "id": 33639,
              "nodeType": "StructuredDocumentation",
              "src": "4894:226:63",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting."
            },
            "functionSelector": "b390ac25",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33646,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33645,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "5226:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "5226:9:63"
              },
              {
                "id": 33648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33647,
                  "name": "ifNotDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33619,
                  "src": "5236:13:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "5236:13:63"
              }
            ],
            "name": "prepareMint",
            "nameLocation": "5134:11:63",
            "parameters": {
              "id": 33644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33641,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5171:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33656,
                  "src": "5155:24:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33640,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5155:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33643,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "5197:15:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33656,
                  "src": "5189:23:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5189:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5145:73:63"
            },
            "returnParameters": {
              "id": 33649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5250:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33682,
            "nodeType": "FunctionDefinition",
            "src": "5621:257:63",
            "nodes": [],
            "body": {
              "id": 33681,
              "nodeType": "Block",
              "src": "5781:97:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33671,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33659,
                        "src": "5804:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 33672,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33661,
                        "src": "5814:15:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33670,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34021,
                      "src": "5791:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string calldata,uint256)"
                      }
                    },
                    "id": 33673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5791:39:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33674,
                  "nodeType": "ExpressionStatement",
                  "src": "5791:39:63"
                },
                {
                  "expression": {
                    "id": 33679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 33675,
                        "name": "minterAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33523,
                        "src": "5840:15:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 33677,
                      "indexExpression": {
                        "id": 33676,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33663,
                        "src": "5856:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5840:24:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 33678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5867:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5840:31:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33680,
                  "nodeType": "ExpressionStatement",
                  "src": "5840:31:63"
                }
              ]
            },
            "documentation": {
              "id": 33657,
              "nodeType": "StructuredDocumentation",
              "src": "5312:304:63",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting.\n @param _minter The address of the minter."
            },
            "functionSelector": "b9fbd25c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33666,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33665,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "5757:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "5757:9:63"
              },
              {
                "id": 33668,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33667,
                  "name": "ifNotDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33619,
                  "src": "5767:13:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "5767:13:63"
              }
            ],
            "name": "prepareMintWithMinter",
            "nameLocation": "5630:21:63",
            "parameters": {
              "id": 33664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33659,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5677:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33682,
                  "src": "5661:24:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5661:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33661,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "5703:15:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33682,
                  "src": "5695:23:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5695:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33663,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "5736:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33682,
                  "src": "5728:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5728:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5651:98:63"
            },
            "returnParameters": {
              "id": 33669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5781:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33715,
            "nodeType": "FunctionDefinition",
            "src": "6065:386:63",
            "nodes": [],
            "body": {
              "id": 33714,
              "nodeType": "Block",
              "src": "6141:310:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 33697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 33693,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6172:3:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6172:10:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33695,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24843,
                              "src": "6186:5:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6186:7:63",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6172:21:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 33698,
                            "name": "minterAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33523,
                            "src": "6197:15:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 33701,
                          "indexExpression": {
                            "expression": {
                              "id": 33699,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6213:3:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6213:10:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6197:27:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6172:52:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f766564206d696e7465722063616e206d696e74",
                        "id": 33703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6238:50:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_154b6b63a911da25ac18acc635a749cf602b944b6188d913be9072c29e435a47",
                          "typeString": "literal_string \"lazyMint::only owner or approved minter can mint\""
                        },
                        "value": "lazyMint::only owner or approved minter can mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_154b6b63a911da25ac18acc635a749cf602b944b6188d913be9072c29e435a47",
                          "typeString": "literal_string \"lazyMint::only owner or approved minter can mint\""
                        }
                      ],
                      "id": 33692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6151:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6151:147:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33705,
                  "nodeType": "ExpressionStatement",
                  "src": "6151:147:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33707,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33685,
                        "src": "6341:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33708,
                          "name": "getDefaultRoyaltyPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35530,
                          "src": "6364:27:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 33709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6364:29:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33710,
                          "name": "getDefaultRoyaltyReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35522,
                          "src": "6407:25:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 33711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6407:27:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33706,
                      "name": "_createToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33983,
                      "src": "6315:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 33712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6315:129:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33691,
                  "id": 33713,
                  "nodeType": "Return",
                  "src": "6308:136:63"
                }
              ]
            },
            "documentation": {
              "id": 33683,
              "nodeType": "StructuredDocumentation",
              "src": "5884:176:63",
              "text": " @dev Mint a new token to the specified receiver.\n @param _receiver The address of the token receiver.\n @return uint256 Token Id of the new token."
            },
            "functionSelector": "755edd17",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33688,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33687,
                  "name": "ifNotDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33619,
                  "src": "6109:13:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "6109:13:63"
              }
            ],
            "name": "mintTo",
            "nameLocation": "6074:6:63",
            "parameters": {
              "id": 33686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33685,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "6089:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33715,
                  "src": "6081:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6081:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6080:19:63"
            },
            "returnParameters": {
              "id": 33691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33715,
                  "src": "6132:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6132:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6131:9:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33736,
            "nodeType": "FunctionDefinition",
            "src": "6573:196:63",
            "nodes": [],
            "body": {
              "id": 33735,
              "nodeType": "Block",
              "src": "6619:150:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 33723,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33718,
                              "src": "6658:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33722,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26357,
                            "src": "6650:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 33724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6650:17:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 33725,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6671:3:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6671:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6650:31:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420626520746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 33728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6695:33:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53b82fbec1ffee6cd23478fb42d47a3c9d94588d16a7244f1dfbe7e93dd41efb",
                          "typeString": "literal_string \"Must be the owner of the token.\""
                        },
                        "value": "Must be the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53b82fbec1ffee6cd23478fb42d47a3c9d94588d16a7244f1dfbe7e93dd41efb",
                          "typeString": "literal_string \"Must be the owner of the token.\""
                        }
                      ],
                      "id": 33721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6629:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6629:109:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33730,
                  "nodeType": "ExpressionStatement",
                  "src": "6629:109:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33732,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33718,
                        "src": "6753:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33731,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27260,
                      "src": "6748:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 33733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6748:14:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33734,
                  "nodeType": "ExpressionStatement",
                  "src": "6748:14:63"
                }
              ]
            },
            "documentation": {
              "id": 33716,
              "nodeType": "StructuredDocumentation",
              "src": "6457:111:63",
              "text": " @dev Delete a token with the given ID.\n @param _tokenId The ID of the token to delete."
            },
            "functionSelector": "6297c16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteToken",
            "nameLocation": "6582:11:63",
            "parameters": {
              "id": 33719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33718,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6602:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33736,
                  "src": "6594:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6594:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6593:18:63"
            },
            "returnParameters": {
              "id": 33720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6619:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33752,
            "nodeType": "FunctionDefinition",
            "src": "6853:119:63",
            "nodes": [],
            "body": {
              "id": 33751,
              "nodeType": "Block",
              "src": "6897:75:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33742,
                      "name": "disabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33513,
                      "src": "6907:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 33743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6918:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6907:15:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33745,
                  "nodeType": "ExpressionStatement",
                  "src": "6907:15:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33747,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6954:3:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6954:10:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33746,
                      "name": "ContractDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33533,
                      "src": "6937:16:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6937:28:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33750,
                  "nodeType": "EmitStatement",
                  "src": "6932:33:63"
                }
              ]
            },
            "documentation": {
              "id": 33737,
              "nodeType": "StructuredDocumentation",
              "src": "6775:73:63",
              "text": " @dev Disable the contract, preventing further minting."
            },
            "functionSelector": "894ba833",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33740,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33739,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "6887:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "6887:9:63"
              }
            ],
            "name": "disableContract",
            "nameLocation": "6862:15:63",
            "parameters": {
              "id": 33738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6877:2:63"
            },
            "returnParameters": {
              "id": 33741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6897:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33765,
            "nodeType": "FunctionDefinition",
            "src": "7117:127:63",
            "nodes": [],
            "body": {
              "id": 33764,
              "nodeType": "Block",
              "src": "7190:54:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33761,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33755,
                        "src": "7227:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33760,
                      "name": "_setDefaultRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35455,
                      "src": "7200:26:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7200:37:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33763,
                  "nodeType": "ExpressionStatement",
                  "src": "7200:37:63"
                }
              ]
            },
            "documentation": {
              "id": 33753,
              "nodeType": "StructuredDocumentation",
              "src": "6978:134:63",
              "text": " @dev Set the default royalty receiver address.\n @param _receiver The address of the default royalty receiver."
            },
            "functionSelector": "3ebc82c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33758,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33757,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "7180:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "7180:9:63"
              }
            ],
            "name": "setDefaultRoyaltyReceiver",
            "nameLocation": "7126:25:63",
            "parameters": {
              "id": 33756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33755,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "7160:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33765,
                  "src": "7152:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7152:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7151:19:63"
            },
            "returnParameters": {
              "id": 33759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7190:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33782,
            "nodeType": "FunctionDefinition",
            "src": "7436:169:63",
            "nodes": [],
            "body": {
              "id": 33781,
              "nodeType": "Block",
              "src": "7550:55:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 33775,
                        "name": "royaltyReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35380,
                        "src": "7560:16:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 33777,
                      "indexExpression": {
                        "id": 33776,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33770,
                        "src": "7577:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7560:26:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33778,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33768,
                      "src": "7589:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7560:38:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33780,
                  "nodeType": "ExpressionStatement",
                  "src": "7560:38:63"
                }
              ]
            },
            "documentation": {
              "id": 33766,
              "nodeType": "StructuredDocumentation",
              "src": "7250:181:63",
              "text": " @dev Set a specific royalty receiver address for a token.\n @param _receiver The address of the royalty receiver.\n @param _tokenId The ID of the token."
            },
            "functionSelector": "efc32cd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33773,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33772,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "7540:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "7540:9:63"
              }
            ],
            "name": "setRoyaltyReceiverForToken",
            "nameLocation": "7445:26:63",
            "parameters": {
              "id": 33771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33768,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "7489:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33782,
                  "src": "7481:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7481:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33770,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7516:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33782,
                  "src": "7508:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7508:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7471:59:63"
            },
            "returnParameters": {
              "id": 33774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7550:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33808,
            "nodeType": "FunctionDefinition",
            "src": "7701:271:63",
            "nodes": [],
            "body": {
              "id": 33807,
              "nodeType": "Block",
              "src": "7769:203:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7800:26:63",
                        "subExpression": {
                          "expression": {
                            "id": 33791,
                            "name": "mintConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33529,
                            "src": "7801:10:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                              "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                            }
                          },
                          "id": 33792,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lockedMetadata",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33510,
                          "src": "7801:25:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757064617465426173655552493a3a6d65746164617461206973206c6f636b6564",
                        "id": 33794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7840:35:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e879a4eb0b95d57c5322495d59f06e56373f394de36bd10c977c1387a356c74",
                          "typeString": "literal_string \"updateBaseURI::metadata is locked\""
                        },
                        "value": "updateBaseURI::metadata is locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e879a4eb0b95d57c5322495d59f06e56373f394de36bd10c977c1387a356c74",
                          "typeString": "literal_string \"updateBaseURI::metadata is locked\""
                        }
                      ],
                      "id": 33790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7779:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7779:106:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33796,
                  "nodeType": "ExpressionStatement",
                  "src": "7779:106:63"
                },
                {
                  "expression": {
                    "id": 33801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33797,
                        "name": "mintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33529,
                        "src": "7896:10:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                          "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                        }
                      },
                      "id": 33799,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33508,
                      "src": "7896:18:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33800,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33785,
                      "src": "7917:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7896:29:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33802,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:29:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33804,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33785,
                        "src": "7956:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 33803,
                      "name": "MetadataUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33547,
                      "src": "7940:15:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 33805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7940:25:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33806,
                  "nodeType": "EmitStatement",
                  "src": "7935:30:63"
                }
              ]
            },
            "documentation": {
              "id": 33783,
              "nodeType": "StructuredDocumentation",
              "src": "7611:85:63",
              "text": " @dev Update the base URI.\n @param _baseURI The new base URI."
            },
            "functionSelector": "931688cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33788,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33787,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "7759:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "7759:9:63"
              }
            ],
            "name": "updateBaseURI",
            "nameLocation": "7710:13:63",
            "parameters": {
              "id": 33786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33785,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "7740:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33808,
                  "src": "7724:24:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33784,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7724:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7723:26:63"
            },
            "returnParameters": {
              "id": 33789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7769:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33826,
            "nodeType": "FunctionDefinition",
            "src": "8053:140:63",
            "nodes": [],
            "body": {
              "id": 33825,
              "nodeType": "Block",
              "src": "8095:98:63",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33815,
                          "name": "mintConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33529,
                          "src": "8125:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                            "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                          }
                        },
                        "id": 33816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "baseURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33508,
                        "src": "8125:18:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 33814,
                      "name": "MetadataLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33543,
                      "src": "8110:14:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 33817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8110:34:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33818,
                  "nodeType": "EmitStatement",
                  "src": "8105:39:63"
                },
                {
                  "expression": {
                    "id": 33823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 33819,
                        "name": "mintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33529,
                        "src": "8154:10:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                          "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                        }
                      },
                      "id": 33821,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lockedMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33510,
                      "src": "8154:25:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 33822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8182:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8154:32:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33824,
                  "nodeType": "ExpressionStatement",
                  "src": "8154:32:63"
                }
              ]
            },
            "documentation": {
              "id": 33809,
              "nodeType": "StructuredDocumentation",
              "src": "7978:70:63",
              "text": " @dev Lock the metadata to prevent  further updates."
            },
            "functionSelector": "53df5c7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33812,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33811,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24857,
                  "src": "8085:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "8085:9:63"
              }
            ],
            "name": "lockBaseURI",
            "nameLocation": "8062:11:63",
            "parameters": {
              "id": 33810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8073:2:63"
            },
            "returnParameters": {
              "id": 33813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8095:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33839,
            "nodeType": "FunctionDefinition",
            "src": "8584:135:63",
            "nodes": [],
            "body": {
              "id": 33838,
              "nodeType": "Block",
              "src": "8670:49:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 33834,
                      "name": "minterAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33523,
                      "src": "8687:15:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 33836,
                    "indexExpression": {
                      "id": 33835,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33829,
                      "src": "8703:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8687:25:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 33833,
                  "id": 33837,
                  "nodeType": "Return",
                  "src": "8680:32:63"
                }
              ]
            },
            "documentation": {
              "id": 33827,
              "nodeType": "StructuredDocumentation",
              "src": "8385:194:63",
              "text": " @dev Checks if the supplied address is approved for minting\n @param _address The address of the minter.\n @return bool, whether the address is approved for minting."
            },
            "functionSelector": "3a3d146f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedMinter",
            "nameLocation": "8593:16:63",
            "parameters": {
              "id": 33830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33829,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "8627:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33839,
                  "src": "8619:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8619:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8609:32:63"
            },
            "returnParameters": {
              "id": 33833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33839,
                  "src": "8664:4:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33831,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8664:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8663:6:63"
            },
            "scope": 34022,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33855,
            "nodeType": "FunctionDefinition",
            "src": "8901:141:63",
            "nodes": [],
            "body": {
              "id": 33854,
              "nodeType": "Block",
              "src": "9002:40:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33850,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24843,
                          "src": "9027:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 33851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9027:7:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9019:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 33848,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9019:8:63",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 33852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9019:16:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 33847,
                  "id": 33853,
                  "nodeType": "Return",
                  "src": "9012:23:63"
                }
              ]
            },
            "baseFunctions": [
              35556
            ],
            "documentation": {
              "id": 33840,
              "nodeType": "StructuredDocumentation",
              "src": "8725:171:63",
              "text": " @dev Get the address of the token creator for a given token ID.\n @param _tokenId The ID of the token.\n @return address of the token creator."
            },
            "functionSelector": "40c1a064",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenCreator",
            "nameLocation": "8910:12:63",
            "overrides": {
              "id": 33844,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8967:8:63"
            },
            "parameters": {
              "id": 33843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33842,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8940:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33855,
                  "src": "8932:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8932:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8922:32:63"
            },
            "returnParameters": {
              "id": 33847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33846,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33855,
                  "src": "8985:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 33845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8985:15:63",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8984:17:63"
            },
            "scope": 34022,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33865,
            "nodeType": "FunctionDefinition",
            "src": "9158:127:63",
            "nodes": [],
            "body": {
              "id": 33864,
              "nodeType": "Block",
              "src": "9251:34:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33862,
                    "name": "mintConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33529,
                    "src": "9268:10:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                      "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 33861,
                  "id": 33863,
                  "nodeType": "Return",
                  "src": "9261:17:63"
                }
              ]
            },
            "documentation": {
              "id": 33856,
              "nodeType": "StructuredDocumentation",
              "src": "9048:105:63",
              "text": " @dev Get the current minting configuration.\n @return mintConfig the mint config."
            },
            "functionSelector": "9338bb5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintConfig",
            "nameLocation": "9167:13:63",
            "parameters": {
              "id": 33857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9180:2:63"
            },
            "returnParameters": {
              "id": 33861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33860,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33865,
                  "src": "9228:17:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintConfig_$33511_memory_ptr",
                    "typeString": "struct LazySovereignNFT.MintConfig"
                  },
                  "typeName": {
                    "id": 33859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33858,
                      "name": "MintConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33511,
                      "src": "9228:10:63"
                    },
                    "referencedDeclaration": 33511,
                    "src": "9228:10:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$33511_storage_ptr",
                      "typeString": "struct LazySovereignNFT.MintConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9227:19:63"
            },
            "scope": 34022,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33889,
            "nodeType": "FunctionDefinition",
            "src": "9435:346:63",
            "nodes": [],
            "body": {
              "id": 33888,
              "nodeType": "Block",
              "src": "9538:243:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 33878,
                              "name": "mintConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33529,
                              "src": "9629:10:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                                "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                              }
                            },
                            "id": 33879,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "baseURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33508,
                            "src": "9629:18:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 33880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9669:3:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33881,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33868,
                                "src": "9694:8:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27737,
                              "src": "9694:17:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 33883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9694:19:63",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a736f6e",
                            "id": 33884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9735:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            },
                            "value": ".json"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            }
                          ],
                          "expression": {
                            "id": 33876,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9591:3:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9591:16:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9591:169:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9567:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 33874,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9567:6:63",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 33886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9567:207:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 33873,
                  "id": 33887,
                  "nodeType": "Return",
                  "src": "9548:226:63"
                }
              ]
            },
            "baseFunctions": [
              26419
            ],
            "documentation": {
              "id": 33866,
              "nodeType": "StructuredDocumentation",
              "src": "9291:139:63",
              "text": " @dev Get the token URI for a specific token.\n @param _tokenId The ID of the token.\n @return The token's URI."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "9444:8:63",
            "overrides": {
              "id": 33870,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9505:8:63"
            },
            "parameters": {
              "id": 33869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33868,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9470:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33889,
                  "src": "9462:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9462:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9452:32:63"
            },
            "returnParameters": {
              "id": 33873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33872,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33889,
                  "src": "9523:13:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33871,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9523:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9522:15:63"
            },
            "scope": 34022,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33900,
            "nodeType": "FunctionDefinition",
            "src": "9903:109:63",
            "nodes": [],
            "body": {
              "id": 33899,
              "nodeType": "Block",
              "src": "9964:48:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33895,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33526,
                        "src": "9981:14:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$27584_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 33896,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27596,
                      "src": "9981:22:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$27584_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$27584_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 33897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9981:24:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33894,
                  "id": 33898,
                  "nodeType": "Return",
                  "src": "9974:31:63"
                }
              ]
            },
            "documentation": {
              "id": 33890,
              "nodeType": "StructuredDocumentation",
              "src": "9787:111:63",
              "text": " @dev Get the total supply of tokens in existence.\n @return The total supply of tokens."
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "9912:11:63",
            "parameters": {
              "id": 33891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9923:2:63"
            },
            "returnParameters": {
              "id": 33894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33900,
                  "src": "9955:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9955:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9954:9:63"
            },
            "scope": 34022,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33935,
            "nodeType": "FunctionDefinition",
            "src": "10079:482:63",
            "nodes": [],
            "body": {
              "id": 33934,
              "nodeType": "Block",
              "src": "10286:275:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 33927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 33917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33912,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33903,
                            "src": "10315:11:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33914,
                                  "name": "ITokenCreator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35557,
                                  "src": "10335:13:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ITokenCreator_$35557_$",
                                    "typeString": "type(contract ITokenCreator)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_ITokenCreator_$35557_$",
                                    "typeString": "type(contract ITokenCreator)"
                                  }
                                ],
                                "id": 33913,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10330:4:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 33915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10330:19:63",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_ITokenCreator_$35557",
                                "typeString": "type(contract ITokenCreator)"
                              }
                            },
                            "id": 33916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "10330:31:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "10315:46:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 33920,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33903,
                              "src": "10413:11:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 33918,
                              "name": "ERC165Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27899,
                              "src": "10377:17:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC165Upgradeable_$27899_$",
                                "typeString": "type(contract ERC165Upgradeable)"
                              }
                            },
                            "id": 33919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27893,
                            "src": "10377:35:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view returns (bool)"
                            }
                          },
                          "id": 33921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10377:48:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10315:110:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 33925,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33903,
                            "src": "10478:11:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 33923,
                            "name": "ERC2981Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35531,
                            "src": "10441:18:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC2981Upgradeable_$35531_$",
                              "typeString": "type(contract ERC2981Upgradeable)"
                            }
                          },
                          "id": 33924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35504,
                          "src": "10441:36:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) view returns (bool)"
                          }
                        },
                        "id": 33926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10441:49:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10315:175:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 33930,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33903,
                          "src": "10542:11:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 33928,
                          "name": "ERC721Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27082,
                          "src": "10506:17:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$27082_$",
                            "typeString": "type(contract ERC721Upgradeable)"
                          }
                        },
                        "id": 33929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26305,
                        "src": "10506:35:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 33931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10506:48:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10315:239:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 33911,
                  "id": 33933,
                  "nodeType": "Return",
                  "src": "10296:258:63"
                }
              ]
            },
            "baseFunctions": [
              26305,
              27893,
              35504
            ],
            "documentation": {
              "id": 33901,
              "nodeType": "StructuredDocumentation",
              "src": "10018:56:63",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "10088:17:63",
            "overrides": {
              "id": 33908,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 33905,
                  "name": "ERC165Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27899,
                  "src": "10201:17:63"
                },
                {
                  "id": 33906,
                  "name": "ERC2981Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35531,
                  "src": "10220:18:63"
                },
                {
                  "id": 33907,
                  "name": "ERC721Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27082,
                  "src": "10240:17:63"
                }
              ],
              "src": "10192:66:63"
            },
            "parameters": {
              "id": 33904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33903,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "10122:11:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33935,
                  "src": "10115:18:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 33902,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "10115:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10105:34:63"
            },
            "returnParameters": {
              "id": 33911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33935,
                  "src": "10276:4:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33909,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10276:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10275:6:63"
            },
            "scope": 34022,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33983,
            "nodeType": "FunctionDefinition",
            "src": "11103:489:63",
            "nodes": [],
            "body": {
              "id": 33982,
              "nodeType": "Block",
              "src": "11249:343:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33947,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33526,
                        "src": "11259:14:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$27584_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 33949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27610,
                      "src": "11259:24:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$27584_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$27584_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 33950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11259:26:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33951,
                  "nodeType": "ExpressionStatement",
                  "src": "11259:26:63"
                },
                {
                  "assignments": [
                    33953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33953,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "11303:7:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 33982,
                      "src": "11295:15:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33952,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11295:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33957,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33954,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33526,
                        "src": "11313:14:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$27584_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 33955,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27596,
                      "src": "11313:22:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$27584_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$27584_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 33956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11313:24:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11295:42:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33959,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33953,
                          "src": "11355:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 33960,
                          "name": "maxTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33515,
                          "src": "11366:9:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11355:20:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e73",
                        "id": 33962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11377:34:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae513c3d0861568782d381366f15b3d100b9bded3d0e0c001fa9100049752646",
                          "typeString": "literal_string \"_createToken::exceeded maxTokens\""
                        },
                        "value": "_createToken::exceeded maxTokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae513c3d0861568782d381366f15b3d100b9bded3d0e0c001fa9100049752646",
                          "typeString": "literal_string \"_createToken::exceeded maxTokens\""
                        }
                      ],
                      "id": 33958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11347:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11347:65:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33964,
                  "nodeType": "ExpressionStatement",
                  "src": "11347:65:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33966,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33938,
                        "src": "11432:3:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33967,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33953,
                        "src": "11437:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33965,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        26706,
                        26735
                      ],
                      "referencedDeclaration": 26706,
                      "src": "11422:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11422:23:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33969,
                  "nodeType": "ExpressionStatement",
                  "src": "11422:23:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33971,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33953,
                        "src": "11477:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33972,
                        "name": "_royaltyPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33940,
                        "src": "11486:18:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33970,
                      "name": "_setRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35483,
                      "src": "11455:21:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11455:50:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33974,
                  "nodeType": "ExpressionStatement",
                  "src": "11455:50:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33976,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33953,
                        "src": "11535:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33977,
                        "name": "_royaltyReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33942,
                        "src": "11544:16:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33975,
                      "name": "_setRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35469,
                      "src": "11515:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 33978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11515:46:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33979,
                  "nodeType": "ExpressionStatement",
                  "src": "11515:46:63"
                },
                {
                  "expression": {
                    "id": 33980,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33953,
                    "src": "11578:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33946,
                  "id": 33981,
                  "nodeType": "Return",
                  "src": "11571:14:63"
                }
              ]
            },
            "documentation": {
              "id": 33936,
              "nodeType": "StructuredDocumentation",
              "src": "10757:341:63",
              "text": " @dev Create a new token and assign it to the specified recipient.\n @param _to The address of the token recipient.\n @param _royaltyPercentage The royalty percentage for the token.\n @param _royaltyReceiver The address of the royalty receiver for the token.\n @return The ID of the newly created token."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createToken",
            "nameLocation": "11112:12:63",
            "parameters": {
              "id": 33943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33938,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "11142:3:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33983,
                  "src": "11134:11:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11134:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33940,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "11163:18:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33983,
                  "src": "11155:26:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11155:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33942,
                  "mutability": "mutable",
                  "name": "_royaltyReceiver",
                  "nameLocation": "11199:16:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 33983,
                  "src": "11191:24:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11191:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11124:97:63"
            },
            "returnParameters": {
              "id": 33946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33945,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33983,
                  "src": "11240:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11240:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11239:9:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34021,
            "nodeType": "FunctionDefinition",
            "src": "11829:483:63",
            "nodes": [],
            "body": {
              "id": 34020,
              "nodeType": "Block",
              "src": "11933:379:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33992,
                          "name": "_numberOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33988,
                          "src": "11964:15:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 33993,
                          "name": "maxTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33515,
                          "src": "11983:9:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11964:28:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e73",
                        "id": 33995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12006:34:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d107e18dd5449cb3e3ae144663c6fa6de59970e6308c0c4681861dd40af824b",
                          "typeString": "literal_string \"_prepareMint::exceeded maxTokens\""
                        },
                        "value": "_prepareMint::exceeded maxTokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d107e18dd5449cb3e3ae144663c6fa6de59970e6308c0c4681861dd40af824b",
                          "typeString": "literal_string \"_prepareMint::exceeded maxTokens\""
                        }
                      ],
                      "id": 33991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11943:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11943:107:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33997,
                  "nodeType": "ExpressionStatement",
                  "src": "11943:107:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 33999,
                              "name": "tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33526,
                              "src": "12081:14:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$27584_storage",
                                "typeString": "struct CountersUpgradeable.Counter storage ref"
                              }
                            },
                            "id": 34000,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27596,
                            "src": "12081:22:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$27584_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$27584_storage_ptr_$",
                              "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 34001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12081:24:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 34002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12109:1:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12081:29:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d696e742077697468203020746f6b656e73",
                        "id": 34004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12124:51:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26580127c261cca94c6d9b75057d7537b3fcd5f42cadbc34dde7cfb94906c733",
                          "typeString": "literal_string \"_prepareMint::can only prepare mint with 0 tokens\""
                        },
                        "value": "_prepareMint::can only prepare mint with 0 tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26580127c261cca94c6d9b75057d7537b3fcd5f42cadbc34dde7cfb94906c733",
                          "typeString": "literal_string \"_prepareMint::can only prepare mint with 0 tokens\""
                        }
                      ],
                      "id": 33998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12060:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12060:125:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34006,
                  "nodeType": "ExpressionStatement",
                  "src": "12060:125:63"
                },
                {
                  "expression": {
                    "id": 34013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34007,
                      "name": "mintConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33529,
                      "src": "12195:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                        "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34009,
                          "name": "_numberOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33988,
                          "src": "12219:15:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 34010,
                          "name": "_baseURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33986,
                          "src": "12236:8:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 34011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12246:5:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 34008,
                        "name": "MintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33511,
                        "src": "12208:10:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MintConfig_$33511_storage_ptr_$",
                          "typeString": "type(struct LazySovereignNFT.MintConfig storage pointer)"
                        }
                      },
                      "id": 34012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12208:44:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintConfig_$33511_memory_ptr",
                        "typeString": "struct LazySovereignNFT.MintConfig memory"
                      }
                    },
                    "src": "12195:57:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$33511_storage",
                      "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                    }
                  },
                  "id": 34014,
                  "nodeType": "ExpressionStatement",
                  "src": "12195:57:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34016,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33988,
                        "src": "12279:15:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34017,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33986,
                        "src": "12296:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 34015,
                      "name": "PrepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33539,
                      "src": "12267:11:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 34018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12267:38:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34019,
                  "nodeType": "EmitStatement",
                  "src": "12262:43:63"
                }
              ]
            },
            "documentation": {
              "id": 33984,
              "nodeType": "StructuredDocumentation",
              "src": "11598:226:63",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_prepareMint",
            "nameLocation": "11838:12:63",
            "parameters": {
              "id": 33989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33986,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "11876:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 34021,
                  "src": "11860:24:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33985,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11860:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33988,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "11902:15:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 34021,
                  "src": "11894:23:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11894:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11850:73:63"
            },
            "returnParameters": {
              "id": 33990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11933:0:63"
            },
            "scope": 34022,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33483,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24920,
              "src": "874:18:63"
            },
            "id": 33484,
            "nodeType": "InheritanceSpecifier",
            "src": "874:18:63"
          },
          {
            "baseName": {
              "id": 33485,
              "name": "ERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27899,
              "src": "898:17:63"
            },
            "id": 33486,
            "nodeType": "InheritanceSpecifier",
            "src": "898:17:63"
          },
          {
            "baseName": {
              "id": 33487,
              "name": "ERC721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27082,
              "src": "921:17:63"
            },
            "id": 33488,
            "nodeType": "InheritanceSpecifier",
            "src": "921:17:63"
          },
          {
            "baseName": {
              "id": 33489,
              "name": "ITokenCreator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35557,
              "src": "944:13:63"
            },
            "id": 33490,
            "nodeType": "InheritanceSpecifier",
            "src": "944:13:63"
          },
          {
            "baseName": {
              "id": 33491,
              "name": "ERC721BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27266,
              "src": "963:25:63"
            },
            "id": 33492,
            "nodeType": "InheritanceSpecifier",
            "src": "963:25:63"
          },
          {
            "baseName": {
              "id": 33493,
              "name": "ERC2981Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35531,
              "src": "994:18:63"
            },
            "id": 33494,
            "nodeType": "InheritanceSpecifier",
            "src": "994:18:63"
          }
        ],
        "canonicalName": "LazySovereignNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33482,
          "nodeType": "StructuredDocumentation",
          "src": "708:131:63",
          "text": " @title LazySovereignNFT\n @dev This contract implements an ERC721 compliant NFT (Non-Fungible Token) with lazy minting."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34022,
          35531,
          27266,
          35557,
          27082,
          27293,
          27216,
          27899,
          27911,
          24920,
          27578,
          25062,
          35547
        ],
        "name": "LazySovereignNFT",
        "nameLocation": "850:16:63",
        "scope": 34023,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 63
}