{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "ContractDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "PrepareMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "deleteToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "lockedMetadata",
              "type": "bool"
            }
          ],
          "internalType": "struct LazySovereignNFT.MintConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isApprovedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "prepareMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "prepareMintWithMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "setDefaultRoyaltyReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyReceiverForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenCreator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612a8b806100206000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063715018a611610125578063b390ac25116100ad578063e83157421161007c578063e8315742146104a2578063e985e9c5146104ac578063ee070805146104e8578063efc32cd4146104f4578063f2fde38b1461050757600080fd5b8063b390ac2514610456578063b88d4fde14610469578063b9fbd25c1461047c578063c87b56dd1461048f57600080fd5b8063931688cb116100f4578063931688cb1461040b5780639338bb5d1461041e57806395d89b4114610433578063a22cb4651461043b578063ab69607a1461044e57600080fd5b8063715018a6146103d7578063755edd17146103df578063894ba833146103f25780638da5cb5b146103fa57600080fd5b80633ebc82c5116101a857806353df5c7c1161017757806353df5c7c146103835780635edc7c191461038b5780636297c16c1461039e5780636352211e146103b157806370a08231146103c457600080fd5b80633ebc82c51461033757806340c1a0641461034a57806342842e0e1461035d57806342966c681461037057600080fd5b806318160ddd116101ef57806318160ddd1461029e57806323b872dd146102b45780632a55205a146102c75780633403c4e9146102f95780633a3d146f1461030a57600080fd5b806301ffc9a71461022157806306fdde0314610249578063081812fc1461025e578063095ea7b314610289575b600080fd5b61023461022f366004611f6b565b61051a565b60405190151581526020015b60405180910390f35b610251610563565b6040516102409190611fe0565b61027161026c366004611ff3565b6105f5565b6040516001600160a01b039091168152602001610240565b61029c610297366004612023565b61068f565b005b6102a66107a4565b604051908152602001610240565b61029c6102c236600461204d565b6107b5565b6102da6102d5366004612089565b6107e7565b604080516001600160a01b039093168352602083019190915201610240565b60fb546001600160a01b0316610271565b6102346103183660046120ab565b6001600160a01b03166000908152610102602052604090205460ff1690565b61029c6103453660046120ab565b610882565b610271610358366004611ff3565b6108b8565b61029c61036b36600461204d565b6108cc565b61029c61037e366004611ff3565b6108e7565b61029c61095e565b61029c61039936600461210f565b6109d2565b61029c6103ac366004611ff3565b610b52565b6102716103bf366004611ff3565b610bbb565b6102a66103d23660046120ab565b610c32565b61029c610cb8565b6102a66103ed3660046120ab565b610cee565b61029c610dc4565b6033546001600160a01b0316610271565b61029c610419366004612198565b610e28565b610426610efc565b60405161024091906121da565b610251610fe0565b61029c610449366004612218565b610fef565b60fc546102a6565b61029c610464366004612254565b610ffe565b61029c6104773660046122b6565b611055565b61029c61048a366004612392565b61108d565b61025161049d366004611ff3565b61110c565b6102a66101005481565b6102346104ba3660046123ef565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b60ff8054610234911681565b61029c610502366004612023565b611141565b61029c6105153660046120ab565b611199565b60006001600160e01b03198216631030681960e21b148061053f575061053f82611231565b8061054e575061054e82611247565b8061055d575061055d82611268565b92915050565b60606097805461057290612419565b80601f016020809104026020016040519081016040528092919081815260200182805461059e90612419565b80156105eb5780601f106105c0576101008083540402835291602001916105eb565b820191906000526020600020905b8154815290600101906020018083116105ce57829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166106735760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b600061069a82610bbb565b9050806001600160a01b0316836001600160a01b0316036107075760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161066a565b336001600160a01b0382161480610723575061072381336104ba565b6107955760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161066a565b61079f83836112a8565b505050565b60006107b06101035490565b905090565b6107c0335b82611316565b6107dc5760405162461bcd60e51b815260040161066a90612453565b61079f83838361140d565b600082815260fd602052604081205481906001600160a01b03166108165760fb546001600160a01b031661082f565b600084815260fd60205260409020546001600160a01b03165b9150610879606461087360fe60008881526020019081526020016000205460000361085c5760fc5461086c565b600087815260fe60205260409020545b86906115a9565b906115bc565b90509250929050565b6033546001600160a01b031633146108ac5760405162461bcd60e51b815260040161066a906124a4565b6108b5816115c8565b50565b600061055d6033546001600160a01b031690565b61079f83838360405180602001604052806000815250611055565b6108f0336107ba565b6109555760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161066a565b6108b5816115ea565b6033546001600160a01b031633146109885760405162461bcd60e51b815260040161066a906124a4565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e906109ba90610105906124d9565b60405180910390a1610106805460ff19166001179055565b60006109de6001611685565b905080156109f6576000805461ff0019166101001790555b6001600160a01b038316610a4c5760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c20616464726573730000604482015260640161066a565b610a56600a60fc55565b60ff805460ff19169055610100829055610a6e61170d565b610ae187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b01819004810282018101909252898152925089915088908190840183828082843760009201919091525061173c92505050565b610ae961176d565b610af1611794565b610afa836115c8565b610b0383611199565b8015610b49576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610b5c82610bbb565b6001600160a01b031614610bb25760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e00604482015260640161066a565b6108b5816108e7565b6000818152609960205260408120546001600160a01b03168061055d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161066a565b60006001600160a01b038216610c9c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161066a565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610ce25760405162461bcd60e51b815260040161066a906124a4565b610cec60006117c3565b565b60ff80546000911615610d135760405162461bcd60e51b815260040161066a90612564565b6033546001600160a01b0316331480610d3c5750336000908152610102602052604090205460ff165b610da15760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b606482015260840161066a565b61055d82610dae60fc5490565b60fb546001600160a01b0316611815565b919050565b6033546001600160a01b03163314610dee5760405162461bcd60e51b815260040161066a906124a4565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b03163314610e525760405162461bcd60e51b815260040161066a906124a4565b6101065460ff1615610eb05760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b606482015260840161066a565b610105610ebe8284836125e9565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e8282604051610ef09291906126aa565b60405180910390a15050565b610f22604051806060016040528060008152602001606081526020016000151581525090565b6040805160608101909152610104805482526101058054602084019190610f4890612419565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7490612419565b8015610fc15780601f10610f9657610100808354040283529160200191610fc1565b820191906000526020600020905b815481529060010190602001808311610fa457829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b60606098805461057290612419565b610ffa3383836118d1565b5050565b6033546001600160a01b031633146110285760405162461bcd60e51b815260040161066a906124a4565b60ff8054161561104a5760405162461bcd60e51b815260040161066a90612564565b61079f83838361199f565b61105f3383611316565b61107b5760405162461bcd60e51b815260040161066a90612453565b61108784848484611b21565b50505050565b6033546001600160a01b031633146110b75760405162461bcd60e51b815260040161066a906124a4565b60ff805416156110d95760405162461bcd60e51b815260040161066a90612564565b6110e484848461199f565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b606061010561111a83611b54565b60405160200161112b9291906126d9565b6040516020818303038152906040529050919050565b6033546001600160a01b0316331461116b5760405162461bcd60e51b815260040161066a906124a4565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146111c35760405162461bcd60e51b815260040161066a906124a4565b6001600160a01b0381166112285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161066a565b6108b5816117c3565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b148061055d575061055d825b60006001600160e01b031982166380ac58cd60e01b148061129957506001600160e01b03198216635b5e139f60e01b145b8061055d575061055d82611231565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112dd82610bbb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152609960205260408120546001600160a01b031661138f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161066a565b600061139a83610bbb565b9050806001600160a01b0316846001600160a01b031614806113e157506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b806114055750836001600160a01b03166113fa846105f5565b6001600160a01b0316145b949350505050565b826001600160a01b031661142082610bbb565b6001600160a01b0316146114845760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161066a565b6001600160a01b0382166114e65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161066a565b6114f16000826112a8565b6001600160a01b0383166000908152609a6020526040812080546001929061151a908490612795565b90915550506001600160a01b0382166000908152609a602052604081208054600192906115489084906127ac565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006115b582846127c4565b9392505050565b60006115b582846127f9565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b60006115f582610bbb565b90506116026000836112a8565b6001600160a01b0381166000908152609a6020526040812080546001929061162b908490612795565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008054610100900460ff16156116cc578160ff1660011480156116a85750303b155b6116c45760405162461bcd60e51b815260040161066a9061280d565b506000919050565b60005460ff8084169116106116f35760405162461bcd60e51b815260040161066a9061280d565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166117345760405162461bcd60e51b815260040161066a9061285b565b610cec611c55565b600054610100900460ff166117635760405162461bcd60e51b815260040161066a9061285b565b610ffa8282611c85565b600054610100900460ff16610cec5760405162461bcd60e51b815260040161066a9061285b565b600054610100900460ff166117bb5760405162461bcd60e51b815260040161066a9061285b565b610cec61176d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061182661010380546001019055565b60006118326101035490565b9050610100548111156118875760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e73604482015260640161066a565b6118918582611cc5565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b816001600160a01b0316836001600160a01b0316036119325760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161066a565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610100548111156119f25760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e73604482015260640161066a565b6101035415611a5d5760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b606482015260840161066a565b604051806060016040528082815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182015281516101049081559082015161010590611ac690826128a6565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1990611b1490869086906126aa565b60405180910390a2505050565b611b2c84848461140d565b611b3884848484611cdf565b6110875760405162461bcd60e51b815260040161066a90612966565b606081600003611b7b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ba55780611b8f816129b8565b9150611b9e9050600a836127f9565b9150611b7f565b60008167ffffffffffffffff811115611bc057611bc06122a0565b6040519080825280601f01601f191660200182016040528015611bea576020820181803683370190505b5090505b841561140557611bff600183612795565b9150611c0c600a866129d1565b611c179060306127ac565b60f81b818381518110611c2c57611c2c6129e5565b60200101906001600160f81b031916908160001a905350611c4e600a866127f9565b9450611bee565b600054610100900460ff16611c7c5760405162461bcd60e51b815260040161066a9061285b565b610cec336117c3565b600054610100900460ff16611cac5760405162461bcd60e51b815260040161066a9061285b565b6097611cb883826128a6565b50609861079f82826128a6565b610ffa828260405180602001604052806000815250611de0565b60006001600160a01b0384163b15611dd557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d239033908990889088906004016129fb565b6020604051808303816000875af1925050508015611d5e575060408051601f3d908101601f19168201909252611d5b91810190612a38565b60015b611dbb573d808015611d8c576040519150601f19603f3d011682016040523d82523d6000602084013e611d91565b606091505b508051600003611db35760405162461bcd60e51b815260040161066a90612966565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611405565b506001949350505050565b611dea8383611e13565b611df76000848484611cdf565b61079f5760405162461bcd60e51b815260040161066a90612966565b6001600160a01b038216611e695760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161066a565b6000818152609960205260409020546001600160a01b031615611ece5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161066a565b6001600160a01b0382166000908152609a60205260408120805460019290611ef79084906127ac565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146108b557600080fd5b600060208284031215611f7d57600080fd5b81356115b581611f55565b60005b83811015611fa3578181015183820152602001611f8b565b838111156110875750506000910152565b60008151808452611fcc816020860160208601611f88565b601f01601f19169290920160200192915050565b6020815260006115b56020830184611fb4565b60006020828403121561200557600080fd5b5035919050565b80356001600160a01b0381168114610dbf57600080fd5b6000806040838503121561203657600080fd5b61203f8361200c565b946020939093013593505050565b60008060006060848603121561206257600080fd5b61206b8461200c565b92506120796020850161200c565b9150604084013590509250925092565b6000806040838503121561209c57600080fd5b50508035926020909101359150565b6000602082840312156120bd57600080fd5b6115b58261200c565b60008083601f8401126120d857600080fd5b50813567ffffffffffffffff8111156120f057600080fd5b60208301915083602082850101111561210857600080fd5b9250929050565b6000806000806000806080878903121561212857600080fd5b863567ffffffffffffffff8082111561214057600080fd5b61214c8a838b016120c6565b9098509650602089013591508082111561216557600080fd5b5061217289828a016120c6565b909550935061218590506040880161200c565b9150606087013590509295509295509295565b600080602083850312156121ab57600080fd5b823567ffffffffffffffff8111156121c257600080fd5b6121ce858286016120c6565b90969095509350505050565b602081528151602082015260006020830151606060408401526122006080840182611fb4565b90506040840151151560608401528091505092915050565b6000806040838503121561222b57600080fd5b6122348361200c565b91506020830135801515811461224957600080fd5b809150509250929050565b60008060006040848603121561226957600080fd5b833567ffffffffffffffff81111561228057600080fd5b61228c868287016120c6565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156122cc57600080fd5b6122d58561200c565b93506122e36020860161200c565b925060408501359150606085013567ffffffffffffffff8082111561230757600080fd5b818701915087601f83011261231b57600080fd5b81358181111561232d5761232d6122a0565b604051601f8201601f19908116603f01168101908382118183101715612355576123556122a0565b816040528281528a602084870101111561236e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600080606085870312156123a857600080fd5b843567ffffffffffffffff8111156123bf57600080fd5b6123cb878288016120c6565b909550935050602085013591506123e46040860161200c565b905092959194509250565b6000806040838503121561240257600080fd5b61240b8361200c565b91506108796020840161200c565b600181811c9082168061242d57607f821691505b60208210810361244d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020808352600084546124ed81612419565b8084870152604060018084166000811461250e576001811461252857612556565b60ff1985168984015283151560051b890183019550612556565b896000528660002060005b8581101561254e5781548b8201860152908301908801612533565b8a0184019650505b509398975050505050505050565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b601f82111561079f57600081815260208120601f850160051c810160208610156125c25750805b601f850160051c820191505b818110156125e1578281556001016125ce565b505050505050565b67ffffffffffffffff831115612601576126016122a0565b6126158361260f8354612419565b8361259b565b6000601f84116001811461264957600085156126315750838201355b600019600387901b1c1916600186901b1783556126a3565b600083815260209020601f19861690835b8281101561267a578685013582556020948501946001909201910161265a565b50868210156126975760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008084546126e781612419565b600182811680156126ff576001811461271457612743565b60ff1984168752821515830287019450612743565b8860005260208060002060005b8581101561273a5781548a820152908401908201612721565b50505082870194505b50602f60f81b84528651925061275f8382860160208a01611f88565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156127a7576127a761277f565b500390565b600082198211156127bf576127bf61277f565b500190565b60008160001904831182151516156127de576127de61277f565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612808576128086127e3565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff8111156128c0576128c06122a0565b6128d4816128ce8454612419565b8461259b565b602080601f83116001811461290957600084156128f15750858301515b600019600386901b1c1916600185901b1785556125e1565b600085815260208120601f198616915b8281101561293857888601518255948401946001909101908401612919565b50858210156129565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600182016129ca576129ca61277f565b5060010190565b6000826129e0576129e06127e3565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a2e90830184611fb4565b9695505050505050565b600060208284031215612a4a57600080fd5b81516115b581611f5556fea2646970667358221220481b5748c29385fe9b444e3fef3df38f4ea118ef3622f15add03bf5377fa15ac64736f6c634300080f0033",
    "sourceMap": "841:11132:24:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061021c5760003560e01c8063715018a611610125578063b390ac25116100ad578063e83157421161007c578063e8315742146104a2578063e985e9c5146104ac578063ee070805146104e8578063efc32cd4146104f4578063f2fde38b1461050757600080fd5b8063b390ac2514610456578063b88d4fde14610469578063b9fbd25c1461047c578063c87b56dd1461048f57600080fd5b8063931688cb116100f4578063931688cb1461040b5780639338bb5d1461041e57806395d89b4114610433578063a22cb4651461043b578063ab69607a1461044e57600080fd5b8063715018a6146103d7578063755edd17146103df578063894ba833146103f25780638da5cb5b146103fa57600080fd5b80633ebc82c5116101a857806353df5c7c1161017757806353df5c7c146103835780635edc7c191461038b5780636297c16c1461039e5780636352211e146103b157806370a08231146103c457600080fd5b80633ebc82c51461033757806340c1a0641461034a57806342842e0e1461035d57806342966c681461037057600080fd5b806318160ddd116101ef57806318160ddd1461029e57806323b872dd146102b45780632a55205a146102c75780633403c4e9146102f95780633a3d146f1461030a57600080fd5b806301ffc9a71461022157806306fdde0314610249578063081812fc1461025e578063095ea7b314610289575b600080fd5b61023461022f366004611f6b565b61051a565b60405190151581526020015b60405180910390f35b610251610563565b6040516102409190611fe0565b61027161026c366004611ff3565b6105f5565b6040516001600160a01b039091168152602001610240565b61029c610297366004612023565b61068f565b005b6102a66107a4565b604051908152602001610240565b61029c6102c236600461204d565b6107b5565b6102da6102d5366004612089565b6107e7565b604080516001600160a01b039093168352602083019190915201610240565b60fb546001600160a01b0316610271565b6102346103183660046120ab565b6001600160a01b03166000908152610102602052604090205460ff1690565b61029c6103453660046120ab565b610882565b610271610358366004611ff3565b6108b8565b61029c61036b36600461204d565b6108cc565b61029c61037e366004611ff3565b6108e7565b61029c61095e565b61029c61039936600461210f565b6109d2565b61029c6103ac366004611ff3565b610b52565b6102716103bf366004611ff3565b610bbb565b6102a66103d23660046120ab565b610c32565b61029c610cb8565b6102a66103ed3660046120ab565b610cee565b61029c610dc4565b6033546001600160a01b0316610271565b61029c610419366004612198565b610e28565b610426610efc565b60405161024091906121da565b610251610fe0565b61029c610449366004612218565b610fef565b60fc546102a6565b61029c610464366004612254565b610ffe565b61029c6104773660046122b6565b611055565b61029c61048a366004612392565b61108d565b61025161049d366004611ff3565b61110c565b6102a66101005481565b6102346104ba3660046123ef565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b60ff8054610234911681565b61029c610502366004612023565b611141565b61029c6105153660046120ab565b611199565b60006001600160e01b03198216631030681960e21b148061053f575061053f82611231565b8061054e575061054e82611247565b8061055d575061055d82611268565b92915050565b60606097805461057290612419565b80601f016020809104026020016040519081016040528092919081815260200182805461059e90612419565b80156105eb5780601f106105c0576101008083540402835291602001916105eb565b820191906000526020600020905b8154815290600101906020018083116105ce57829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166106735760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b600061069a82610bbb565b9050806001600160a01b0316836001600160a01b0316036107075760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161066a565b336001600160a01b0382161480610723575061072381336104ba565b6107955760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161066a565b61079f83836112a8565b505050565b60006107b06101035490565b905090565b6107c0335b82611316565b6107dc5760405162461bcd60e51b815260040161066a90612453565b61079f83838361140d565b600082815260fd602052604081205481906001600160a01b03166108165760fb546001600160a01b031661082f565b600084815260fd60205260409020546001600160a01b03165b9150610879606461087360fe60008881526020019081526020016000205460000361085c5760fc5461086c565b600087815260fe60205260409020545b86906115a9565b906115bc565b90509250929050565b6033546001600160a01b031633146108ac5760405162461bcd60e51b815260040161066a906124a4565b6108b5816115c8565b50565b600061055d6033546001600160a01b031690565b61079f83838360405180602001604052806000815250611055565b6108f0336107ba565b6109555760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161066a565b6108b5816115ea565b6033546001600160a01b031633146109885760405162461bcd60e51b815260040161066a906124a4565b6040517fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e906109ba90610105906124d9565b60405180910390a1610106805460ff19166001179055565b60006109de6001611685565b905080156109f6576000805461ff0019166101001790555b6001600160a01b038316610a4c5760405162461bcd60e51b815260206004820152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c20616464726573730000604482015260640161066a565b610a56600a60fc55565b60ff805460ff19169055610100829055610a6e61170d565b610ae187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b01819004810282018101909252898152925089915088908190840183828082843760009201919091525061173c92505050565b610ae961176d565b610af1611794565b610afa836115c8565b610b0383611199565b8015610b49576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610b5c82610bbb565b6001600160a01b031614610bb25760405162461bcd60e51b815260206004820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e00604482015260640161066a565b6108b5816108e7565b6000818152609960205260408120546001600160a01b03168061055d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161066a565b60006001600160a01b038216610c9c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161066a565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610ce25760405162461bcd60e51b815260040161066a906124a4565b610cec60006117c3565b565b60ff80546000911615610d135760405162461bcd60e51b815260040161066a90612564565b6033546001600160a01b0316331480610d3c5750336000908152610102602052604090205460ff165b610da15760405162461bcd60e51b815260206004820152603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b606482015260840161066a565b61055d82610dae60fc5490565b60fb546001600160a01b0316611815565b919050565b6033546001600160a01b03163314610dee5760405162461bcd60e51b815260040161066a906124a4565b60ff805460ff1916600117905560405133907f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd90600090a2565b6033546001600160a01b03163314610e525760405162461bcd60e51b815260040161066a906124a4565b6101065460ff1615610eb05760405162461bcd60e51b815260206004820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b606482015260840161066a565b610105610ebe8284836125e9565b507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e8282604051610ef09291906126aa565b60405180910390a15050565b610f22604051806060016040528060008152602001606081526020016000151581525090565b6040805160608101909152610104805482526101058054602084019190610f4890612419565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7490612419565b8015610fc15780601f10610f9657610100808354040283529160200191610fc1565b820191906000526020600020905b815481529060010190602001808311610fa457829003601f168201915b50505091835250506002919091015460ff161515602090910152919050565b60606098805461057290612419565b610ffa3383836118d1565b5050565b6033546001600160a01b031633146110285760405162461bcd60e51b815260040161066a906124a4565b60ff8054161561104a5760405162461bcd60e51b815260040161066a90612564565b61079f83838361199f565b61105f3383611316565b61107b5760405162461bcd60e51b815260040161066a90612453565b61108784848484611b21565b50505050565b6033546001600160a01b031633146110b75760405162461bcd60e51b815260040161066a906124a4565b60ff805416156110d95760405162461bcd60e51b815260040161066a90612564565b6110e484848461199f565b6001600160a01b0316600090815261010260205260409020805460ff19166001179055505050565b606061010561111a83611b54565b60405160200161112b9291906126d9565b6040516020818303038152906040529050919050565b6033546001600160a01b0316331461116b5760405162461bcd60e51b815260040161066a906124a4565b600090815260fd6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146111c35760405162461bcd60e51b815260040161066a906124a4565b6001600160a01b0381166112285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161066a565b6108b5816117c3565b6001600160e01b0319166301ffc9a760e01b1490565b60006001600160e01b0319821663152a902d60e11b148061055d575061055d825b60006001600160e01b031982166380ac58cd60e01b148061129957506001600160e01b03198216635b5e139f60e01b145b8061055d575061055d82611231565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112dd82610bbb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152609960205260408120546001600160a01b031661138f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161066a565b600061139a83610bbb565b9050806001600160a01b0316846001600160a01b031614806113e157506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b806114055750836001600160a01b03166113fa846105f5565b6001600160a01b0316145b949350505050565b826001600160a01b031661142082610bbb565b6001600160a01b0316146114845760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161066a565b6001600160a01b0382166114e65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161066a565b6114f16000826112a8565b6001600160a01b0383166000908152609a6020526040812080546001929061151a908490612795565b90915550506001600160a01b0382166000908152609a602052604081208054600192906115489084906127ac565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006115b582846127c4565b9392505050565b60006115b582846127f9565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b60006115f582610bbb565b90506116026000836112a8565b6001600160a01b0381166000908152609a6020526040812080546001929061162b908490612795565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008054610100900460ff16156116cc578160ff1660011480156116a85750303b155b6116c45760405162461bcd60e51b815260040161066a9061280d565b506000919050565b60005460ff8084169116106116f35760405162461bcd60e51b815260040161066a9061280d565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166117345760405162461bcd60e51b815260040161066a9061285b565b610cec611c55565b600054610100900460ff166117635760405162461bcd60e51b815260040161066a9061285b565b610ffa8282611c85565b600054610100900460ff16610cec5760405162461bcd60e51b815260040161066a9061285b565b600054610100900460ff166117bb5760405162461bcd60e51b815260040161066a9061285b565b610cec61176d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061182661010380546001019055565b60006118326101035490565b9050610100548111156118875760405162461bcd60e51b815260206004820181905260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e73604482015260640161066a565b6118918582611cc5565b600081815260fe60205260409020849055600081815260fd6020526040902080546001600160a01b0319166001600160a01b038516179055949350505050565b816001600160a01b0316836001600160a01b0316036119325760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161066a565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610100548111156119f25760405162461bcd60e51b815260206004820181905260248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e73604482015260640161066a565b6101035415611a5d5760405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b606482015260840161066a565b604051806060016040528082815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182015281516101049081559082015161010590611ac690826128a6565b50604091820151600291909101805460ff19169115159190911790555181907f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1990611b1490869086906126aa565b60405180910390a2505050565b611b2c84848461140d565b611b3884848484611cdf565b6110875760405162461bcd60e51b815260040161066a90612966565b606081600003611b7b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ba55780611b8f816129b8565b9150611b9e9050600a836127f9565b9150611b7f565b60008167ffffffffffffffff811115611bc057611bc06122a0565b6040519080825280601f01601f191660200182016040528015611bea576020820181803683370190505b5090505b841561140557611bff600183612795565b9150611c0c600a866129d1565b611c179060306127ac565b60f81b818381518110611c2c57611c2c6129e5565b60200101906001600160f81b031916908160001a905350611c4e600a866127f9565b9450611bee565b600054610100900460ff16611c7c5760405162461bcd60e51b815260040161066a9061285b565b610cec336117c3565b600054610100900460ff16611cac5760405162461bcd60e51b815260040161066a9061285b565b6097611cb883826128a6565b50609861079f82826128a6565b610ffa828260405180602001604052806000815250611de0565b60006001600160a01b0384163b15611dd557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d239033908990889088906004016129fb565b6020604051808303816000875af1925050508015611d5e575060408051601f3d908101601f19168201909252611d5b91810190612a38565b60015b611dbb573d808015611d8c576040519150601f19603f3d011682016040523d82523d6000602084013e611d91565b606091505b508051600003611db35760405162461bcd60e51b815260040161066a90612966565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611405565b506001949350505050565b611dea8383611e13565b611df76000848484611cdf565b61079f5760405162461bcd60e51b815260040161066a90612966565b6001600160a01b038216611e695760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161066a565b6000818152609960205260409020546001600160a01b031615611ece5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161066a565b6001600160a01b0382166000908152609a60205260408120805460019290611ef79084906127ac565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146108b557600080fd5b600060208284031215611f7d57600080fd5b81356115b581611f55565b60005b83811015611fa3578181015183820152602001611f8b565b838111156110875750506000910152565b60008151808452611fcc816020860160208601611f88565b601f01601f19169290920160200192915050565b6020815260006115b56020830184611fb4565b60006020828403121561200557600080fd5b5035919050565b80356001600160a01b0381168114610dbf57600080fd5b6000806040838503121561203657600080fd5b61203f8361200c565b946020939093013593505050565b60008060006060848603121561206257600080fd5b61206b8461200c565b92506120796020850161200c565b9150604084013590509250925092565b6000806040838503121561209c57600080fd5b50508035926020909101359150565b6000602082840312156120bd57600080fd5b6115b58261200c565b60008083601f8401126120d857600080fd5b50813567ffffffffffffffff8111156120f057600080fd5b60208301915083602082850101111561210857600080fd5b9250929050565b6000806000806000806080878903121561212857600080fd5b863567ffffffffffffffff8082111561214057600080fd5b61214c8a838b016120c6565b9098509650602089013591508082111561216557600080fd5b5061217289828a016120c6565b909550935061218590506040880161200c565b9150606087013590509295509295509295565b600080602083850312156121ab57600080fd5b823567ffffffffffffffff8111156121c257600080fd5b6121ce858286016120c6565b90969095509350505050565b602081528151602082015260006020830151606060408401526122006080840182611fb4565b90506040840151151560608401528091505092915050565b6000806040838503121561222b57600080fd5b6122348361200c565b91506020830135801515811461224957600080fd5b809150509250929050565b60008060006040848603121561226957600080fd5b833567ffffffffffffffff81111561228057600080fd5b61228c868287016120c6565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156122cc57600080fd5b6122d58561200c565b93506122e36020860161200c565b925060408501359150606085013567ffffffffffffffff8082111561230757600080fd5b818701915087601f83011261231b57600080fd5b81358181111561232d5761232d6122a0565b604051601f8201601f19908116603f01168101908382118183101715612355576123556122a0565b816040528281528a602084870101111561236e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600080606085870312156123a857600080fd5b843567ffffffffffffffff8111156123bf57600080fd5b6123cb878288016120c6565b909550935050602085013591506123e46040860161200c565b905092959194509250565b6000806040838503121561240257600080fd5b61240b8361200c565b91506108796020840161200c565b600181811c9082168061242d57607f821691505b60208210810361244d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020808352600084546124ed81612419565b8084870152604060018084166000811461250e576001811461252857612556565b60ff1985168984015283151560051b890183019550612556565b896000528660002060005b8581101561254e5781548b8201860152908301908801612533565b8a0184019650505b509398975050505050505050565b6020808252601e908201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e0000604082015260600190565b601f82111561079f57600081815260208120601f850160051c810160208610156125c25750805b601f850160051c820191505b818110156125e1578281556001016125ce565b505050505050565b67ffffffffffffffff831115612601576126016122a0565b6126158361260f8354612419565b8361259b565b6000601f84116001811461264957600085156126315750838201355b600019600387901b1c1916600186901b1783556126a3565b600083815260209020601f19861690835b8281101561267a578685013582556020948501946001909201910161265a565b50868210156126975760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008084546126e781612419565b600182811680156126ff576001811461271457612743565b60ff1984168752821515830287019450612743565b8860005260208060002060005b8581101561273a5781548a820152908401908201612721565b50505082870194505b50602f60f81b84528651925061275f8382860160208a01611f88565b64173539b7b760d91b939092019182019290925260060195945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156127a7576127a761277f565b500390565b600082198211156127bf576127bf61277f565b500190565b60008160001904831182151516156127de576127de61277f565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612808576128086127e3565b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff8111156128c0576128c06122a0565b6128d4816128ce8454612419565b8461259b565b602080601f83116001811461290957600084156128f15750858301515b600019600386901b1c1916600185901b1785556125e1565b600085815260208120601f198616915b8281101561293857888601518255948401946001909101908401612919565b50858210156129565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600182016129ca576129ca61277f565b5060010190565b6000826129e0576129e06127e3565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a2e90830184611fb4565b9695505050505050565b600060208284031215612a4a57600080fd5b81516115b581611f5556fea2646970667358221220481b5748c29385fe9b444e3fef3df38f4ea118ef3622f15add03bf5377fa15ac64736f6c634300080f0033",
    "sourceMap": "841:11132:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:482;;;;;;:::i;:::-;;:::i;:::-;;;565:14:31;;558:22;540:41;;528:2;513:18;9738:482:24;;;;;;;;2948:98:2;;;:::i;:::-;;;;;;;:::i;4471:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:31;;;1674:51;;1662:2;1647:18;4471:217:2;1528:203:31;3998:412:2;;;;;;:::i;:::-;;:::i;:::-;;9562:109:24;;;:::i;:::-;;;2319:25:31;;;2307:2;2292:18;9562:109:24;2173:177:31;5198:330:2;;;;;;:::i;:::-;;:::i;846:566:28:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3133:32:31;;;3115:51;;3197:2;3182:18;;3175:34;;;;3088:18;846:566:28;2941:274:31;2248:113:28;2332:22;;-1:-1:-1;;;;;2332:22:28;2248:113;;8243:135:24;;;;;;:::i;:::-;-1:-1:-1;;;;;8346:25:24;8323:4;8346:25;;;:15;:25;;;;;;;;;8243:135;6776:127;;;;;;:::i;:::-;;:::i;8560:141::-;;;;;;:::i;:::-;;:::i;5594:179:2:-;;;;;;:::i;:::-;;:::i;801:241:5:-;;;;;;:::i;:::-;;:::i;7712:140:24:-;;;:::i;3441:548::-;;;;;;:::i;:::-;;:::i;6232:196::-;;;;;;:::i;:::-;;:::i;2651:235:2:-;;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;:::i;:::-;;:::i;1908:101:0:-;;;:::i;5724:386:24:-;;;;;;:::i;:::-;;:::i;6512:119::-;;;:::i;1276:85:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;1276:85;;7360:271:24;;;;;;:::i;:::-;;:::i;8817:127::-;;;:::i;:::-;;;;;;;:::i;3110:102:2:-;;;:::i;4755:153::-;;;;;;:::i;:::-;;:::i;2367:117:28:-;2453:24;;2367:117;;4784:181:24;;;;;;:::i;:::-;;:::i;5839:320:2:-;;;;;;:::i;:::-;;:::i;5280:257:24:-;;;;;;:::i;:::-;;:::i;9094:346::-;;;;;;:::i;:::-;;:::i;1857:24::-;;;;;;4974:162:2;;;;;;:::i;:::-;-1:-1:-1;;;;;5094:25:2;;;5071:4;5094:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4974:162;1779:20:24;;;;;;;;;7095:169;;;;;;:::i;:::-;;:::i;2158:198:0:-;;;;;;:::i;:::-;;:::i;9738:482:24:-;9935:4;-1:-1:-1;;;;;;9974:46:24;;-1:-1:-1;;;9974:46:24;;:110;;;10036:48;10072:11;10036:35;:48::i;:::-;9974:175;;;;10100:49;10137:11;10100:36;:49::i;:::-;9974:239;;;;10165:48;10201:11;10165:35;:48::i;:::-;9955:258;9738:482;-1:-1:-1;;9738:482:24:o;2948:98:2:-;3002:13;3034:5;3027:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:98;:::o;4471:217::-;4547:7;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:2;4566:73;;;;-1:-1:-1;;;4566:73:2;;9310:2:31;4566:73:2;;;9292:21:31;9349:2;9329:18;;;9322:30;9388:34;9368:18;;;9361:62;-1:-1:-1;;;9439:18:31;;;9432:42;9491:19;;4566:73:2;;;;;;;;;-1:-1:-1;4657:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4657:24:2;;4471:217::o;3998:412::-;4078:13;4094:34;4120:7;4094:25;:34::i;:::-;4078:50;;4152:5;-1:-1:-1;;;;;4146:11:2;:2;-1:-1:-1;;;;;4146:11:2;;4138:57;;;;-1:-1:-1;;;4138:57:2;;9723:2:31;4138:57:2;;;9705:21:31;9762:2;9742:18;;;9735:30;9801:34;9781:18;;;9774:62;-1:-1:-1;;;9852:18:31;;;9845:31;9893:19;;4138:57:2;9521:397:31;4138:57:2;929:10:8;-1:-1:-1;;;;;4227:21:2;;;;:62;;-1:-1:-1;4252:37:2;4269:5;929:10:8;4974:162:2;:::i;4252:37::-;4206:165;;;;-1:-1:-1;;;4206:165:2;;10125:2:31;4206:165:2;;;10107:21:31;10164:2;10144:18;;;10137:30;10203:34;10183:18;;;10176:62;10274:26;10254:18;;;10247:54;10318:19;;4206:165:2;9923:420:31;4206:165:2;4382:21;4391:2;4395:7;4382:8;:21::i;:::-;4068:342;3998:412;;:::o;9562:109:24:-;9614:7;9640:24;:14;929::9;;838:112;9640:24:24;9633:31;;9562:109;:::o;5198:330:2:-;5387:41;929:10:8;5406:12:2;5420:7;5387:18;:41::i;:::-;5379:103;;;;-1:-1:-1;;;5379:103:2;;;;;;;:::i;:::-;5493:28;5503:4;5509:2;5513:7;5493:9;:28::i;846:566:28:-;983:16;1049:26;;;:16;:26;;;;;;983:16;;-1:-1:-1;;;;;1049:26:28;:118;;1145:22;;-1:-1:-1;;;;;1145:22:28;1049:118;;;1104:26;;;;:16;:26;;;;;;-1:-1:-1;;;;;1104:26:28;1049:118;1038:129;;1193:212;1401:3;1193:190;1238:18;:28;1257:8;1238:28;;;;;;;;;;;;1270:1;1238:33;:131;;1345:24;;1238:131;;;1294:28;;;;:18;:28;;;;;;1238:131;1193:10;;:27;:190::i;:::-;:207;;:212::i;:::-;1177:228;;846:566;;;;;:::o;6776:127:24:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;6859:37:24::1;6886:9;6859:26;:37::i;:::-;6776:127:::0;:::o;8560:141::-;8644:15;8686:7;1348:6:0;;-1:-1:-1;;;;;1348:6:0;;1276:85;5594:179:2;5727:39;5744:4;5750:2;5754:7;5727:39;;;;;;;;;;;;:16;:39::i;801:241:5:-;917:41;929:10:8;936:12:5;850:96:8;917:41:5;909:102;;;;-1:-1:-1;;;909:102:5;;11329:2:31;909:102:5;;;11311:21:31;11368:2;11348:18;;;11341:30;11407:34;11387:18;;;11380:62;-1:-1:-1;;;11458:18:31;;;11451:46;11514:19;;909:102:5;11127:412:31;909:102:5;1021:14;1027:7;1021:5;:14::i;7712:140:24:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7769:34:24::1;::::0;::::1;::::0;::::1;::::0;7784:18;;7769:34:::1;:::i;:::-;;;;;;;;7813:25:::0;:32;;-1:-1:-1;;7813:32:24::1;7841:4;7813:32;::::0;;7712:140::o;3441:548::-;3111:19:1;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:1;;;;;3168:65;-1:-1:-1;;;;;3616:22:24;::::1;3608:65;;;::::0;-1:-1:-1;;;3608:65:24;;12840:2:31;3608:65:24::1;::::0;::::1;12822:21:31::0;12879:2;12859:18;;;12852:30;12918:32;12898:18;;;12891:60;12968:18;;3608:65:24::1;12638:354:31::0;3608:65:24::1;3683:32;3712:2;2197:24:28::0;:38;2119:123;3683:32:24::1;3725:8;:16:::0;;-1:-1:-1;;3725:16:24::1;::::0;;::::1;3751:22:::0;;;3784:16:::1;:14;:16::i;:::-;3810:29;3824:5;;3810:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;3810:29:24::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;3831:7:24;;-1:-1:-1;3831:7:24;;;;3810:29;::::1;3831:7:::0;;;;3810:29;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;3810:13:24::1;::::0;-1:-1:-1;;;3810:29:24:i:1;:::-;3849:15;:13;:15::i;:::-;3874:17;:15;:17::i;:::-;3902:36;3929:8;3902:26;:36::i;:::-;3949:33;3973:8;3949:23;:33::i;:::-;3257:14:1::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:1;;;3327:14;;-1:-1:-1;13149:36:31;;3327:14:1;;13137:2:31;13122:18;3327:14:1;;;;;;;3253:99;3101:257;3441:548:24;;;;;;:::o;6232:196::-;6330:10;6309:17;6317:8;6309:7;:17::i;:::-;-1:-1:-1;;;;;6309:31:24;;6288:109;;;;-1:-1:-1;;;6288:109:24;;13398:2:31;6288:109:24;;;13380:21:31;13437:2;13417:18;;;13410:30;13476:33;13456:18;;;13449:61;13527:18;;6288:109:24;13196:355:31;6288:109:24;6407:14;6412:8;6407:4;:14::i;2651:235:2:-;2723:7;2758:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2758:16:2;;2784:73;;;;-1:-1:-1;;;2784:73:2;;13758:2:31;2784:73:2;;;13740:21:31;13797:2;13777:18;;;13770:30;13836:34;13816:18;;;13809:62;-1:-1:-1;;;13887:18:31;;;13880:39;13936:19;;2784:73:2;13556:405:31;2390:204:2;2462:7;-1:-1:-1;;;;;2489:19:2;;2481:73;;;;-1:-1:-1;;;2481:73:2;;14168:2:31;2481:73:2;;;14150:21:31;14207:2;14187:18;;;14180:30;14246:34;14226:18;;;14219:62;-1:-1:-1;;;14297:18:31;;;14290:39;14346:19;;2481:73:2;13966:405:31;2481:73:2;-1:-1:-1;;;;;;2571:16:2;;;;;:9;:16;;;;;;;2390:204::o;1908:101:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;5724:386:24:-;4299:8;;;5791:7;;4299:8;4298:9;4290:52;;;;-1:-1:-1;;;4290:52:24;;;;;;;:::i;:::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;5831:10:24::1;:21;::::0;:52:::1;;-1:-1:-1::0;5872:10:24::1;5856:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;5831:52;5810:147;;;::::0;-1:-1:-1;;;5810:147:24;;14937:2:31;5810:147:24::1;::::0;::::1;14919:21:31::0;14976:2;14956:18;;;14949:30;15015:34;14995:18;;;14988:62;-1:-1:-1;;;15066:18:31;;;15059:46;15122:19;;5810:147:24::1;14735:412:31::0;5810:147:24::1;5974:129;6000:9;6023:29;2453:24:28::0;;;2367:117;6023:29:24::1;2332:22:28::0;;-1:-1:-1;;;;;2332:22:28;5974:12:24::1;:129::i;4352:1::-;5724:386:::0;;;:::o;6512:119::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;6566:8:24::1;:15:::0;;-1:-1:-1;;6566:15:24::1;6577:4;6566:15;::::0;;6596:28:::1;::::0;6613:10:::1;::::0;6596:28:::1;::::0;6566:8:::1;::::0;6596:28:::1;6512:119::o:0;7360:271::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7460:25:24;;::::1;;7459:26;7438:106;;;::::0;-1:-1:-1;;;7438:106:24;;15354:2:31;7438:106:24::1;::::0;::::1;15336:21:31::0;15393:2;15373:18;;;15366:30;15432:34;15412:18;;;15405:62;-1:-1:-1;;;15483:18:31;;;15476:31;15524:19;;7438:106:24::1;15152:397:31::0;7438:106:24::1;7555:18:::0;:29:::1;7576:8:::0;;7555:18;:29:::1;:::i;:::-;;7599:25;7615:8;;7599:25;;;;;;;:::i;:::-;;;;;;;;7360:271:::0;;:::o;8817:127::-;8887:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;8887:17:24;8920;;;;;;;;;8927:10;8920:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8920:17:24;;;-1:-1:-1;;8920:17:24;;;;;;;;;;;;;;;;8817:127;-1:-1:-1;8817:127:24:o;3110:102:2:-;3166:13;3198:7;3191:14;;;;;:::i;4755:153::-;4849:52;929:10:8;4882:8:2;4892;4849:18;:52::i;:::-;4755:153;;:::o;4784:181:24:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;4299:8:24::1;::::0;;::::1;4298:9;4290:52;;;;-1:-1:-1::0;;;4290:52:24::1;;;;;;;:::i;:::-;4919:39:::2;4932:8;;4942:15;4919:12;:39::i;5839:320:2:-:0;6008:41;929:10:8;6041:7:2;6008:18;:41::i;:::-;6000:103;;;;-1:-1:-1;;;6000:103:2;;;;;;;:::i;:::-;6113:39;6127:4;6133:2;6137:7;6146:5;6113:13;:39::i;:::-;5839:320;;;;:::o;5280:257:24:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;4299:8:24::1;::::0;;::::1;4298:9;4290:52;;;;-1:-1:-1::0;;;4290:52:24::1;;;;;;;:::i;:::-;5450:39:::2;5463:8;;5473:15;5450:12;:39::i;:::-;-1:-1:-1::0;;;;;5499:24:24::2;;::::0;;;:15:::2;:24;::::0;;;;:31;;-1:-1:-1;;5499:31:24::2;5526:4;5499:31;::::0;;-1:-1:-1;;;5280:257:24:o;9094:346::-;9182:13;9288:18;9353:19;:8;:17;:19::i;:::-;9250:169;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9207:226;;9094:346;;;:::o;7095:169::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7219:26:24::1;::::0;;;:16:::1;:26;::::0;;;;:38;;-1:-1:-1;;;;;;7219:38:24::1;-1:-1:-1::0;;;;;7219:38:24;;;::::1;::::0;;;::::1;::::0;;7095:169::o;2158:198:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:8;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:0;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:0;;19397:2:31;2238:73:0::1;::::0;::::1;19379:21:31::0;19436:2;19416:18;;;19409:30;19475:34;19455:18;;;19448:62;-1:-1:-1;;;19526:18:31;;;19519:36;19572:19;;2238:73:0::1;19195:402:31::0;2238:73:0::1;2321:28;2340:8;2321:18;:28::i;1060:166:11:-:0;-1:-1:-1;;;;;;1168:51:11;-1:-1:-1;;;1168:51:11;;1060:166::o;1849:264:28:-;1974:4;-1:-1:-1;;;;;;2013:41:28;;-1:-1:-1;;;2013:41:28;;:93;;;2070:36;2094:11;1987:344:2;2111:4;-1:-1:-1;;;;;;2146:51:2;;-1:-1:-1;;;2146:51:2;;:126;;-1:-1:-1;;;;;;;2213:59:2;;-1:-1:-1;;;2213:59:2;2146:126;:178;;;;2288:36;2312:11;2288:23;:36::i;11673:182::-;11747:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11747:29:2;-1:-1:-1;;;;;11747:29:2;;;;;;;;:24;;11800:34;11747:24;11800:25;:34::i;:::-;-1:-1:-1;;;;;11791:57:2;;;;;;;;;;;11673:182;;:::o;7914:355::-;8007:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:2;8023:73;;;;-1:-1:-1;;;8023:73:2;;19804:2:31;8023:73:2;;;19786:21:31;19843:2;19823:18;;;19816:30;19882:34;19862:18;;;19855:62;-1:-1:-1;;;19933:18:31;;;19926:42;19985:19;;8023:73:2;19602:408:31;8023:73:2;8106:13;8122:34;8148:7;8122:25;:34::i;:::-;8106:50;;8185:5;-1:-1:-1;;;;;8174:16:2;:7;-1:-1:-1;;;;;8174:16:2;;:52;;;-1:-1:-1;;;;;;5094:25:2;;;5071:4;5094:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8194:32;8174:87;;;;8254:7;-1:-1:-1;;;;;8230:31:2;:20;8242:7;8230:11;:20::i;:::-;-1:-1:-1;;;;;8230:31:2;;8174:87;8166:96;7914:355;-1:-1:-1;;;;7914:355:2:o;10946:616::-;11111:4;-1:-1:-1;;;;;11073:42:2;:34;11099:7;11073:25;:34::i;:::-;-1:-1:-1;;;;;11073:42:2;;11065:92;;;;-1:-1:-1;;;11065:92:2;;20217:2:31;11065:92:2;;;20199:21:31;20256:2;20236:18;;;20229:30;20295:34;20275:18;;;20268:62;-1:-1:-1;;;20346:18:31;;;20339:35;20391:19;;11065:92:2;20015:401:31;11065:92:2;-1:-1:-1;;;;;11175:16:2;;11167:65;;;;-1:-1:-1;;;11167:65:2;;20623:2:31;11167:65:2;;;20605:21:31;20662:2;20642:18;;;20635:30;20701:34;20681:18;;;20674:62;-1:-1:-1;;;20752:18:31;;;20745:34;20796:19;;11167:65:2;20421:400:31;11167:65:2;11344:29;11361:1;11365:7;11344:8;:29::i;:::-;-1:-1:-1;;;;;11384:15:2;;;;;;:9;:15;;;;;:20;;11403:1;;11384:15;:20;;11403:1;;11384:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11414:13:2;;;;;;:9;:13;;;;;:18;;11431:1;;11414:13;:18;;11431:1;;11414:18;:::i;:::-;;;;-1:-1:-1;;11442:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11442:21:2;-1:-1:-1;;;;;11442:21:2;;;;;;;;;11479:27;;11442:16;;11479:27;;;;;;;4068:342;3998:412;;:::o;3461:96:13:-;3519:7;3545:5;3549:1;3545;:5;:::i;:::-;3538:12;3461:96;-1:-1:-1;;;3461:96:13:o;3846:::-;3904:7;3930:5;3934:1;3930;:5;:::i;1418:115:28:-;1492:22;:34;;-1:-1:-1;;;;;;1492:34:28;-1:-1:-1;;;;;1492:34:28;;;;;;;;;;1418:115::o;10205:417:2:-;10264:13;10280:34;10306:7;10280:25;:34::i;:::-;10264:50;;10411:29;10428:1;10432:7;10411:8;:29::i;:::-;-1:-1:-1;;;;;10451:16:2;;;;;;:9;:16;;;;;:21;;10471:1;;10451:16;:21;;10471:1;;10451:21;:::i;:::-;;;;-1:-1:-1;;10489:16:2;;;;:7;:16;;;;;;10482:23;;-1:-1:-1;;;;;;10482:23:2;;;10521:36;10497:7;;10489:16;-1:-1:-1;;;;;10521:36:2;;;;;10489:16;;10521:36;4755:153;;:::o;5287:808:1:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:1;1476:19:7;:23;5738:61:1;5713:166;;;;-1:-1:-1;;;5713:166:1;;;;;;;:::i;:::-;-1:-1:-1;5900:5:1;;5287:808;-1:-1:-1;5287:808:1:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:1;;;;;;;:::i;:::-;-1:-1:-1;6031:12:1;:22;;-1:-1:-1;;6031:22:1;;;;;;;;;;;;-1:-1:-1;;5287:808:1:o;988:95:0:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;1605:149:2:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1708:39:2::1;1732:5;1739:7;1708:23;:39::i;862:58:11:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;755:85:28:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;818:15:28::1;:13;:15::i;2510:187:0:-:0;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;10762:489:24:-;10899:7;10918:26;:14;1043:19:9;;1061:1;1043:19;;;956:123;10918:26:24;10954:15;10972:24;:14;929::9;;838:112;10972:24:24;10954:42;;11025:9;;11014:7;:20;;11006:65;;;;-1:-1:-1;;;11006:65:24;;22680:2:31;11006:65:24;;;22662:21:31;;;22699:18;;;22692:30;22758:34;22738:18;;;22731:62;22810:18;;11006:65:24;22478:356:31;11006:65:24;11081:23;11091:3;11096:7;11081:9;:23::i;:::-;1794:28:28;;;;:18;:28;;;;;:42;;;1639:26;;;;:16;:26;;;;;:41;;-1:-1:-1;;;;;;1639:41:28;-1:-1:-1;;;;;1639:41:28;;;;;11237:7:24;10762:489;-1:-1:-1;;;;10762:489:24:o;11990:307:2:-;12140:8;-1:-1:-1;;;;;12131:17:2;:5;-1:-1:-1;;;;;12131:17:2;;12123:55;;;;-1:-1:-1;;;12123:55:2;;23041:2:31;12123:55:2;;;23023:21:31;23080:2;23060:18;;;23053:30;23119:27;23099:18;;;23092:55;23164:18;;12123:55:2;22839:349:31;12123:55:2;-1:-1:-1;;;;;12188:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12188:46:2;;;;;;;;;;12249:41;;540::31;;;12249::2;;513:18:31;12249:41:2;;;;;;;11990:307;;;:::o;11488:483:24:-;11642:9;;11623:15;:28;;11602:107;;;;-1:-1:-1;;;11602:107:24;;23395:2:31;11602:107:24;;;23377:21:31;;;23414:18;;;23407:30;23473:34;23453:18;;;23446:62;23525:18;;11602:107:24;23193:356:31;11602:107:24;11740:14;929::9;11740:29:24;11719:125;;;;-1:-1:-1;;;11719:125:24;;23756:2:31;11719:125:24;;;23738:21:31;23795:2;23775:18;;;23768:30;23834:34;23814:18;;;23807:62;-1:-1:-1;;;23885:18:31;;;23878:47;23942:19;;11719:125:24;23554:413:31;11719:125:24;11867:44;;;;;;;;11878:15;11867:44;;;;11895:8;;11867:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11867:44:24;;;-1:-1:-1;;;11867:44:24;;;;;11854:57;;:10;:57;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11854:57:24;;;;;;;;;;;;-1:-1:-1;;11854:57:24;;;;;;;;;;11926:38;11938:15;;11926:38;;;;11955:8;;;;11926:38;:::i;:::-;;;;;;;;11488:483;;;:::o;7021:307:2:-;7172:28;7182:4;7188:2;7192:7;7172:9;:28::i;:::-;7218:48;7241:4;7247:2;7251:7;7260:5;7218:22;:48::i;:::-;7210:111;;;;-1:-1:-1;;;7210:111:2;;;;;;;:::i;339:703:10:-;395:13;612:5;621:1;612:10;608:51;;-1:-1:-1;;638:10:10;;;;;;;;;;;;-1:-1:-1;;;638:10:10;;;;;339:703::o;608:51::-;683:5;668:12;722:75;729:9;;722:75;;754:8;;;;:::i;:::-;;-1:-1:-1;776:10:10;;-1:-1:-1;784:2:10;776:10;;:::i;:::-;;;722:75;;;806:19;838:6;828:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;828:17:10;;806:39;;855:150;862:10;;855:150;;888:11;898:1;888:11;;:::i;:::-;;-1:-1:-1;956:10:10;964:2;956:5;:10;:::i;:::-;943:24;;:2;:24;:::i;:::-;930:39;;913:6;920;913:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;913:56:10;;;;;;;;-1:-1:-1;983:11:10;992:2;983:11;;:::i;:::-;;;855:150;;1089:111:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:8::0;1161:18:0::1;:32::i;1760:160:2:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1873:5:2::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:2::1;:17;1906:7:::0;1896;:17:::1;:::i;8599:108::-:0;8674:26;8684:2;8688:7;8674:26;;;;;;;;;;;;:9;:26::i;12850:800::-;13000:4;-1:-1:-1;;;;;13020:13:2;;1476:19:7;:23;13016:628:2;;13055:83;;-1:-1:-1;;;13055:83:2;;-1:-1:-1;;;;;13055:47:2;;;;;:83;;929:10:8;;13117:4:2;;13123:7;;13132:5;;13055:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13055:83:2;;;;;;;;-1:-1:-1;;13055:83:2;;;;;;;;;;;;:::i;:::-;;;13051:541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13316:6;:13;13333:1;13316:18;13312:266;;13358:60;;-1:-1:-1;;;13358:60:2;;;;;;;:::i;13312:266::-;13530:6;13524:13;13515:6;13511:2;13507:15;13500:38;13051:541;-1:-1:-1;;;;;;13188:62:2;-1:-1:-1;;;13188:62:2;;-1:-1:-1;13181:69:2;;13016:628;-1:-1:-1;13629:4:2;12850:800;;;;;;:::o;8928:311::-;9053:18;9059:2;9063:7;9053:5;:18::i;:::-;9102:54;9133:1;9137:2;9141:7;9150:5;9102:22;:54::i;:::-;9081:151;;;;-1:-1:-1;;;9081:151:2;;;;;;;:::i;9561:427::-;-1:-1:-1;;;;;9640:16:2;;9632:61;;;;-1:-1:-1;;;9632:61:2;;27087:2:31;9632:61:2;;;27069:21:31;;;27106:18;;;27099:30;27165:34;27145:18;;;27138:62;27217:18;;9632:61:2;26885:356:31;9632:61:2;7696:4;7719:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7719:16:2;:30;9703:58;;;;-1:-1:-1;;;9703:58:2;;27448:2:31;9703:58:2;;;27430:21:31;27487:2;27467:18;;;27460:30;27526;27506:18;;;27499:58;27574:18;;9703:58:2;27246:352:31;9703:58:2;-1:-1:-1;;;;;9828:13:2;;;;;;:9;:13;;;;;:18;;9845:1;;9828:13;:18;;9845:1;;9828:18;:::i;:::-;;;;-1:-1:-1;;9856:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9856:21:2;-1:-1:-1;;;;;9856:21:2;;;;;;;;9893:33;;9856:16;;;9893:33;;9856:16;;9893:33;4755:153;;:::o;14:131:31:-;-1:-1:-1;;;;;;88:32:31;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:31;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:31;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:31:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:31;;1343:180;-1:-1:-1;1343:180:31:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:31;;1843:42;;1833:70;;1899:1;1896;1889:12;1914:254;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:31:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:248::-;2756:6;2764;2817:2;2805:9;2796:7;2792:23;2788:32;2785:52;;;2833:1;2830;2823:12;2785:52;-1:-1:-1;;2856:23:31;;;2926:2;2911:18;;;2898:32;;-1:-1:-1;2688:248:31:o;3220:186::-;3279:6;3332:2;3320:9;3311:7;3307:23;3303:32;3300:52;;;3348:1;3345;3338:12;3300:52;3371:29;3390:9;3371:29;:::i;3635:348::-;3687:8;3697:6;3751:3;3744:4;3736:6;3732:17;3728:27;3718:55;;3769:1;3766;3759:12;3718:55;-1:-1:-1;3792:20:31;;3835:18;3824:30;;3821:50;;;3867:1;3864;3857:12;3821:50;3904:4;3896:6;3892:17;3880:29;;3956:3;3949:4;3940:6;3932;3928:19;3924:30;3921:39;3918:59;;;3973:1;3970;3963:12;3918:59;3635:348;;;;;:::o;3988:864::-;4098:6;4106;4114;4122;4130;4138;4191:3;4179:9;4170:7;4166:23;4162:33;4159:53;;;4208:1;4205;4198:12;4159:53;4248:9;4235:23;4277:18;4318:2;4310:6;4307:14;4304:34;;;4334:1;4331;4324:12;4304:34;4373:59;4424:7;4415:6;4404:9;4400:22;4373:59;:::i;:::-;4451:8;;-1:-1:-1;4347:85:31;-1:-1:-1;4539:2:31;4524:18;;4511:32;;-1:-1:-1;4555:16:31;;;4552:36;;;4584:1;4581;4574:12;4552:36;;4623:61;4676:7;4665:8;4654:9;4650:24;4623:61;:::i;:::-;4703:8;;-1:-1:-1;4597:87:31;-1:-1:-1;4757:38:31;;-1:-1:-1;4791:2:31;4776:18;;4757:38;:::i;:::-;4747:48;;4842:2;4831:9;4827:18;4814:32;4804:42;;3988:864;;;;;;;;:::o;4857:411::-;4928:6;4936;4989:2;4977:9;4968:7;4964:23;4960:32;4957:52;;;5005:1;5002;4995:12;4957:52;5045:9;5032:23;5078:18;5070:6;5067:30;5064:50;;;5110:1;5107;5100:12;5064:50;5149:59;5200:7;5191:6;5180:9;5176:22;5149:59;:::i;:::-;5227:8;;5123:85;;-1:-1:-1;4857:411:31;-1:-1:-1;;;;4857:411:31:o;5273:511::-;5458:2;5447:9;5440:21;5503:6;5497:13;5492:2;5481:9;5477:18;5470:41;5421:4;5558:2;5550:6;5546:15;5540:22;5598:4;5593:2;5582:9;5578:18;5571:32;5626:52;5673:3;5662:9;5658:19;5644:12;5626:52;:::i;:::-;5612:66;;5748:2;5740:6;5736:15;5730:22;5723:30;5716:38;5709:4;5698:9;5694:20;5687:68;5772:6;5764:14;;;5273:511;;;;:::o;5789:347::-;5854:6;5862;5915:2;5903:9;5894:7;5890:23;5886:32;5883:52;;;5931:1;5928;5921:12;5883:52;5954:29;5973:9;5954:29;:::i;:::-;5944:39;;6033:2;6022:9;6018:18;6005:32;6080:5;6073:13;6066:21;6059:5;6056:32;6046:60;;6102:1;6099;6092:12;6046:60;6125:5;6115:15;;;5789:347;;;;;:::o;6141:479::-;6221:6;6229;6237;6290:2;6278:9;6269:7;6265:23;6261:32;6258:52;;;6306:1;6303;6296:12;6258:52;6346:9;6333:23;6379:18;6371:6;6368:30;6365:50;;;6411:1;6408;6401:12;6365:50;6450:59;6501:7;6492:6;6481:9;6477:22;6450:59;:::i;:::-;6528:8;;6424:85;;-1:-1:-1;6610:2:31;6595:18;;;;6582:32;;6141:479;-1:-1:-1;;;;6141:479:31:o;6625:127::-;6686:10;6681:3;6677:20;6674:1;6667:31;6717:4;6714:1;6707:15;6741:4;6738:1;6731:15;6757:1138;6852:6;6860;6868;6876;6929:3;6917:9;6908:7;6904:23;6900:33;6897:53;;;6946:1;6943;6936:12;6897:53;6969:29;6988:9;6969:29;:::i;:::-;6959:39;;7017:38;7051:2;7040:9;7036:18;7017:38;:::i;:::-;7007:48;;7102:2;7091:9;7087:18;7074:32;7064:42;;7157:2;7146:9;7142:18;7129:32;7180:18;7221:2;7213:6;7210:14;7207:34;;;7237:1;7234;7227:12;7207:34;7275:6;7264:9;7260:22;7250:32;;7320:7;7313:4;7309:2;7305:13;7301:27;7291:55;;7342:1;7339;7332:12;7291:55;7378:2;7365:16;7400:2;7396;7393:10;7390:36;;;7406:18;;:::i;:::-;7481:2;7475:9;7449:2;7535:13;;-1:-1:-1;;7531:22:31;;;7555:2;7527:31;7523:40;7511:53;;;7579:18;;;7599:22;;;7576:46;7573:72;;;7625:18;;:::i;:::-;7665:10;7661:2;7654:22;7700:2;7692:6;7685:18;7740:7;7735:2;7730;7726;7722:11;7718:20;7715:33;7712:53;;;7761:1;7758;7751:12;7712:53;7817:2;7812;7808;7804:11;7799:2;7791:6;7787:15;7774:46;7862:1;7857:2;7852;7844:6;7840:15;7836:24;7829:35;7883:6;7873:16;;;;;;;6757:1138;;;;;;;:::o;7900:553::-;7989:6;7997;8005;8013;8066:2;8054:9;8045:7;8041:23;8037:32;8034:52;;;8082:1;8079;8072:12;8034:52;8122:9;8109:23;8155:18;8147:6;8144:30;8141:50;;;8187:1;8184;8177:12;8141:50;8226:59;8277:7;8268:6;8257:9;8253:22;8226:59;:::i;:::-;8304:8;;-1:-1:-1;8200:85:31;-1:-1:-1;;8386:2:31;8371:18;;8358:32;;-1:-1:-1;8409:38:31;8443:2;8428:18;;8409:38;:::i;:::-;8399:48;;7900:553;;;;;;;:::o;8458:260::-;8526:6;8534;8587:2;8575:9;8566:7;8562:23;8558:32;8555:52;;;8603:1;8600;8593:12;8555:52;8626:29;8645:9;8626:29;:::i;:::-;8616:39;;8674:38;8708:2;8697:9;8693:18;8674:38;:::i;8723:380::-;8802:1;8798:12;;;;8845;;;8866:61;;8920:4;8912:6;8908:17;8898:27;;8866:61;8973:2;8965:6;8962:14;8942:18;8939:38;8936:161;;9019:10;9014:3;9010:20;9007:1;9000:31;9054:4;9051:1;9044:15;9082:4;9079:1;9072:15;8936:161;;8723:380;;;:::o;10348:413::-;10550:2;10532:21;;;10589:2;10569:18;;;10562:30;10628:34;10623:2;10608:18;;10601:62;-1:-1:-1;;;10694:2:31;10679:18;;10672:47;10751:3;10736:19;;10348:413::o;10766:356::-;10968:2;10950:21;;;10987:18;;;10980:30;11046:34;11041:2;11026:18;;11019:62;11113:2;11098:18;;10766:356::o;11670:963::-;11779:4;11808:2;11837;11826:9;11819:21;11860:1;11893:6;11887:13;11923:36;11949:9;11923:36;:::i;:::-;11995:6;11990:2;11979:9;11975:18;11968:34;12021:2;12042:1;12074:2;12063:9;12059:18;12091:1;12086:158;;;;12258:1;12253:354;;;;12052:555;;12086:158;-1:-1:-1;;12134:24:31;;12114:18;;;12107:52;12212:14;;12205:22;12202:1;12198:30;12183:46;;12179:55;;;-1:-1:-1;12086:158:31;;12253:354;12284:6;12281:1;12274:17;12332:2;12329:1;12319:16;12357:1;12371:180;12385:6;12382:1;12379:13;12371:180;;;12478:14;;12454:17;;;12450:26;;12443:50;12521:16;;;;12400:10;;12371:180;;;12575:17;;12571:26;;;-1:-1:-1;;12052:555:31;-1:-1:-1;12624:3:31;;11670:963;-1:-1:-1;;;;;;;;11670:963:31:o;14376:354::-;14578:2;14560:21;;;14617:2;14597:18;;;14590:30;14656:32;14651:2;14636:18;;14629:60;14721:2;14706:18;;14376:354::o;15554:545::-;15656:2;15651:3;15648:11;15645:448;;;15692:1;15717:5;15713:2;15706:17;15762:4;15758:2;15748:19;15832:2;15820:10;15816:19;15813:1;15809:27;15803:4;15799:38;15868:4;15856:10;15853:20;15850:47;;;-1:-1:-1;15891:4:31;15850:47;15946:2;15941:3;15937:12;15934:1;15930:20;15924:4;15920:31;15910:41;;16001:82;16019:2;16012:5;16009:13;16001:82;;;16064:17;;;16045:1;16034:13;16001:82;;;16005:3;;;15554:545;;;:::o;16275:1206::-;16399:18;16394:3;16391:27;16388:53;;;16421:18;;:::i;:::-;16450:94;16540:3;16500:38;16532:4;16526:11;16500:38;:::i;:::-;16494:4;16450:94;:::i;:::-;16570:1;16595:2;16590:3;16587:11;16612:1;16607:616;;;;17267:1;17284:3;17281:93;;;-1:-1:-1;17340:19:31;;;17327:33;17281:93;-1:-1:-1;;16232:1:31;16228:11;;;16224:24;16220:29;16210:40;16256:1;16252:11;;;16207:57;17387:78;;16580:895;;16607:616;11617:1;11610:14;;;11654:4;11641:18;;-1:-1:-1;;16643:17:31;;;16744:9;16766:229;16780:7;16777:1;16774:14;16766:229;;;16869:19;;;16856:33;16841:49;;16976:4;16961:20;;;;16929:1;16917:14;;;;16796:12;16766:229;;;16770:3;17023;17014:7;17011:16;17008:159;;;17147:1;17143:6;17137:3;17131;17128:1;17124:11;17120:21;17116:34;17112:39;17099:9;17094:3;17090:19;17077:33;17073:79;17065:6;17058:95;17008:159;;;17210:1;17204:3;17201:1;17197:11;17193:19;17187:4;17180:33;16580:895;;;16275:1206;;;:::o;17486:390::-;17645:2;17634:9;17627:21;17684:6;17679:2;17668:9;17664:18;17657:34;17741:6;17733;17728:2;17717:9;17713:18;17700:48;17797:1;17768:22;;;17792:2;17764:31;;;17757:42;;;;17860:2;17839:15;;;-1:-1:-1;;17835:29:31;17820:45;17816:54;;17486:390;-1:-1:-1;17486:390:31:o;17881:1309::-;18259:3;18288:1;18321:6;18315:13;18351:36;18377:9;18351:36;:::i;:::-;18406:1;18423:18;;;18450:133;;;;18597:1;18592:356;;;;18416:532;;18450:133;-1:-1:-1;;18483:24:31;;18471:37;;18556:14;;18549:22;18537:35;;18528:45;;;-1:-1:-1;18450:133:31;;18592:356;18623:6;18620:1;18613:17;18653:4;18698:2;18695:1;18685:16;18723:1;18737:165;18751:6;18748:1;18745:13;18737:165;;;18829:14;;18816:11;;;18809:35;18872:16;;;;18766:10;;18737:165;;;18741:3;;;18931:6;18926:3;18922:16;18915:23;;18416:532;;-1:-1:-1;;;18964:3:31;18957:16;19004:6;18998:13;18982:29;;19020:64;19075:8;19070:2;19065:3;19061:12;19054:4;19046:6;19042:17;19020:64;:::i;:::-;-1:-1:-1;;;19103:18:31;;;;19137:11;;;19130:28;;;;19182:1;19174:10;;17881:1309;-1:-1:-1;;;;;17881:1309:31:o;20826:127::-;20887:10;20882:3;20878:20;20875:1;20868:31;20918:4;20915:1;20908:15;20942:4;20939:1;20932:15;20958:125;20998:4;21026:1;21023;21020:8;21017:34;;;21031:18;;:::i;:::-;-1:-1:-1;21068:9:31;;20958:125::o;21088:128::-;21128:3;21159:1;21155:6;21152:1;21149:13;21146:39;;;21165:18;;:::i;:::-;-1:-1:-1;21201:9:31;;21088:128::o;21221:168::-;21261:7;21327:1;21323;21319:6;21315:14;21312:1;21309:21;21304:1;21297:9;21290:17;21286:45;21283:71;;;21334:18;;:::i;:::-;-1:-1:-1;21374:9:31;;21221:168::o;21394:127::-;21455:10;21450:3;21446:20;21443:1;21436:31;21486:4;21483:1;21476:15;21510:4;21507:1;21500:15;21526:120;21566:1;21592;21582:35;;21597:18;;:::i;:::-;-1:-1:-1;21631:9:31;;21526:120::o;21651:410::-;21853:2;21835:21;;;21892:2;21872:18;;;21865:30;21931:34;21926:2;21911:18;;21904:62;-1:-1:-1;;;21997:2:31;21982:18;;21975:44;22051:3;22036:19;;21651:410::o;22066:407::-;22268:2;22250:21;;;22307:2;22287:18;;;22280:30;22346:34;22341:2;22326:18;;22319:62;-1:-1:-1;;;22412:2:31;22397:18;;22390:41;22463:3;22448:19;;22066:407::o;23972:1352::-;24098:3;24092:10;24125:18;24117:6;24114:30;24111:56;;;24147:18;;:::i;:::-;24176:97;24266:6;24226:38;24258:4;24252:11;24226:38;:::i;:::-;24220:4;24176:97;:::i;:::-;24328:4;;24392:2;24381:14;;24409:1;24404:663;;;;25111:1;25128:6;25125:89;;;-1:-1:-1;25180:19:31;;;25174:26;25125:89;-1:-1:-1;;16232:1:31;16228:11;;;16224:24;16220:29;16210:40;16256:1;16252:11;;;16207:57;25227:81;;24374:944;;24404:663;11617:1;11610:14;;;11654:4;11641:18;;-1:-1:-1;;24440:20:31;;;24558:236;24572:7;24569:1;24566:14;24558:236;;;24661:19;;;24655:26;24640:42;;24753:27;;;;24721:1;24709:14;;;;24588:19;;24558:236;;;24562:3;24822:6;24813:7;24810:19;24807:201;;;24883:19;;;24877:26;-1:-1:-1;;24966:1:31;24962:14;;;24978:3;24958:24;24954:37;24950:42;24935:58;24920:74;;24807:201;-1:-1:-1;;;;;25054:1:31;25038:14;;;25034:22;25021:36;;-1:-1:-1;23972:1352:31:o;25329:414::-;25531:2;25513:21;;;25570:2;25550:18;;;25543:30;25609:34;25604:2;25589:18;;25582:62;-1:-1:-1;;;25675:2:31;25660:18;;25653:48;25733:3;25718:19;;25329:414::o;25748:135::-;25787:3;25808:17;;;25805:43;;25828:18;;:::i;:::-;-1:-1:-1;25875:1:31;25864:13;;25748:135::o;25888:112::-;25920:1;25946;25936:35;;25951:18;;:::i;:::-;-1:-1:-1;25985:9:31;;25888:112::o;26005:127::-;26066:10;26061:3;26057:20;26054:1;26047:31;26097:4;26094:1;26087:15;26121:4;26118:1;26111:15;26137:489;-1:-1:-1;;;;;26406:15:31;;;26388:34;;26458:15;;26453:2;26438:18;;26431:43;26505:2;26490:18;;26483:34;;;26553:3;26548:2;26533:18;;26526:31;;;26331:4;;26574:46;;26600:19;;26592:6;26574:46;:::i;:::-;26566:54;26137:489;-1:-1:-1;;;;;;26137:489:31:o;26631:249::-;26700:6;26753:2;26741:9;26732:7;26728:23;26724:32;26721:52;;;26769:1;26766;26759:12;26721:52;26801:9;26795:16;26820:30;26844:5;26820:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "deleteToken(uint256)": "6297c16c",
    "disableContract()": "894ba833",
    "disabled()": "ee070805",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyPercentage()": "ab69607a",
    "getDefaultRoyaltyReceiver()": "3403c4e9",
    "getMintConfig()": "9338bb5d",
    "init(string,string,address,uint256)": "5edc7c19",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedMinter(address)": "3a3d146f",
    "lockBaseURI()": "53df5c7c",
    "maxTokens()": "e8315742",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "prepareMint(string,uint256)": "b390ac25",
    "prepareMintWithMinter(string,uint256,address)": "b9fbd25c",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDefaultRoyaltyReceiver(address)": "3ebc82c5",
    "setRoyaltyReceiverForToken(address,uint256)": "efc32cd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenCreator(uint256)": "40c1a064",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateBaseURI(string)": "931688cb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"PrepareMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockedMetadata\",\"type\":\"bool\"}],\"internalType\":\"struct LazySovereignNFT.MintConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"prepareMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"prepareMintWithMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setDefaultRoyaltyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyReceiverForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements an ERC721 compliant NFT (Non-Fungible Token) with lazy minting.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"deleteToken(uint256)\":{\"details\":\"Delete a token with the given ID.\",\"params\":{\"_tokenId\":\"The ID of the token to delete.\"}},\"disableContract()\":{\"details\":\"Disable the contract, preventing further minting.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getMintConfig()\":{\"details\":\"Get the current minting configuration.\",\"returns\":{\"_0\":\"mintConfig the mint config.\"}},\"init(string,string,address,uint256)\":{\"details\":\"Contract initialization function.\",\"params\":{\"_creator\":\"The address of the contract creator.\",\"_maxTokens\":\"The maximum number of tokens that can be minted.\",\"_name\":\"The name of the NFT contract.\",\"_symbol\":\"The symbol of the NFT contract.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedMinter(address)\":{\"details\":\"Checks if the supplied address is approved for minting\",\"params\":{\"_address\":\"The address of the minter.\"},\"returns\":{\"_0\":\"bool, whether the address is approved for minting.\"}},\"lockBaseURI()\":{\"details\":\"Lock the metadata to prevent  further updates.\"},\"mintTo(address)\":{\"details\":\"Mint a new token to the specified receiver.\",\"params\":{\"_receiver\":\"The address of the token receiver.\"},\"returns\":{\"_0\":\"uint256 Token Id of the new token.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"prepareMint(string,uint256)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"prepareMintWithMinter(string,uint256,address)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_minter\":\"The address of the minter.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setDefaultRoyaltyReceiver(address)\":{\"details\":\"Set the default royalty receiver address.\",\"params\":{\"_receiver\":\"The address of the default royalty receiver.\"}},\"setRoyaltyReceiverForToken(address,uint256)\":{\"details\":\"Set a specific royalty receiver address for a token.\",\"params\":{\"_receiver\":\"The address of the royalty receiver.\",\"_tokenId\":\"The ID of the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenCreator(uint256)\":{\"details\":\"Get the address of the token creator for a given token ID.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"address of the token creator.\"}},\"tokenURI(uint256)\":{\"details\":\"Get the token URI for a specific token.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token's URI.\"}},\"totalSupply()\":{\"details\":\"Get the total supply of tokens in existence.\",\"returns\":{\"_0\":\"The total supply of tokens.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseURI(string)\":{\"details\":\"Update the base URI.\",\"params\":{\"_baseURI\":\"The new base URI.\"}}},\"title\":\"LazySovereignNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":\"LazySovereignNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aux/=lib/aux/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":solmate/=lib/royalty-guard/lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad\",\"dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740\",\"dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d\",\"dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c\",\"dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579\",\"dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78\",\"dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5\",\"dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp\"]},\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":{\"keccak256\":\"0x2bf5b28a66285526edbbe6296821d9d670e10f555fbd3db09e5dd0e52502aa9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8f31b26145a827a2f695baa3715811d1ed3db8f098d5339e64867585d2a43f\",\"dweb:/ipfs/QmbcEaJUrSyF1QXNn9dK7HoRNsEqjAJG9fesdgoKQrTPYg\"]},\"src/token/extensions/ERC2981Upgradeable.sol\":{\"keccak256\":\"0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465\",\"dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA\"]},\"src/token/extensions/IERC2981.sol\":{\"keccak256\":\"0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b\",\"dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w\"]},\"src/token/extensions/ITokenCreator.sol\":{\"keccak256\":\"0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42\",\"dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ContractDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PrepareMint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "disabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMintConfig",
          "outputs": [
            {
              "internalType": "struct LazySovereignNFT.MintConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numberOfTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseURI",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "lockedMetadata",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockBaseURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMint"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMintWithMinter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyReceiverForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenCreator",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBaseURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
          },
          "deleteToken(uint256)": {
            "details": "Delete a token with the given ID.",
            "params": {
              "_tokenId": "The ID of the token to delete."
            }
          },
          "disableContract()": {
            "details": "Disable the contract, preventing further minting."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getMintConfig()": {
            "details": "Get the current minting configuration.",
            "returns": {
              "_0": "mintConfig the mint config."
            }
          },
          "init(string,string,address,uint256)": {
            "details": "Contract initialization function.",
            "params": {
              "_creator": "The address of the contract creator.",
              "_maxTokens": "The maximum number of tokens that can be minted.",
              "_name": "The name of the NFT contract.",
              "_symbol": "The symbol of the NFT contract."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedMinter(address)": {
            "details": "Checks if the supplied address is approved for minting",
            "params": {
              "_address": "The address of the minter."
            },
            "returns": {
              "_0": "bool, whether the address is approved for minting."
            }
          },
          "lockBaseURI()": {
            "details": "Lock the metadata to prevent  further updates."
          },
          "mintTo(address)": {
            "details": "Mint a new token to the specified receiver.",
            "params": {
              "_receiver": "The address of the token receiver."
            },
            "returns": {
              "_0": "uint256 Token Id of the new token."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "prepareMint(string,uint256)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "prepareMintWithMinter(string,uint256,address)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_minter": "The address of the minter.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "_salePrice": "- the sale price of the NFT asset specified by _tokenId",
              "_tokenId": "- the NFT asset queried for royalty information"
            },
            "returns": {
              "receiver": "- address of who should be sent the royalty payment",
              "royaltyAmount": "- the royalty payment amount for _salePrice"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setDefaultRoyaltyReceiver(address)": {
            "details": "Set the default royalty receiver address.",
            "params": {
              "_receiver": "The address of the default royalty receiver."
            }
          },
          "setRoyaltyReceiverForToken(address,uint256)": {
            "details": "Set a specific royalty receiver address for a token.",
            "params": {
              "_receiver": "The address of the royalty receiver.",
              "_tokenId": "The ID of the token."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenCreator(uint256)": {
            "details": "Get the address of the token creator for a given token ID.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "address of the token creator."
            }
          },
          "tokenURI(uint256)": {
            "details": "Get the token URI for a specific token.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token's URI."
            }
          },
          "totalSupply()": {
            "details": "Get the total supply of tokens in existence.",
            "returns": {
              "_0": "The total supply of tokens."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateBaseURI(string)": {
            "details": "Update the base URI.",
            "params": {
              "_baseURI": "The new base URI."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "aux/=lib/aux/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/aux/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/aux/lib/openzeppelin-contracts-upgradeable/contracts/",
        "rareprotocol/aux/=lib/aux/src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "solmate/=lib/royalty-guard/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": "LazySovereignNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e",
        "urls": [
          "bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad",
          "dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0xf7f866b810ddf2508a9cba461906617a1ff561e33835d81a1be9bff9bbfb7ff9",
        "urls": [
          "bzz-raw://21142ed30406e8f3dc9d42907aaef8bd34dfee63101d011fc3e1a3a198b9c740",
          "dweb:/ipfs/QmW7EkuJFzsejU5keEjULPFFDe8gBEiNYdQ6Z1LrgWnHst"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0x6c4dd0c916c4d69014b1a430f5803d3ea1f35c1a8021aefafde55ca4c2d20c2a",
        "urls": [
          "bzz-raw://93fd17a1502ac391fd929e9c585032efed0b2ed1fb6fe6026dbc44621538b84d",
          "dweb:/ipfs/Qmd3S9HaNGe83wctpj7Bvn6p2veG5P6QH1nPcRuKNJfUqN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xd16dc04b4bf357ae9d04e02d9fd05cc320bbc89720e0ad8efc2386e476f0b921",
        "urls": [
          "bzz-raw://4d9c9054ada43073f83e6e36761a5e428da1a0ec0f1b238995deddcac2c21b8c",
          "dweb:/ipfs/QmS3pcaWW4uwaQqJ3iQ56fpNcf6NtWZTHeYL4fvPa3gQYz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol": {
        "keccak256": "0x417a6f201d6b0e3872979beca22f173ca518ef826fafb23b8d5b93bf7e42192d",
        "urls": [
          "bzz-raw://3ccc2bdaacf5e5cd18d3d5424e9eb118ff9e59485011595381869af89665c579",
          "dweb:/ipfs/QmdPps2gVGqktfANjoxyU93ridF86vpppp7HNoiJkDzksm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37",
        "urls": [
          "bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78",
          "dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol": {
        "keccak256": "0x2033e349d606483684968f190b814bbc853774c8d82305e179d094c5042fb512",
        "urls": [
          "bzz-raw://aa9b82acfb4493894b4123b4ab44f5ace697e743631642a8e0bc60aafca2bac5",
          "dweb:/ipfs/QmePLecHQuCPTErGNPH7C2zdXod9RZncAZ2cJoYBaUaPQp"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": {
        "keccak256": "0x2bf5b28a66285526edbbe6296821d9d670e10f555fbd3db09e5dd0e52502aa9d",
        "urls": [
          "bzz-raw://cc8f31b26145a827a2f695baa3715811d1ed3db8f098d5339e64867585d2a43f",
          "dweb:/ipfs/QmbcEaJUrSyF1QXNn9dK7HoRNsEqjAJG9fesdgoKQrTPYg"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ERC2981Upgradeable.sol": {
        "keccak256": "0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d",
        "urls": [
          "bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465",
          "dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA"
        ],
        "license": "MIT"
      },
      "src/token/extensions/IERC2981.sol": {
        "keccak256": "0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd",
        "urls": [
          "bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b",
          "dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ITokenCreator.sol": {
        "keccak256": "0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6",
        "urls": [
          "bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42",
          "dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol",
    "id": 4293,
    "exportedSymbols": {
      "AddressUpgradeable": [
        1610
      ],
      "ContextUpgradeable": [
        1652
      ],
      "CountersUpgradeable": [
        1726
      ],
      "ERC165Upgradeable": [
        1973
      ],
      "ERC2981Upgradeable": [
        4909
      ],
      "ERC721BurnableUpgradeable": [
        1340
      ],
      "ERC721Upgradeable": [
        1156
      ],
      "IERC165Upgradeable": [
        1985
      ],
      "IERC2981": [
        4925
      ],
      "IERC721MetadataUpgradeable": [
        1367
      ],
      "IERC721ReceiverUpgradeable": [
        1174
      ],
      "IERC721Upgradeable": [
        1290
      ],
      "ITokenCreator": [
        4935
      ],
      "Initializable": [
        265
      ],
      "LazySovereignNFT": [
        4292
      ],
      "OwnableUpgradeable": [
        123
      ],
      "SafeMathUpgradeable": [
        2297
      ],
      "StringsUpgradeable": [
        1929
      ]
    },
    "nodeType": "SourceUnit",
    "src": "85:11889:24",
    "nodes": [
      {
        "id": 3762,
        "nodeType": "PragmaDirective",
        "src": "85:23:24",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 3763,
        "nodeType": "ImportDirective",
        "src": "110:79:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 1157,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3764,
        "nodeType": "ImportDirective",
        "src": "190:98:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 1341,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3765,
        "nodeType": "ImportDirective",
        "src": "289:86:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 1974,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3766,
        "nodeType": "ImportDirective",
        "src": "376:74:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3767,
        "nodeType": "ImportDirective",
        "src": "451:74:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/CountersUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 1727,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3768,
        "nodeType": "ImportDirective",
        "src": "526:79:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 2298,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3769,
        "nodeType": "ImportDirective",
        "src": "606:47:24",
        "nodes": [],
        "absolutePath": "src/token/extensions/ITokenCreator.sol",
        "file": "../../../extensions/ITokenCreator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 4936,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3770,
        "nodeType": "ImportDirective",
        "src": "654:52:24",
        "nodes": [],
        "absolutePath": "src/token/extensions/ERC2981Upgradeable.sol",
        "file": "../../../extensions/ERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4293,
        "sourceUnit": 4910,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4292,
        "nodeType": "ContractDefinition",
        "src": "841:11132:24",
        "nodes": [
          {
            "id": 3786,
            "nodeType": "UsingForDirective",
            "src": "1019:38:24",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3784,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2297,
              "src": "1025:19:24"
            },
            "typeName": {
              "id": 3785,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1049:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3789,
            "nodeType": "UsingForDirective",
            "src": "1062:37:24",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3787,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1929,
              "src": "1068:18:24"
            },
            "typeName": {
              "id": 3788,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1091:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3793,
            "nodeType": "UsingForDirective",
            "src": "1104:58:24",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3790,
              "name": "CountersUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1726,
              "src": "1110:19:24"
            },
            "typeName": {
              "id": 3792,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3791,
                "name": "CountersUpgradeable.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1658,
                "src": "1134:27:24"
              },
              "referencedDeclaration": 1658,
              "src": "1134:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1658_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "id": 3800,
            "nodeType": "StructDefinition",
            "src": "1347:110:24",
            "nodes": [],
            "canonicalName": "LazySovereignNFT.MintConfig",
            "members": [
              {
                "constant": false,
                "id": 3795,
                "mutability": "mutable",
                "name": "numberOfTokens",
                "nameLocation": "1383:14:24",
                "nodeType": "VariableDeclaration",
                "scope": 3800,
                "src": "1375:22:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3794,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1375:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3797,
                "mutability": "mutable",
                "name": "baseURI",
                "nameLocation": "1414:7:24",
                "nodeType": "VariableDeclaration",
                "scope": 3800,
                "src": "1407:14:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3796,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1407:6:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3799,
                "mutability": "mutable",
                "name": "lockedMetadata",
                "nameLocation": "1436:14:24",
                "nodeType": "VariableDeclaration",
                "scope": 3800,
                "src": "1431:19:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3798,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1431:4:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MintConfig",
            "nameLocation": "1354:10:24",
            "scope": 4292,
            "visibility": "public"
          },
          {
            "id": 3802,
            "nodeType": "VariableDeclaration",
            "src": "1779:20:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "ee070805",
            "mutability": "mutable",
            "name": "disabled",
            "nameLocation": "1791:8:24",
            "scope": 4292,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3801,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1779:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3804,
            "nodeType": "VariableDeclaration",
            "src": "1857:24:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "e8315742",
            "mutability": "mutable",
            "name": "maxTokens",
            "nameLocation": "1872:9:24",
            "scope": 4292,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3803,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1857:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3808,
            "nodeType": "VariableDeclaration",
            "src": "2054:50:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenApprovals",
            "nameLocation": "2090:14:24",
            "scope": 4292,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3807,
              "keyType": {
                "id": 3805,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2062:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2054:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3806,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2073:7:24",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 3812,
            "nodeType": "VariableDeclaration",
            "src": "2176:48:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minterAddresses",
            "nameLocation": "2209:15:24",
            "scope": 4292,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3811,
              "keyType": {
                "id": 3809,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2184:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2176:24:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3810,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2195:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 3815,
            "nodeType": "VariableDeclaration",
            "src": "2285:50:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenIdCounter",
            "nameLocation": "2321:14:24",
            "scope": 4292,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1658_storage",
              "typeString": "struct CountersUpgradeable.Counter"
            },
            "typeName": {
              "id": 3814,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3813,
                "name": "CountersUpgradeable.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1658,
                "src": "2285:27:24"
              },
              "referencedDeclaration": 1658,
              "src": "2285:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1658_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 3818,
            "nodeType": "VariableDeclaration",
            "src": "2380:29:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mintConfig",
            "nameLocation": "2399:10:24",
            "scope": 4292,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
              "typeString": "struct LazySovereignNFT.MintConfig"
            },
            "typeName": {
              "id": 3817,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3816,
                "name": "MintConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3800,
                "src": "2380:10:24"
              },
              "referencedDeclaration": 3800,
              "src": "2380:10:24",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MintConfig_$3800_storage_ptr",
                "typeString": "struct LazySovereignNFT.MintConfig"
              }
            },
            "visibility": "private"
          },
          {
            "id": 3822,
            "nodeType": "EventDefinition",
            "src": "2638:45:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd",
            "name": "ContractDisabled",
            "nameLocation": "2644:16:24",
            "parameters": {
              "id": 3821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3820,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2677:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3822,
                  "src": "2661:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2661:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2660:22:24"
            }
          },
          {
            "id": 3828,
            "nodeType": "EventDefinition",
            "src": "2729:66:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba19",
            "name": "PrepareMint",
            "nameLocation": "2735:11:24",
            "parameters": {
              "id": 3827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "numberOfTokens",
                  "nameLocation": "2763:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3828,
                  "src": "2747:30:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3826,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2786:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3828,
                  "src": "2779:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3825,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:48:24"
            }
          },
          {
            "id": 3832,
            "nodeType": "EventDefinition",
            "src": "2839:37:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e",
            "name": "MetadataLocked",
            "nameLocation": "2845:14:24",
            "parameters": {
              "id": 3831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3830,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2867:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3832,
                  "src": "2860:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3829,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2859:16:24"
            }
          },
          {
            "id": 3836,
            "nodeType": "EventDefinition",
            "src": "2921:38:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e",
            "name": "MetadataUpdated",
            "nameLocation": "2927:15:24",
            "parameters": {
              "id": 3835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2950:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "2943:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3833,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2942:16:24"
            }
          },
          {
            "id": 3897,
            "nodeType": "FunctionDefinition",
            "src": "3441:548:24",
            "nodes": [],
            "body": {
              "id": 3896,
              "nodeType": "Block",
              "src": "3598:391:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3851,
                          "name": "_creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3843,
                          "src": "3616:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3636:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3628:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3852,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3628:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3628:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3616:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746f722063616e6e6f74206265206e756c6c2061646472657373",
                        "id": 3857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3640:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6b5b1211b5e6bbc5108a4538b47b57acfb95986a81d99f9ebc78a6dbfa62ee",
                          "typeString": "literal_string \"creator cannot be null address\""
                        },
                        "value": "creator cannot be null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6b5b1211b5e6bbc5108a4538b47b57acfb95986a81d99f9ebc78a6dbfa62ee",
                          "typeString": "literal_string \"creator cannot be null address\""
                        }
                      ],
                      "id": 3850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3608:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:65:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3859,
                  "nodeType": "ExpressionStatement",
                  "src": "3608:65:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 3861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3712:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 3860,
                      "name": "_setDefaultRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4892,
                      "src": "3683:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3683:32:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3863,
                  "nodeType": "ExpressionStatement",
                  "src": "3683:32:24"
                },
                {
                  "expression": {
                    "id": 3866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3864,
                      "name": "disabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3802,
                      "src": "3725:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3736:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3725:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3867,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:16:24"
                },
                {
                  "expression": {
                    "id": 3870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3868,
                      "name": "maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3804,
                      "src": "3751:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3869,
                      "name": "_maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3845,
                      "src": "3763:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3751:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3871,
                  "nodeType": "ExpressionStatement",
                  "src": "3751:22:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3872,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "3784:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3784:16:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3874,
                  "nodeType": "ExpressionStatement",
                  "src": "3784:16:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3876,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3839,
                        "src": "3824:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3877,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3841,
                        "src": "3831:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3875,
                      "name": "__ERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "3810:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3810:29:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3879,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:29:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3880,
                      "name": "__ERC165_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1944,
                      "src": "3849:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:15:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3882,
                  "nodeType": "ExpressionStatement",
                  "src": "3849:15:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3883,
                      "name": "__ERC2981__init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4775,
                      "src": "3874:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:17:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3885,
                  "nodeType": "ExpressionStatement",
                  "src": "3874:17:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3887,
                        "name": "_creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3843,
                        "src": "3929:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3886,
                      "name": "_setDefaultRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4833,
                      "src": "3902:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3902:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3889,
                  "nodeType": "ExpressionStatement",
                  "src": "3902:36:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3893,
                        "name": "_creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3843,
                        "src": "3973:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3890,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3949:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFT_$4292_$",
                          "typeString": "type(contract super LazySovereignNFT)"
                        }
                      },
                      "id": 3892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "3949:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3949:33:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3895,
                  "nodeType": "ExpressionStatement",
                  "src": "3949:33:24"
                }
              ]
            },
            "documentation": {
              "id": 3837,
              "nodeType": "StructuredDocumentation",
              "src": "3141:295:24",
              "text": " @dev Contract initialization function.\n @param _name The name of the NFT contract.\n @param _symbol The symbol of the NFT contract.\n @param _creator The address of the contract creator.\n @param _maxTokens The maximum number of tokens that can be minted."
            },
            "functionSelector": "5edc7c19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3848,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3847,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 167,
                  "src": "3586:11:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3586:11:24"
              }
            ],
            "name": "init",
            "nameLocation": "3450:4:24",
            "parameters": {
              "id": 3846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3839,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3480:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3897,
                  "src": "3464:21:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3464:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3841,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3511:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3897,
                  "src": "3495:23:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3843,
                  "mutability": "mutable",
                  "name": "_creator",
                  "nameLocation": "3536:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3897,
                  "src": "3528:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3528:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3845,
                  "mutability": "mutable",
                  "name": "_maxTokens",
                  "nameLocation": "3562:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3897,
                  "src": "3554:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3454:124:24"
            },
            "returnParameters": {
              "id": 3849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3598:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3908,
            "nodeType": "ModifierDefinition",
            "src": "4255:105:24",
            "nodes": [],
            "body": {
              "id": 3907,
              "nodeType": "Block",
              "src": "4280:80:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4298:9:24",
                        "subExpression": {
                          "id": 3901,
                          "name": "disabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3802,
                          "src": "4299:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206d757374206e6f742062652064697361626c65642e",
                        "id": 3903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4309:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b71ca1c3bd528156808cb7a73ab2c5a516c90c9e4e66cd32f11bb4e07aeb5ad",
                          "typeString": "literal_string \"Contract must not be disabled.\""
                        },
                        "value": "Contract must not be disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b71ca1c3bd528156808cb7a73ab2c5a516c90c9e4e66cd32f11bb4e07aeb5ad",
                          "typeString": "literal_string \"Contract must not be disabled.\""
                        }
                      ],
                      "id": 3900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4290:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4290:52:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3905,
                  "nodeType": "ExpressionStatement",
                  "src": "4290:52:24"
                },
                {
                  "id": 3906,
                  "nodeType": "PlaceholderStatement",
                  "src": "4352:1:24"
                }
              ]
            },
            "documentation": {
              "id": 3898,
              "nodeType": "StructuredDocumentation",
              "src": "4176:74:24",
              "text": " @dev Modifier to check if the contract is not disabled."
            },
            "name": "ifNotDisabled",
            "nameLocation": "4264:13:24",
            "parameters": {
              "id": 3899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4277:2:24"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3926,
            "nodeType": "FunctionDefinition",
            "src": "4784:181:24",
            "nodes": [],
            "body": {
              "id": 3925,
              "nodeType": "Block",
              "src": "4909:56:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3921,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3911,
                        "src": "4932:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3922,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3913,
                        "src": "4942:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3920,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4291,
                      "src": "4919:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string calldata,uint256)"
                      }
                    },
                    "id": 3923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4919:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3924,
                  "nodeType": "ExpressionStatement",
                  "src": "4919:39:24"
                }
              ]
            },
            "documentation": {
              "id": 3909,
              "nodeType": "StructuredDocumentation",
              "src": "4553:226:24",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting."
            },
            "functionSelector": "b390ac25",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3916,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3915,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "4885:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4885:9:24"
              },
              {
                "id": 3918,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3917,
                  "name": "ifNotDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3908,
                  "src": "4895:13:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4895:13:24"
              }
            ],
            "name": "prepareMint",
            "nameLocation": "4793:11:24",
            "parameters": {
              "id": 3914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3911,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "4830:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3926,
                  "src": "4814:24:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3910,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4814:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3913,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "4856:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3926,
                  "src": "4848:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4848:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4804:73:24"
            },
            "returnParameters": {
              "id": 3919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4909:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3952,
            "nodeType": "FunctionDefinition",
            "src": "5280:257:24",
            "nodes": [],
            "body": {
              "id": 3951,
              "nodeType": "Block",
              "src": "5440:97:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3941,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3929,
                        "src": "5463:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3942,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3931,
                        "src": "5473:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3940,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4291,
                      "src": "5450:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string calldata,uint256)"
                      }
                    },
                    "id": 3943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5450:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3944,
                  "nodeType": "ExpressionStatement",
                  "src": "5450:39:24"
                },
                {
                  "expression": {
                    "id": 3949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3945,
                        "name": "minterAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "5499:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3947,
                      "indexExpression": {
                        "id": 3946,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3933,
                        "src": "5515:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5499:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5526:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5499:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3950,
                  "nodeType": "ExpressionStatement",
                  "src": "5499:31:24"
                }
              ]
            },
            "documentation": {
              "id": 3927,
              "nodeType": "StructuredDocumentation",
              "src": "4971:304:24",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting.\n @param _minter The address of the minter."
            },
            "functionSelector": "b9fbd25c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3936,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3935,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "5416:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5416:9:24"
              },
              {
                "id": 3938,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3937,
                  "name": "ifNotDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3908,
                  "src": "5426:13:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5426:13:24"
              }
            ],
            "name": "prepareMintWithMinter",
            "nameLocation": "5289:21:24",
            "parameters": {
              "id": 3934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3929,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5336:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3952,
                  "src": "5320:24:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3928,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5320:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3931,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "5362:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3952,
                  "src": "5354:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5354:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3933,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "5395:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3952,
                  "src": "5387:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5387:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5310:98:24"
            },
            "returnParameters": {
              "id": 3939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5440:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3985,
            "nodeType": "FunctionDefinition",
            "src": "5724:386:24",
            "nodes": [],
            "body": {
              "id": 3984,
              "nodeType": "Block",
              "src": "5800:310:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3963,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5831:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5831:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3965,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "5845:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5845:7:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5831:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 3968,
                            "name": "minterAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3812,
                            "src": "5856:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3971,
                          "indexExpression": {
                            "expression": {
                              "id": 3969,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5872:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5872:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5856:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5831:52:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f766564206d696e7465722063616e206d696e74",
                        "id": 3973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5897:50:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_154b6b63a911da25ac18acc635a749cf602b944b6188d913be9072c29e435a47",
                          "typeString": "literal_string \"lazyMint::only owner or approved minter can mint\""
                        },
                        "value": "lazyMint::only owner or approved minter can mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_154b6b63a911da25ac18acc635a749cf602b944b6188d913be9072c29e435a47",
                          "typeString": "literal_string \"lazyMint::only owner or approved minter can mint\""
                        }
                      ],
                      "id": 3962,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5810:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5810:147:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3975,
                  "nodeType": "ExpressionStatement",
                  "src": "5810:147:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3977,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3955,
                        "src": "6000:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3978,
                          "name": "getDefaultRoyaltyPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4908,
                          "src": "6023:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 3979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6023:29:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3980,
                          "name": "getDefaultRoyaltyReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4900,
                          "src": "6066:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6066:27:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3976,
                      "name": "_createToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4253,
                      "src": "5974:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 3982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5974:129:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3961,
                  "id": 3983,
                  "nodeType": "Return",
                  "src": "5967:136:24"
                }
              ]
            },
            "documentation": {
              "id": 3953,
              "nodeType": "StructuredDocumentation",
              "src": "5543:176:24",
              "text": " @dev Mint a new token to the specified receiver.\n @param _receiver The address of the token receiver.\n @return uint256 Token Id of the new token."
            },
            "functionSelector": "755edd17",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3958,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3957,
                  "name": "ifNotDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3908,
                  "src": "5768:13:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5768:13:24"
              }
            ],
            "name": "mintTo",
            "nameLocation": "5733:6:24",
            "parameters": {
              "id": 3956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3955,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "5748:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3985,
                  "src": "5740:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5740:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5739:19:24"
            },
            "returnParameters": {
              "id": 3961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3985,
                  "src": "5791:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5791:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5790:9:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4006,
            "nodeType": "FunctionDefinition",
            "src": "6232:196:24",
            "nodes": [],
            "body": {
              "id": 4005,
              "nodeType": "Block",
              "src": "6278:150:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3993,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3988,
                              "src": "6317:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3992,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "6309:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6309:17:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3995,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6330:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6330:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6309:31:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420626520746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 3998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6354:33:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53b82fbec1ffee6cd23478fb42d47a3c9d94588d16a7244f1dfbe7e93dd41efb",
                          "typeString": "literal_string \"Must be the owner of the token.\""
                        },
                        "value": "Must be the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53b82fbec1ffee6cd23478fb42d47a3c9d94588d16a7244f1dfbe7e93dd41efb",
                          "typeString": "literal_string \"Must be the owner of the token.\""
                        }
                      ],
                      "id": 3991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6288:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6288:109:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4000,
                  "nodeType": "ExpressionStatement",
                  "src": "6288:109:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4002,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3988,
                        "src": "6412:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4001,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1334,
                      "src": "6407:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6407:14:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4004,
                  "nodeType": "ExpressionStatement",
                  "src": "6407:14:24"
                }
              ]
            },
            "documentation": {
              "id": 3986,
              "nodeType": "StructuredDocumentation",
              "src": "6116:111:24",
              "text": " @dev Delete a token with the given ID.\n @param _tokenId The ID of the token to delete."
            },
            "functionSelector": "6297c16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteToken",
            "nameLocation": "6241:11:24",
            "parameters": {
              "id": 3989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3988,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6261:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4006,
                  "src": "6253:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6253:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6252:18:24"
            },
            "returnParameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4022,
            "nodeType": "FunctionDefinition",
            "src": "6512:119:24",
            "nodes": [],
            "body": {
              "id": 4021,
              "nodeType": "Block",
              "src": "6556:75:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4012,
                      "name": "disabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3802,
                      "src": "6566:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6577:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6566:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4015,
                  "nodeType": "ExpressionStatement",
                  "src": "6566:15:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4017,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6613:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6613:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4016,
                      "name": "ContractDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3822,
                      "src": "6596:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6596:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4020,
                  "nodeType": "EmitStatement",
                  "src": "6591:33:24"
                }
              ]
            },
            "documentation": {
              "id": 4007,
              "nodeType": "StructuredDocumentation",
              "src": "6434:73:24",
              "text": " @dev Disable the contract, preventing further minting."
            },
            "functionSelector": "894ba833",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4010,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4009,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "6546:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "6546:9:24"
              }
            ],
            "name": "disableContract",
            "nameLocation": "6521:15:24",
            "parameters": {
              "id": 4008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6536:2:24"
            },
            "returnParameters": {
              "id": 4011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6556:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4035,
            "nodeType": "FunctionDefinition",
            "src": "6776:127:24",
            "nodes": [],
            "body": {
              "id": 4034,
              "nodeType": "Block",
              "src": "6849:54:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4031,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4025,
                        "src": "6886:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4030,
                      "name": "_setDefaultRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4833,
                      "src": "6859:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6859:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4033,
                  "nodeType": "ExpressionStatement",
                  "src": "6859:37:24"
                }
              ]
            },
            "documentation": {
              "id": 4023,
              "nodeType": "StructuredDocumentation",
              "src": "6637:134:24",
              "text": " @dev Set the default royalty receiver address.\n @param _receiver The address of the default royalty receiver."
            },
            "functionSelector": "3ebc82c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4028,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4027,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "6839:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "6839:9:24"
              }
            ],
            "name": "setDefaultRoyaltyReceiver",
            "nameLocation": "6785:25:24",
            "parameters": {
              "id": 4026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4025,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "6819:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4035,
                  "src": "6811:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6811:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6810:19:24"
            },
            "returnParameters": {
              "id": 4029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6849:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4052,
            "nodeType": "FunctionDefinition",
            "src": "7095:169:24",
            "nodes": [],
            "body": {
              "id": 4051,
              "nodeType": "Block",
              "src": "7209:55:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4045,
                        "name": "royaltyReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4758,
                        "src": "7219:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4047,
                      "indexExpression": {
                        "id": 4046,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4040,
                        "src": "7236:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7219:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4048,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4038,
                      "src": "7248:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7219:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4050,
                  "nodeType": "ExpressionStatement",
                  "src": "7219:38:24"
                }
              ]
            },
            "documentation": {
              "id": 4036,
              "nodeType": "StructuredDocumentation",
              "src": "6909:181:24",
              "text": " @dev Set a specific royalty receiver address for a token.\n @param _receiver The address of the royalty receiver.\n @param _tokenId The ID of the token."
            },
            "functionSelector": "efc32cd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4042,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7199:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "7199:9:24"
              }
            ],
            "name": "setRoyaltyReceiverForToken",
            "nameLocation": "7104:26:24",
            "parameters": {
              "id": 4041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4038,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "7148:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "7140:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7140:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4040,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7175:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "7167:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7167:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7130:59:24"
            },
            "returnParameters": {
              "id": 4044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7209:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4078,
            "nodeType": "FunctionDefinition",
            "src": "7360:271:24",
            "nodes": [],
            "body": {
              "id": 4077,
              "nodeType": "Block",
              "src": "7428:203:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7459:26:24",
                        "subExpression": {
                          "expression": {
                            "id": 4061,
                            "name": "mintConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3818,
                            "src": "7460:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                              "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                            }
                          },
                          "id": 4062,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lockedMetadata",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3799,
                          "src": "7460:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757064617465426173655552493a3a6d65746164617461206973206c6f636b6564",
                        "id": 4064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7499:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e879a4eb0b95d57c5322495d59f06e56373f394de36bd10c977c1387a356c74",
                          "typeString": "literal_string \"updateBaseURI::metadata is locked\""
                        },
                        "value": "updateBaseURI::metadata is locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e879a4eb0b95d57c5322495d59f06e56373f394de36bd10c977c1387a356c74",
                          "typeString": "literal_string \"updateBaseURI::metadata is locked\""
                        }
                      ],
                      "id": 4060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7438:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7438:106:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4066,
                  "nodeType": "ExpressionStatement",
                  "src": "7438:106:24"
                },
                {
                  "expression": {
                    "id": 4071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4067,
                        "name": "mintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3818,
                        "src": "7555:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                          "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                        }
                      },
                      "id": 4069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3797,
                      "src": "7555:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4070,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4055,
                      "src": "7576:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7555:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4072,
                  "nodeType": "ExpressionStatement",
                  "src": "7555:29:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4074,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "7615:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 4073,
                      "name": "MetadataUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3836,
                      "src": "7599:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7599:25:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4076,
                  "nodeType": "EmitStatement",
                  "src": "7594:30:24"
                }
              ]
            },
            "documentation": {
              "id": 4053,
              "nodeType": "StructuredDocumentation",
              "src": "7270:85:24",
              "text": " @dev Update the base URI.\n @param _baseURI The new base URI."
            },
            "functionSelector": "931688cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4058,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4057,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7418:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "7418:9:24"
              }
            ],
            "name": "updateBaseURI",
            "nameLocation": "7369:13:24",
            "parameters": {
              "id": 4056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4055,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "7399:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4078,
                  "src": "7383:24:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4054,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7383:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7382:26:24"
            },
            "returnParameters": {
              "id": 4059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7428:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4096,
            "nodeType": "FunctionDefinition",
            "src": "7712:140:24",
            "nodes": [],
            "body": {
              "id": 4095,
              "nodeType": "Block",
              "src": "7754:98:24",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4085,
                          "name": "mintConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3818,
                          "src": "7784:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                            "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                          }
                        },
                        "id": 4086,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "baseURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3797,
                        "src": "7784:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 4084,
                      "name": "MetadataLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3832,
                      "src": "7769:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 4087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7769:34:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4088,
                  "nodeType": "EmitStatement",
                  "src": "7764:39:24"
                },
                {
                  "expression": {
                    "id": 4093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4089,
                        "name": "mintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3818,
                        "src": "7813:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                          "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                        }
                      },
                      "id": 4091,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lockedMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3799,
                      "src": "7813:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7841:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7813:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4094,
                  "nodeType": "ExpressionStatement",
                  "src": "7813:32:24"
                }
              ]
            },
            "documentation": {
              "id": 4079,
              "nodeType": "StructuredDocumentation",
              "src": "7637:70:24",
              "text": " @dev Lock the metadata to prevent  further updates."
            },
            "functionSelector": "53df5c7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4081,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7744:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "7744:9:24"
              }
            ],
            "name": "lockBaseURI",
            "nameLocation": "7721:11:24",
            "parameters": {
              "id": 4080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7732:2:24"
            },
            "returnParameters": {
              "id": 4083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7754:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4109,
            "nodeType": "FunctionDefinition",
            "src": "8243:135:24",
            "nodes": [],
            "body": {
              "id": 4108,
              "nodeType": "Block",
              "src": "8329:49:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4104,
                      "name": "minterAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3812,
                      "src": "8346:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 4106,
                    "indexExpression": {
                      "id": 4105,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4099,
                      "src": "8362:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8346:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4103,
                  "id": 4107,
                  "nodeType": "Return",
                  "src": "8339:32:24"
                }
              ]
            },
            "documentation": {
              "id": 4097,
              "nodeType": "StructuredDocumentation",
              "src": "8044:194:24",
              "text": " @dev Checks if the supplied address is approved for minting\n @param _address The address of the minter.\n @return bool, whether the address is approved for minting."
            },
            "functionSelector": "3a3d146f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedMinter",
            "nameLocation": "8252:16:24",
            "parameters": {
              "id": 4100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4099,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "8286:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4109,
                  "src": "8278:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8278:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8268:32:24"
            },
            "returnParameters": {
              "id": 4103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4109,
                  "src": "8323:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8323:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8322:6:24"
            },
            "scope": 4292,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4125,
            "nodeType": "FunctionDefinition",
            "src": "8560:141:24",
            "nodes": [],
            "body": {
              "id": 4124,
              "nodeType": "Block",
              "src": "8661:40:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4120,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "8686:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8686:7:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8678:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 4118,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8678:8:24",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8678:16:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 4117,
                  "id": 4123,
                  "nodeType": "Return",
                  "src": "8671:23:24"
                }
              ]
            },
            "baseFunctions": [
              4934
            ],
            "documentation": {
              "id": 4110,
              "nodeType": "StructuredDocumentation",
              "src": "8384:171:24",
              "text": " @dev Get the address of the token creator for a given token ID.\n @param _tokenId The ID of the token.\n @return address of the token creator."
            },
            "functionSelector": "40c1a064",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenCreator",
            "nameLocation": "8569:12:24",
            "overrides": {
              "id": 4114,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8626:8:24"
            },
            "parameters": {
              "id": 4113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4112,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8599:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4125,
                  "src": "8591:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8591:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8581:32:24"
            },
            "returnParameters": {
              "id": 4117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4125,
                  "src": "8644:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8644:15:24",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8643:17:24"
            },
            "scope": 4292,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4135,
            "nodeType": "FunctionDefinition",
            "src": "8817:127:24",
            "nodes": [],
            "body": {
              "id": 4134,
              "nodeType": "Block",
              "src": "8910:34:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4132,
                    "name": "mintConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3818,
                    "src": "8927:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                      "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 4131,
                  "id": 4133,
                  "nodeType": "Return",
                  "src": "8920:17:24"
                }
              ]
            },
            "documentation": {
              "id": 4126,
              "nodeType": "StructuredDocumentation",
              "src": "8707:105:24",
              "text": " @dev Get the current minting configuration.\n @return mintConfig the mint config."
            },
            "functionSelector": "9338bb5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintConfig",
            "nameLocation": "8826:13:24",
            "parameters": {
              "id": 4127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8839:2:24"
            },
            "returnParameters": {
              "id": 4131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4135,
                  "src": "8887:17:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintConfig_$3800_memory_ptr",
                    "typeString": "struct LazySovereignNFT.MintConfig"
                  },
                  "typeName": {
                    "id": 4129,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4128,
                      "name": "MintConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3800,
                      "src": "8887:10:24"
                    },
                    "referencedDeclaration": 3800,
                    "src": "8887:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$3800_storage_ptr",
                      "typeString": "struct LazySovereignNFT.MintConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8886:19:24"
            },
            "scope": 4292,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4159,
            "nodeType": "FunctionDefinition",
            "src": "9094:346:24",
            "nodes": [],
            "body": {
              "id": 4158,
              "nodeType": "Block",
              "src": "9197:243:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4148,
                              "name": "mintConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3818,
                              "src": "9288:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                                "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                              }
                            },
                            "id": 4149,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "baseURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3797,
                            "src": "9288:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 4150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9328:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 4151,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4138,
                                "src": "9353:8:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1811,
                              "src": "9353:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 4153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9353:19:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a736f6e",
                            "id": 4154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9394:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            },
                            "value": ".json"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            }
                          ],
                          "expression": {
                            "id": 4146,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9250:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9250:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9250:169:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9226:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 4144,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9226:6:24",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9226:207:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 4143,
                  "id": 4157,
                  "nodeType": "Return",
                  "src": "9207:226:24"
                }
              ]
            },
            "baseFunctions": [
              493
            ],
            "documentation": {
              "id": 4136,
              "nodeType": "StructuredDocumentation",
              "src": "8950:139:24",
              "text": " @dev Get the token URI for a specific token.\n @param _tokenId The ID of the token.\n @return The token's URI."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "9103:8:24",
            "overrides": {
              "id": 4140,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9164:8:24"
            },
            "parameters": {
              "id": 4139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4138,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9129:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4159,
                  "src": "9121:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9121:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9111:32:24"
            },
            "returnParameters": {
              "id": 4143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4159,
                  "src": "9182:13:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9182:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9181:15:24"
            },
            "scope": 4292,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4170,
            "nodeType": "FunctionDefinition",
            "src": "9562:109:24",
            "nodes": [],
            "body": {
              "id": 4169,
              "nodeType": "Block",
              "src": "9623:48:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4165,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3815,
                        "src": "9640:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1658_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 4166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1670,
                      "src": "9640:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1658_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1658_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 4167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9640:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4164,
                  "id": 4168,
                  "nodeType": "Return",
                  "src": "9633:31:24"
                }
              ]
            },
            "documentation": {
              "id": 4160,
              "nodeType": "StructuredDocumentation",
              "src": "9446:111:24",
              "text": " @dev Get the total supply of tokens in existence.\n @return The total supply of tokens."
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "9571:11:24",
            "parameters": {
              "id": 4161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9582:2:24"
            },
            "returnParameters": {
              "id": 4164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4170,
                  "src": "9614:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9614:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9613:9:24"
            },
            "scope": 4292,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4205,
            "nodeType": "FunctionDefinition",
            "src": "9738:482:24",
            "nodes": [],
            "body": {
              "id": 4204,
              "nodeType": "Block",
              "src": "9945:275:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 4197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 4187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4182,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4173,
                            "src": "9974:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4184,
                                  "name": "ITokenCreator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4935,
                                  "src": "9994:13:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ITokenCreator_$4935_$",
                                    "typeString": "type(contract ITokenCreator)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_ITokenCreator_$4935_$",
                                    "typeString": "type(contract ITokenCreator)"
                                  }
                                ],
                                "id": 4183,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "9989:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 4185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9989:19:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_ITokenCreator_$4935",
                                "typeString": "type(contract ITokenCreator)"
                              }
                            },
                            "id": 4186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "9989:31:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "9974:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4190,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4173,
                              "src": "10072:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 4188,
                              "name": "ERC165Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1973,
                              "src": "10036:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC165Upgradeable_$1973_$",
                                "typeString": "type(contract ERC165Upgradeable)"
                              }
                            },
                            "id": 4189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1967,
                            "src": "10036:35:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view returns (bool)"
                            }
                          },
                          "id": 4191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10036:48:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9974:110:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 4195,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4173,
                            "src": "10137:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 4193,
                            "name": "ERC2981Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4909,
                            "src": "10100:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC2981Upgradeable_$4909_$",
                              "typeString": "type(contract ERC2981Upgradeable)"
                            }
                          },
                          "id": 4194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4882,
                          "src": "10100:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) view returns (bool)"
                          }
                        },
                        "id": 4196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10100:49:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9974:175:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 4200,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4173,
                          "src": "10201:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 4198,
                          "name": "ERC721Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "10165:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1156_$",
                            "typeString": "type(contract ERC721Upgradeable)"
                          }
                        },
                        "id": 4199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 379,
                        "src": "10165:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 4201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10165:48:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9974:239:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4181,
                  "id": 4203,
                  "nodeType": "Return",
                  "src": "9955:258:24"
                }
              ]
            },
            "baseFunctions": [
              379,
              1967,
              4882
            ],
            "documentation": {
              "id": 4171,
              "nodeType": "StructuredDocumentation",
              "src": "9677:56:24",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "9747:17:24",
            "overrides": {
              "id": 4178,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 4175,
                  "name": "ERC165Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1973,
                  "src": "9860:17:24"
                },
                {
                  "id": 4176,
                  "name": "ERC2981Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4909,
                  "src": "9879:18:24"
                },
                {
                  "id": 4177,
                  "name": "ERC721Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1156,
                  "src": "9899:17:24"
                }
              ],
              "src": "9851:66:24"
            },
            "parameters": {
              "id": 4174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4173,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "9781:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4205,
                  "src": "9774:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4172,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "9774:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9764:34:24"
            },
            "returnParameters": {
              "id": 4181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4205,
                  "src": "9935:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4179,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9935:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9934:6:24"
            },
            "scope": 4292,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4253,
            "nodeType": "FunctionDefinition",
            "src": "10762:489:24",
            "nodes": [],
            "body": {
              "id": 4252,
              "nodeType": "Block",
              "src": "10908:343:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4217,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3815,
                        "src": "10918:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1658_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 4219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1684,
                      "src": "10918:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1658_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1658_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 4220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10918:26:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4221,
                  "nodeType": "ExpressionStatement",
                  "src": "10918:26:24"
                },
                {
                  "assignments": [
                    4223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4223,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "10962:7:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 4252,
                      "src": "10954:15:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10954:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4227,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4224,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3815,
                        "src": "10972:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1658_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 4225,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1670,
                      "src": "10972:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1658_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1658_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 4226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10972:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10954:42:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4229,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4223,
                          "src": "11014:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 4230,
                          "name": "maxTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3804,
                          "src": "11025:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11014:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e73",
                        "id": 4232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11036:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae513c3d0861568782d381366f15b3d100b9bded3d0e0c001fa9100049752646",
                          "typeString": "literal_string \"_createToken::exceeded maxTokens\""
                        },
                        "value": "_createToken::exceeded maxTokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae513c3d0861568782d381366f15b3d100b9bded3d0e0c001fa9100049752646",
                          "typeString": "literal_string \"_createToken::exceeded maxTokens\""
                        }
                      ],
                      "id": 4228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11006:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11006:65:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4234,
                  "nodeType": "ExpressionStatement",
                  "src": "11006:65:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4236,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4208,
                        "src": "11091:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4237,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "11096:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4235,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        780,
                        809
                      ],
                      "referencedDeclaration": 780,
                      "src": "11081:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11081:23:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4239,
                  "nodeType": "ExpressionStatement",
                  "src": "11081:23:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4241,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "11136:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4242,
                        "name": "_royaltyPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4210,
                        "src": "11145:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4240,
                      "name": "_setRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4861,
                      "src": "11114:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11114:50:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4244,
                  "nodeType": "ExpressionStatement",
                  "src": "11114:50:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4246,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "11194:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4247,
                        "name": "_royaltyReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4212,
                        "src": "11203:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4245,
                      "name": "_setRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4847,
                      "src": "11174:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11174:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4249,
                  "nodeType": "ExpressionStatement",
                  "src": "11174:46:24"
                },
                {
                  "expression": {
                    "id": 4250,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4223,
                    "src": "11237:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4216,
                  "id": 4251,
                  "nodeType": "Return",
                  "src": "11230:14:24"
                }
              ]
            },
            "documentation": {
              "id": 4206,
              "nodeType": "StructuredDocumentation",
              "src": "10416:341:24",
              "text": " @dev Create a new token and assign it to the specified recipient.\n @param _to The address of the token recipient.\n @param _royaltyPercentage The royalty percentage for the token.\n @param _royaltyReceiver The address of the royalty receiver for the token.\n @return The ID of the newly created token."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createToken",
            "nameLocation": "10771:12:24",
            "parameters": {
              "id": 4213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4208,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10801:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "10793:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10793:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4210,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "10822:18:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "10814:26:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10814:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4212,
                  "mutability": "mutable",
                  "name": "_royaltyReceiver",
                  "nameLocation": "10858:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "10850:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10850:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10783:97:24"
            },
            "returnParameters": {
              "id": 4216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "10899:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10899:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10898:9:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4291,
            "nodeType": "FunctionDefinition",
            "src": "11488:483:24",
            "nodes": [],
            "body": {
              "id": 4290,
              "nodeType": "Block",
              "src": "11592:379:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4262,
                          "name": "_numberOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4258,
                          "src": "11623:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 4263,
                          "name": "maxTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3804,
                          "src": "11642:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11623:28:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e73",
                        "id": 4265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11665:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d107e18dd5449cb3e3ae144663c6fa6de59970e6308c0c4681861dd40af824b",
                          "typeString": "literal_string \"_prepareMint::exceeded maxTokens\""
                        },
                        "value": "_prepareMint::exceeded maxTokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d107e18dd5449cb3e3ae144663c6fa6de59970e6308c0c4681861dd40af824b",
                          "typeString": "literal_string \"_prepareMint::exceeded maxTokens\""
                        }
                      ],
                      "id": 4261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11602:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11602:107:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4267,
                  "nodeType": "ExpressionStatement",
                  "src": "11602:107:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4269,
                              "name": "tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3815,
                              "src": "11740:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1658_storage",
                                "typeString": "struct CountersUpgradeable.Counter storage ref"
                              }
                            },
                            "id": 4270,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1670,
                            "src": "11740:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1658_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1658_storage_ptr_$",
                              "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 4271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11740:24:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11768:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11740:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d696e742077697468203020746f6b656e73",
                        "id": 4274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11783:51:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26580127c261cca94c6d9b75057d7537b3fcd5f42cadbc34dde7cfb94906c733",
                          "typeString": "literal_string \"_prepareMint::can only prepare mint with 0 tokens\""
                        },
                        "value": "_prepareMint::can only prepare mint with 0 tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26580127c261cca94c6d9b75057d7537b3fcd5f42cadbc34dde7cfb94906c733",
                          "typeString": "literal_string \"_prepareMint::can only prepare mint with 0 tokens\""
                        }
                      ],
                      "id": 4268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11719:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11719:125:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4276,
                  "nodeType": "ExpressionStatement",
                  "src": "11719:125:24"
                },
                {
                  "expression": {
                    "id": 4283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4277,
                      "name": "mintConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3818,
                      "src": "11854:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                        "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4279,
                          "name": "_numberOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4258,
                          "src": "11878:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4280,
                          "name": "_baseURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4256,
                          "src": "11895:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 4281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11905:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 4278,
                        "name": "MintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3800,
                        "src": "11867:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MintConfig_$3800_storage_ptr_$",
                          "typeString": "type(struct LazySovereignNFT.MintConfig storage pointer)"
                        }
                      },
                      "id": 4282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11867:44:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintConfig_$3800_memory_ptr",
                        "typeString": "struct LazySovereignNFT.MintConfig memory"
                      }
                    },
                    "src": "11854:57:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$3800_storage",
                      "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                    }
                  },
                  "id": 4284,
                  "nodeType": "ExpressionStatement",
                  "src": "11854:57:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4286,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4258,
                        "src": "11938:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4287,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "11955:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 4285,
                      "name": "PrepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3828,
                      "src": "11926:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11926:38:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4289,
                  "nodeType": "EmitStatement",
                  "src": "11921:43:24"
                }
              ]
            },
            "documentation": {
              "id": 4254,
              "nodeType": "StructuredDocumentation",
              "src": "11257:226:24",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_prepareMint",
            "nameLocation": "11497:12:24",
            "parameters": {
              "id": 4259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "11535:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4291,
                  "src": "11519:24:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11519:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4258,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "11561:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4291,
                  "src": "11553:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11553:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11509:73:24"
            },
            "returnParameters": {
              "id": 4260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11592:0:24"
            },
            "scope": 4292,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3772,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 123,
              "src": "874:18:24"
            },
            "id": 3773,
            "nodeType": "InheritanceSpecifier",
            "src": "874:18:24"
          },
          {
            "baseName": {
              "id": 3774,
              "name": "ERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1973,
              "src": "898:17:24"
            },
            "id": 3775,
            "nodeType": "InheritanceSpecifier",
            "src": "898:17:24"
          },
          {
            "baseName": {
              "id": 3776,
              "name": "ERC721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1156,
              "src": "921:17:24"
            },
            "id": 3777,
            "nodeType": "InheritanceSpecifier",
            "src": "921:17:24"
          },
          {
            "baseName": {
              "id": 3778,
              "name": "ITokenCreator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4935,
              "src": "944:13:24"
            },
            "id": 3779,
            "nodeType": "InheritanceSpecifier",
            "src": "944:13:24"
          },
          {
            "baseName": {
              "id": 3780,
              "name": "ERC721BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1340,
              "src": "963:25:24"
            },
            "id": 3781,
            "nodeType": "InheritanceSpecifier",
            "src": "963:25:24"
          },
          {
            "baseName": {
              "id": 3782,
              "name": "ERC2981Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4909,
              "src": "994:18:24"
            },
            "id": 3783,
            "nodeType": "InheritanceSpecifier",
            "src": "994:18:24"
          }
        ],
        "canonicalName": "LazySovereignNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3771,
          "nodeType": "StructuredDocumentation",
          "src": "708:131:24",
          "text": " @title LazySovereignNFT\n @dev This contract implements an ERC721 compliant NFT (Non-Fungible Token) with lazy minting."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4292,
          4909,
          1340,
          4935,
          1156,
          1367,
          1290,
          1973,
          1985,
          123,
          1652,
          265,
          4925
        ],
        "name": "LazySovereignNFT",
        "nameLocation": "850:16:24",
        "scope": 4293,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 24
}